
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xf9\xe6\x91*M\x8dx\x16}\xbd\xb3\x87\x91:\xa9\xba'
    
_lr_action_items = {'A':([199,],[236,]),'SUB':([97,98,100,101,104,105,106,147,150,184,185,],[140,-69,-71,-72,-70,-128,-67,-61,-63,-66,-62,]),'BACO':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,118,123,124,126,128,129,136,137,160,170,171,173,181,210,228,234,237,243,248,252,254,259,261,264,265,266,268,275,278,281,283,284,286,287,],[51,51,-121,-113,-118,-111,-112,-116,-127,-123,-122,-124,-114,-110,-126,-115,-125,-119,-117,-120,-107,-34,-35,-37,-36,-76,-77,-75,-88,-90,-73,-80,-79,-78,-89,-81,-33,-46,-82,-128,-48,-97,-45,-91,-102,-104,-43,-44,-29,-105,-39,-38,-32,-30,-31,-42,]),'VALI':([44,62,99,103,107,110,111,112,114,119,121,122,125,127,130,131,132,133,134,140,141,143,146,148,149,169,186,187,188,191,196,198,202,213,214,215,216,218,222,236,241,250,255,256,267,],[100,100,-68,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-60,100,-59,100,-64,-65,204,100,100,100,100,100,100,100,-54,-55,-53,-52,100,100,100,204,100,100,100,100,]),'ELSE':([108,243,],[-107,263,]),'CIR':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,118,123,124,126,128,129,136,137,160,170,171,173,181,210,228,234,237,243,248,252,254,259,261,264,265,266,268,275,278,281,283,284,286,287,],[79,79,-121,-113,-118,-111,-112,-116,-127,-123,-122,-124,-114,-110,-126,-115,-125,-119,-117,-120,-107,-34,-35,-37,-36,-76,-77,-75,-88,-90,-73,-80,-79,-78,-89,-81,-33,-46,-82,-128,-48,-97,-45,-91,-102,-104,-43,-44,-29,-105,-39,-38,-32,-30,-31,-42,]),'FUN':([1,3,4,5,6,7,12,13,14,19,23,27,28,30,35,40,42,93,108,136,137,181,259,],[-128,11,-128,-2,-3,11,-6,-128,-15,-128,-17,-14,-128,-24,-7,-23,-128,-16,-107,-88,-90,-89,-91,]),'REC':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,118,123,124,126,128,129,136,137,160,170,171,173,181,210,228,234,237,243,248,252,254,259,261,264,265,266,268,275,278,281,283,284,286,287,],[56,56,-121,-113,-118,-111,-112,-116,-127,-123,-122,-124,-114,-110,-126,-115,-125,-119,-117,-120,-107,-34,-35,-37,-36,-76,-77,-75,-88,-90,-73,-80,-79,-78,-89,-81,-33,-46,-82,-128,-48,-97,-45,-91,-102,-104,-43,-44,-29,-105,-39,-38,-32,-30,-31,-42,]),'DIV':([98,100,101,104,105,106,184,],[-69,-71,-72,-70,149,-67,-66,]),'DP':([9,90,],[17,-8,]),'D':([97,98,100,101,104,105,106,142,144,147,150,175,183,184,185,],[-128,-69,-71,-72,-70,-128,-67,-56,-58,-61,-63,213,-57,-66,-62,]),'PR':([0,],[1,]),'PENU':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,118,123,124,126,128,129,136,137,160,170,171,173,181,210,228,234,237,243,248,252,254,259,261,264,265,266,268,275,278,281,283,284,286,287,],[58,58,-121,-113,-118,-111,-112,-116,-127,-123,-122,-124,-114,-110,-126,-115,-125,-119,-117,-120,-107,-34,-35,-37,-36,-76,-77,-75,-88,-90,-73,-80,-79,-78,-89,-81,-33,-46,-82,-128,-48,-97,-45,-91,-102,-104,-43,-44,-29,-105,-39,-38,-32,-30,-31,-42,]),'LB':([13,14,16,17,19,23,24,25,27,28,30,40,42,93,97,98,100,101,104,105,106,116,117,127,136,137,138,142,144,147,150,181,183,184,185,211,212,259,262,263,],[-128,-15,-128,-128,-128,-17,33,33,-14,-128,-24,-23,-128,-16,-128,-69,-71,-72,-70,-128,-67,33,-74,169,-88,-90,169,-56,-58,-61,-63,-89,-57,-66,-62,-103,33,-91,33,-106,]),'LA':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,118,123,124,126,128,129,136,137,160,170,171,173,181,210,228,234,237,243,248,252,254,259,261,264,265,266,268,275,278,281,283,284,286,287,],[59,59,-121,-113,-118,-111,-112,-116,-127,-123,-122,-124,-114,-110,-126,-115,-125,-119,-117,-120,-107,-34,-35,-37,-36,-76,-77,-75,-88,-90,-73,-80,-79,-78,-89,-81,-33,-46,-82,-128,-48,-97,-45,-91,-102,-104,-43,-44,-29,-105,-39,-38,-32,-30,-31,-42,]),'SEQ':([97,98,100,101,104,105,106,142,144,147,150,175,183,184,185,],[-128,-69,-71,-72,-70,-128,-67,-56,-58,-61,-63,214,-57,-66,-62,]),'PENP':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,118,123,124,126,128,129,136,137,160,170,171,173,181,210,228,234,237,243,248,252,254,259,261,264,265,266,268,275,278,281,283,284,286,287,],[46,46,-121,-113,-118,-111,-112,-116,-127,-123,-122,-124,-114,-110,-126,-115,-125,-119,-117,-120,-107,-34,-35,-37,-36,-76,-77,-75,-88,-90,-73,-80,-79,-78,-89,-81,-33,-46,-82,-128,-48,-97,-45,-91,-102,-104,-43,-44,-29,-105,-39,-38,-32,-30,-31,-42,]),'LT':([97,98,100,101,104,105,106,142,144,147,150,175,183,184,185,],[-128,-69,-71,-72,-70,-128,-67,-56,-58,-61,-63,216,-57,-66,-62,]),'RE':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,118,123,124,126,128,129,136,137,160,170,171,173,181,210,228,234,237,243,248,252,254,259,261,264,265,266,268,275,278,281,283,284,286,287,],[62,62,-121,-113,-118,-111,-112,-116,-127,-123,-122,-124,-114,-110,-126,-115,-125,-119,-117,-120,-107,-34,-35,-37,-36,-76,-77,-75,-88,-90,-73,-80,-79,-78,-89,-81,-33,-46,-82,-128,-48,-97,-45,-91,-102,-104,-43,-44,-29,-105,-39,-38,-32,-30,-31,-42,]),'POL':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,118,123,124,126,128,129,136,137,160,170,171,173,181,210,228,234,237,243,248,252,254,259,261,264,265,266,268,275,278,281,283,284,286,287,],[61,61,-121,-113,-118,-111,-112,-116,-127,-123,-122,-124,-114,-110,-126,-115,-125,-119,-117,-120,-107,-34,-35,-37,-36,-76,-77,-75,-88,-90,-73,-80,-79,-78,-89,-81,-33,-46,-82,-128,-48,-97,-45,-91,-102,-104,-43,-44,-29,-105,-39,-38,-32,-30,-31,-42,]),'PEND':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,118,123,124,126,128,129,136,137,160,170,171,173,181,210,228,234,237,243,248,252,254,259,261,264,265,266,268,275,278,281,283,284,286,287,],[64,64,-121,-113,-118,-111,-112,-116,-127,-123,-122,-124,-114,-110,-126,-115,-125,-119,-117,-120,-107,-34,-35,-37,-36,-76,-77,-75,-88,-90,-73,-80,-79,-78,-89,-81,-33,-46,-82,-128,-48,-97,-45,-91,-102,-104,-43,-44,-29,-105,-39,-38,-32,-30,-31,-42,]),'PENC':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,118,123,124,126,128,129,136,137,160,170,171,173,181,210,228,234,237,243,248,252,254,259,261,264,265,266,268,275,278,281,283,284,286,287,],[65,65,-121,-113,-118,-111,-112,-116,-127,-123,-122,-124,-114,-110,-126,-115,-125,-119,-117,-120,-107,-34,-35,-37,-36,-76,-77,-75,-88,-90,-73,-80,-79,-78,-89,-81,-33,-46,-82,-128,-48,-97,-45,-91,-102,-104,-43,-44,-29,-105,-39,-38,-32,-30,-31,-42,]),'LS':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,118,123,124,126,128,129,136,137,160,170,171,173,181,210,228,234,237,243,248,252,254,259,261,264,265,266,268,275,278,281,283,284,286,287,],[68,68,-121,-113,-118,-111,-112,-116,-127,-123,-122,-124,-114,-110,-126,-115,-125,-119,-117,-120,-107,-34,-35,-37,-36,-76,-77,-75,-88,-90,-73,-80,-79,-78,-89,-81,-33,-46,-82,-128,-48,-97,-45,-91,-102,-104,-43,-44,-29,-105,-39,-38,-32,-30,-31,-42,]),'LP':([18,44,46,51,56,57,59,61,62,65,68,69,70,71,74,76,79,80,81,83,99,103,107,110,111,112,114,119,121,122,125,127,130,131,132,133,134,140,141,143,146,148,149,186,187,188,191,196,198,202,213,214,215,216,218,222,236,250,255,256,267,],[26,99,107,110,111,112,114,115,99,119,120,121,122,122,125,130,131,132,133,134,-68,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-60,99,-59,99,-64,-65,99,99,99,99,99,99,99,-54,-55,-53,-52,99,99,99,99,99,99,99,]),'FILL':([193,],[231,]),'$end':([2,34,108,],[0,-1,-107,]),'TRI':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,118,123,124,126,128,129,136,137,160,170,171,173,181,210,228,234,237,243,248,252,254,259,261,264,265,266,268,275,278,281,283,284,286,287,],[69,69,-121,-113,-118,-111,-112,-116,-127,-123,-122,-124,-114,-110,-126,-115,-125,-119,-117,-120,-107,-34,-35,-37,-36,-76,-77,-75,-88,-90,-73,-80,-79,-78,-89,-81,-33,-46,-82,-128,-48,-97,-45,-91,-102,-104,-43,-44,-29,-105,-39,-38,-32,-30,-31,-42,]),'PENW':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,118,123,124,126,128,129,136,137,160,170,171,173,181,210,228,234,237,243,248,252,254,259,261,264,265,266,268,275,278,281,283,284,286,287,],[57,57,-121,-113,-118,-111,-112,-116,-127,-123,-122,-124,-114,-110,-126,-115,-125,-119,-117,-120,-107,-34,-35,-37,-36,-76,-77,-75,-88,-90,-73,-80,-79,-78,-89,-81,-33,-46,-82,-128,-48,-97,-45,-91,-102,-104,-43,-44,-29,-105,-39,-38,-32,-30,-31,-42,]),'C':([32,36,43,45,91,97,98,100,101,102,104,105,106,135,139,142,144,147,150,151,152,153,158,159,161,163,164,166,167,176,177,178,182,183,184,185,204,205,206,207,209,226,227,233,235,238,247,260,272,],[-128,88,95,-22,-13,-128,-69,-71,-72,-21,-70,-128,-67,88,-128,-56,-58,-61,-63,186,187,188,193,-47,196,198,199,-87,202,193,193,222,95,-57,-66,-62,-27,-92,-28,-93,241,250,193,255,256,202,267,241,193,]),'B':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,118,123,124,126,128,129,136,137,160,170,171,173,181,210,228,234,237,243,248,252,254,259,261,264,265,266,268,275,278,281,283,284,286,287,],[70,70,-121,-113,-118,-111,-112,-116,-127,-123,-122,-124,-114,-110,-126,-115,-125,-119,-117,-120,-107,-34,-35,-37,-36,-76,-77,-75,-88,-90,-73,-80,-79,-78,-89,-81,-33,-46,-82,-128,-48,-97,-45,-91,-102,-104,-43,-44,-29,-105,-39,-38,-32,-30,-31,-42,]),'RB':([33,47,48,49,50,52,53,54,55,60,63,66,67,72,73,75,77,78,82,84,85,86,108,109,113,118,123,124,126,128,129,136,137,160,170,171,173,181,204,205,206,207,208,209,210,228,234,237,240,242,243,248,252,254,259,260,261,264,265,266,268,274,275,278,281,283,284,286,287,],[-128,108,-128,-121,-113,-118,-111,-112,-116,-127,-123,-122,-109,-124,-114,-110,-126,-115,-125,-119,-117,-120,-107,-108,-34,-35,-37,-36,-76,-77,-75,-88,-90,-73,-80,-79,-78,-89,-27,-92,-28,-93,239,-128,-81,-33,-46,-82,-94,-96,-128,-48,-97,-45,-91,-128,-102,-104,-43,-44,-29,-95,-105,-39,-38,-32,-30,-31,-42,]),'F':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,118,123,124,126,128,129,136,137,160,170,171,173,181,210,228,234,237,243,248,252,254,259,261,264,265,266,268,275,278,281,283,284,286,287,],[71,71,-121,-113,-118,-111,-112,-116,-127,-123,-122,-124,-114,-110,-126,-115,-125,-119,-117,-120,-107,-34,-35,-37,-36,-76,-77,-75,-88,-90,-73,-80,-79,-78,-89,-81,-33,-46,-82,-128,-48,-97,-45,-91,-102,-104,-43,-44,-29,-105,-39,-38,-32,-30,-31,-42,]),'M':([98,100,101,104,105,106,184,],[-69,-71,-72,-70,148,-67,-66,]),'L':([13,19,23,28,33,42,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,93,108,113,118,123,124,126,128,129,136,137,160,170,171,173,181,210,228,234,237,243,248,252,254,259,261,264,265,266,268,275,278,281,283,284,286,287,],[-128,29,-17,29,29,-128,29,-121,-113,-118,-111,-112,-116,-127,-123,-122,-124,-114,-110,-126,-115,-125,-119,-117,-120,-16,-107,-34,-35,-37,-36,-76,-77,-75,-88,-90,-73,-80,-79,-78,-89,-81,-33,-46,-82,-128,-48,-97,-45,-91,-102,-104,-43,-44,-29,-105,-39,-38,-32,-30,-31,-42,]),'VALF':([44,62,99,103,107,110,111,112,114,119,121,122,125,127,130,131,132,133,134,140,141,143,146,148,149,169,186,187,188,191,196,198,202,213,214,215,216,218,222,236,241,250,255,256,267,],[101,101,-68,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-60,101,-59,101,-64,-65,206,101,101,101,101,101,101,101,-54,-55,-53,-52,101,101,101,206,101,101,101,101,]),'ADD':([97,98,100,101,104,105,106,142,144,147,150,155,156,157,183,184,185,230,],[143,-69,-71,-72,-70,-128,-67,-56,-58,-61,-63,-100,191,-101,-57,-66,-62,191,]),'STR':([114,191,],[155,155,]),'V':([4,16,17,],[13,13,13,]),'RP':([26,36,37,39,87,89,91,97,98,100,101,104,105,106,125,135,142,144,145,147,150,154,155,156,157,158,159,162,165,166,167,168,174,175,176,177,179,180,183,184,185,190,192,194,195,201,203,217,219,220,221,225,227,230,231,238,244,251,253,257,258,269,271,272,276,280,],[-128,-128,90,-10,-9,-12,-13,-128,-69,-71,-72,-70,-128,-67,-128,-128,-56,-58,184,-61,-63,189,-100,-128,-101,-128,-47,197,200,-87,-128,-84,211,-128,-128,-128,223,-11,-57,-66,-62,229,-99,232,-41,-83,-86,-49,-51,245,246,249,-128,-128,-40,-128,-50,270,-98,273,-85,277,279,-128,282,285,]),'GL':([1,],[4,]),'EQ':([32,74,92,139,],[44,127,138,44,]),'ID':([11,20,21,22,33,38,41,44,48,49,50,52,53,54,55,60,62,63,66,72,73,75,77,78,82,84,85,86,95,99,103,107,108,110,111,112,113,114,115,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,140,141,143,146,148,149,160,169,170,171,173,181,186,187,188,191,196,198,202,210,213,214,215,216,218,222,228,234,236,237,241,243,248,250,252,254,255,256,259,261,264,265,266,267,268,275,278,281,283,284,286,287,],[18,-25,-26,32,74,91,92,104,74,-121,-113,-118,-111,-112,-116,-127,104,-123,-122,-124,-114,-110,-126,-115,-125,-119,-117,-120,139,-68,104,104,-107,104,104,104,-34,104,159,-35,104,159,104,104,-37,-36,104,-76,104,-77,-75,104,104,104,104,104,-88,-90,-60,104,-59,104,-64,-65,-73,207,-80,-79,-78,-89,104,104,104,104,104,104,104,-81,-54,-55,-53,-52,104,104,-33,-46,104,-82,207,-128,-48,104,-97,-45,104,104,-91,-102,-104,-43,-44,104,-29,-105,-39,-38,-32,-30,-31,-42,]),'IF':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,118,123,124,126,128,129,136,137,160,170,171,173,181,210,228,234,237,243,248,252,254,259,261,264,265,266,268,275,278,281,283,284,286,287,],[76,76,-121,-113,-118,-111,-112,-116,-127,-123,-122,-124,-114,-110,-126,-115,-125,-119,-117,-120,-107,-34,-35,-37,-36,-76,-77,-75,-88,-90,-73,-80,-79,-78,-89,-81,-33,-46,-82,-128,-48,-97,-45,-91,-102,-104,-43,-44,-29,-105,-39,-38,-32,-30,-31,-42,]),'SETC':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,118,123,124,126,128,129,136,137,160,170,171,173,181,210,228,234,237,243,248,252,254,259,261,264,265,266,268,275,278,281,283,284,286,287,],[81,81,-121,-113,-118,-111,-112,-116,-127,-123,-122,-124,-114,-110,-126,-115,-125,-119,-117,-120,-107,-34,-35,-37,-36,-76,-77,-75,-88,-90,-73,-80,-79,-78,-89,-81,-33,-46,-82,-128,-48,-97,-45,-91,-102,-104,-43,-44,-29,-105,-39,-38,-32,-30,-31,-42,]),'INT':([13,26,29,42,88,],[20,20,20,20,20,]),'SQ':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,118,123,124,126,128,129,136,137,160,170,171,173,181,210,228,234,237,243,248,252,254,259,261,264,265,266,268,275,278,281,283,284,286,287,],[80,80,-121,-113,-118,-111,-112,-116,-127,-123,-122,-124,-114,-110,-126,-115,-125,-119,-117,-120,-107,-34,-35,-37,-36,-76,-77,-75,-88,-90,-73,-80,-79,-78,-89,-81,-33,-46,-82,-128,-48,-97,-45,-91,-102,-104,-43,-44,-29,-105,-39,-38,-32,-30,-31,-42,]),'FLOAT':([13,26,29,42,88,],[21,21,21,21,21,]),'MT':([97,98,100,101,104,105,106,142,144,147,150,175,183,184,185,],[-128,-69,-71,-72,-70,-128,-67,-56,-58,-61,-63,215,-57,-66,-62,]),'ARC':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,118,123,124,126,128,129,136,137,160,170,171,173,181,210,228,234,237,243,248,252,254,259,261,264,265,266,268,275,278,281,283,284,286,287,],[83,83,-121,-113,-118,-111,-112,-116,-127,-123,-122,-124,-114,-110,-126,-115,-125,-119,-117,-120,-107,-34,-35,-37,-36,-76,-77,-75,-88,-90,-73,-80,-79,-78,-89,-81,-33,-46,-82,-128,-48,-97,-45,-91,-102,-104,-43,-44,-29,-105,-39,-38,-32,-30,-31,-42,]),'SC':([31,32,43,45,58,64,92,94,96,97,98,100,101,102,104,105,106,139,142,144,147,150,172,182,183,184,185,189,197,200,223,224,229,232,239,245,246,249,270,273,277,279,282,285,],[42,-128,-128,-22,113,118,137,-18,-20,-128,-69,-71,-72,-21,-70,-128,-67,-128,-56,-58,-61,-63,210,-128,-57,-66,-62,228,234,237,248,-19,252,254,259,265,266,268,278,281,283,284,286,287,]),'MAIN':([1,3,4,5,6,7,8,10,12,13,14,15,19,23,27,28,30,35,40,42,93,108,136,137,181,259,],[-128,-128,-128,-2,-3,-128,16,-5,-6,-128,-15,-4,-128,-17,-14,-128,-24,-7,-23,-128,-16,-107,-88,-90,-89,-91,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'fun5':([26,88,],[36,135,]),'fun4':([36,135,],[87,180,]),'block3':([33,48,],[47,109,]),'block2':([33,48,],[48,48,]),'vars':([4,16,17,],[12,24,25,]),'fun2':([3,7,],[9,9,]),'lstrip':([33,48,],[50,50,]),'move':([33,48,],[52,52,]),'tria':([33,48,],[53,53,]),'con2':([243,],[261,]),'poly':([33,48,],[54,54,]),'lab2':([156,230,],[190,253,]),'colors':([33,48,],[55,55,]),'globals':([1,],[5,]),'WID2':([74,],[129,]),'term3':([105,],[146,]),'varAss':([127,],[171,]),'lista3':([169,],[208,]),'term2':([105,],[147,]),'condRP':([174,],[212,]),'functions':([3,7,],[7,7,]),'valExp':([44,62,103,107,110,111,112,114,119,121,122,125,127,130,131,132,133,134,141,146,186,187,188,191,196,198,202,218,222,236,250,255,256,267,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'fun3':([26,],[37,]),'assigment':([74,],[126,]),'exp3':([97,],[141,]),'exp2':([97,],[142,]),'rep':([33,48,],[60,60,]),'func4':([125,202,],[167,238,]),'funCall':([74,],[128,]),'li4':([209,260,],[240,274,]),'pen':([33,48,],[63,63,]),'ex2':([175,],[217,]),'condition':([33,48,],[66,66,]),'p_fill':([158,176,177,227,272,],[194,220,221,251,280,]),'prog':([0,],[2,]),'figure':([33,48,],[49,49,]),'type':([13,26,29,42,88,],[22,38,41,22,38,]),'empty':([1,3,4,7,13,16,17,19,26,28,32,33,36,42,43,48,97,105,125,135,139,156,158,167,175,176,177,182,209,227,230,238,243,260,272,],[6,10,14,10,23,14,14,30,39,30,45,67,89,23,96,67,144,150,168,89,45,192,195,203,219,195,195,96,242,195,192,203,264,242,195,]),'ex3':([175,],[218,]),'var5':([19,28,],[27,40,]),'var4':([32,139,],[43,182,]),'expresion':([130,],[174,]),'con3':([243,],[262,]),'prelistAss':([92,],[136,]),'idList':([115,120,],[158,162,]),'var3':([22,],[31,]),'var2':([13,42,],[19,93,]),'func3':([167,238,],[201,258,]),'rep3':([62,],[116,]),'mueve2':([70,71,],[123,124,]),'lab':([33,48,],[72,72,]),'stExp':([114,191,],[156,230,]),'one_par':([33,48,],[73,73,]),'fact2':([44,62,103,107,110,111,112,114,119,121,122,125,127,130,131,132,133,134,141,146,186,187,188,191,196,198,202,218,222,236,250,255,256,267,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'rect':([33,48,],[75,75,]),'fact4':([44,62,103,107,110,111,112,114,119,121,122,125,127,130,131,132,133,134,141,146,186,187,188,191,196,198,202,218,222,236,250,255,256,267,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'p2':([1,],[3,]),'p3':([3,7,],[8,15,]),'term':([44,62,103,107,110,111,112,114,119,121,122,125,127,130,131,132,133,134,141,146,186,187,188,191,196,198,202,218,222,236,250,255,256,267,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,185,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'WID':([33,48,],[77,77,]),'p_arc':([33,48,],[78,78,]),'val':([169,241,],[205,205,]),'func2':([125,],[165,]),'tipeAss':([127,],[173,]),'list':([19,28,33,48,],[28,28,82,82,]),'var33':([43,182,],[94,224,]),'fact':([44,62,103,107,110,111,112,114,119,121,122,125,127,130,131,132,133,134,141,146,186,187,188,191,196,198,202,218,222,236,250,255,256,267,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'exp':([44,62,103,107,110,111,112,114,119,121,122,125,127,130,131,132,133,134,141,186,187,188,191,196,198,202,218,222,236,250,255,256,267,],[102,117,145,151,152,153,154,157,161,163,164,166,172,175,176,177,178,179,183,225,226,227,157,233,235,166,244,247,257,269,271,272,276,]),'position':([33,48,],[84,84,]),'p_width':([33,48,],[85,85,]),'listAss':([127,138,],[170,181,]),'penwrite':([33,48,],[86,86,]),'block':([24,25,116,212,262,],[34,35,160,243,275,]),'lista2':([169,241,],[209,260,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> PR p2 p3 MAIN vars block','prog',6,'p_prog','drawme_yacc.py',26),
  ('p2 -> globals','p2',1,'p_p2','drawme_yacc.py',32),
  ('p2 -> empty','p2',1,'p_p2','drawme_yacc.py',33),
  ('p3 -> functions p3','p3',2,'p_p3','drawme_yacc.py',36),
  ('p3 -> empty','p3',1,'p_p3','drawme_yacc.py',37),
  ('globals -> GL vars','globals',2,'p_globals','drawme_yacc.py',40),
  ('functions -> fun2 DP vars block','functions',4,'p_functions','drawme_yacc.py',46),
  ('fun2 -> FUN ID LP fun3 RP','fun2',5,'p_fun2','drawme_yacc.py',50),
  ('fun3 -> fun5 fun4','fun3',2,'p_fun3','drawme_yacc.py',57),
  ('fun3 -> empty','fun3',1,'p_fun3','drawme_yacc.py',58),
  ('fun4 -> C fun5 fun4','fun4',3,'p_fun4','drawme_yacc.py',62),
  ('fun4 -> empty','fun4',1,'p_fun4','drawme_yacc.py',63),
  ('fun5 -> type ID','fun5',2,'p_fun5','drawme_yacc.py',66),
  ('vars -> V var2 var5','vars',3,'p_vars','drawme_yacc.py',71),
  ('vars -> empty','vars',1,'p_vars','drawme_yacc.py',72),
  ('var2 -> type var3 SC var2','var2',4,'p_var2','drawme_yacc.py',75),
  ('var2 -> empty','var2',1,'p_var2','drawme_yacc.py',76),
  ('var3 -> ID var4 var33','var3',3,'p_var3','drawme_yacc.py',79),
  ('var33 -> C ID var4 var33','var33',4,'p_var33','drawme_yacc.py',86),
  ('var33 -> empty','var33',1,'p_var33','drawme_yacc.py',87),
  ('var4 -> EQ exp','var4',2,'p_var4','drawme_yacc.py',95),
  ('var4 -> empty','var4',1,'p_var4','drawme_yacc.py',96),
  ('var5 -> list var5','var5',2,'p_var5','drawme_yacc.py',99),
  ('var5 -> empty','var5',1,'p_var5','drawme_yacc.py',100),
  ('type -> INT','type',1,'p_type','drawme_yacc.py',103),
  ('type -> FLOAT','type',1,'p_type','drawme_yacc.py',104),
  ('val -> VALI','val',1,'p_val','drawme_yacc.py',109),
  ('val -> VALF','val',1,'p_val','drawme_yacc.py',110),
  ('position -> PENP LP exp C exp RP SC','position',7,'p_position','drawme_yacc.py',113),
  ('colors -> PENC LP exp C exp C exp RP SC','colors',9,'p_colors','drawme_yacc.py',120),
  ('colors -> SETC LP exp C exp C exp RP SC','colors',9,'p_colors','drawme_yacc.py',121),
  ('colors -> BACO LP exp C exp C exp RP SC','colors',9,'p_colors','drawme_yacc.py',122),
  ('p_width -> PENW LP exp RP SC','p_width',5,'p_p_width','drawme_yacc.py',135),
  ('penwrite -> PENU SC','penwrite',2,'p_penwrite','drawme_yacc.py',142),
  ('penwrite -> PEND SC','penwrite',2,'p_penwrite','drawme_yacc.py',143),
  ('move -> F mueve2','move',2,'p_move','drawme_yacc.py',153),
  ('move -> B mueve2','move',2,'p_move','drawme_yacc.py',154),
  ('mueve2 -> LP exp C A exp RP SC','mueve2',7,'p_mueve2','drawme_yacc.py',157),
  ('rect -> REC LP exp C exp p_fill RP SC','rect',8,'p_rect','drawme_yacc.py',160),
  ('p_fill -> C FILL','p_fill',2,'p_p_fill','drawme_yacc.py',167),
  ('p_fill -> empty','p_fill',1,'p_p_fill','drawme_yacc.py',168),
  ('tria -> TRI LP exp C exp C exp p_fill RP SC','tria',10,'p_tria','drawme_yacc.py',178),
  ('one_par -> CIR LP exp p_fill RP SC','one_par',6,'p_one_par','drawme_yacc.py',185),
  ('one_par -> SQ LP exp p_fill RP SC','one_par',6,'p_one_par','drawme_yacc.py',186),
  ('poly -> POL LP idList p_fill RP SC','poly',6,'p_poly','drawme_yacc.py',197),
  ('lstrip -> LS LP idList RP SC','lstrip',5,'p_lstrip','drawme_yacc.py',204),
  ('idList -> ID','idList',1,'p_idList','drawme_yacc.py',211),
  ('p_arc -> ARC LP exp RP SC','p_arc',5,'p_p_arc','drawme_yacc.py',218),
  ('expresion -> exp ex2','expresion',2,'p_expresion','drawme_yacc.py',226),
  ('ex2 -> ex3 exp','ex2',2,'p_ex2','drawme_yacc.py',229),
  ('ex2 -> empty','ex2',1,'p_ex2','drawme_yacc.py',230),
  ('ex3 -> LT','ex3',1,'p_ex3','drawme_yacc.py',253),
  ('ex3 -> MT','ex3',1,'p_ex3','drawme_yacc.py',254),
  ('ex3 -> D','ex3',1,'p_ex3','drawme_yacc.py',255),
  ('ex3 -> SEQ','ex3',1,'p_ex3','drawme_yacc.py',256),
  ('exp -> term exp2','exp',2,'p_exp','drawme_yacc.py',260),
  ('exp2 -> exp3 exp','exp2',2,'p_exp2','drawme_yacc.py',263),
  ('exp2 -> empty','exp2',1,'p_exp2','drawme_yacc.py',264),
  ('exp3 -> ADD','exp3',1,'p_exp3','drawme_yacc.py',283),
  ('exp3 -> SUB','exp3',1,'p_exp3','drawme_yacc.py',284),
  ('term -> fact term2','term',2,'p_term','drawme_yacc.py',288),
  ('term2 -> term3 term','term2',2,'p_term2','drawme_yacc.py',291),
  ('term2 -> empty','term2',1,'p_term2','drawme_yacc.py',292),
  ('term3 -> M','term3',1,'p_term3','drawme_yacc.py',310),
  ('term3 -> DIV','term3',1,'p_term3','drawme_yacc.py',311),
  ('fact -> fact2 exp RP','fact',3,'p_fact','drawme_yacc.py',315),
  ('fact -> fact4','fact',1,'p_fact','drawme_yacc.py',316),
  ('fact2 -> LP','fact2',1,'p_fact2','drawme_yacc.py',321),
  ('fact4 -> valExp','fact4',1,'p_fact4','drawme_yacc.py',325),
  ('fact4 -> ID','fact4',1,'p_fact4','drawme_yacc.py',326),
  ('valExp -> VALI','valExp',1,'p_valExp','drawme_yacc.py',333),
  ('valExp -> VALF','valExp',1,'p_valExp','drawme_yacc.py',334),
  ('rep -> RE rep3 block','rep',3,'p_rep','drawme_yacc.py',346),
  ('rep3 -> exp','rep3',1,'p_rep3','drawme_yacc.py',366),
  ('WID -> ID WID2','WID',2,'p_WID','drawme_yacc.py',380),
  ('WID2 -> assigment','WID2',1,'p_WID2','drawme_yacc.py',409),
  ('WID2 -> funCall','WID2',1,'p_WID2','drawme_yacc.py',410),
  ('assigment -> EQ tipeAss','assigment',2,'p_assigment','drawme_yacc.py',413),
  ('tipeAss -> varAss','tipeAss',1,'p_tipeAss','drawme_yacc.py',418),
  ('tipeAss -> listAss','tipeAss',1,'p_tipeAss','drawme_yacc.py',419),
  ('varAss -> exp SC','varAss',2,'p_varAss','drawme_yacc.py',422),
  ('funCall -> LP func2 RP SC','funCall',4,'p_funCall','drawme_yacc.py',425),
  ('func2 -> func4 func3','func2',2,'p_func2','drawme_yacc.py',430),
  ('func2 -> empty','func2',1,'p_func2','drawme_yacc.py',431),
  ('func3 -> C func4 func3','func3',3,'p_func3','drawme_yacc.py',434),
  ('func3 -> empty','func3',1,'p_func3','drawme_yacc.py',435),
  ('func4 -> exp','func4',1,'p_func4','drawme_yacc.py',438),
  ('list -> L type ID prelistAss','list',4,'p_list','drawme_yacc.py',442),
  ('prelistAss -> EQ listAss','prelistAss',2,'p_prelistAss','drawme_yacc.py',449),
  ('prelistAss -> SC','prelistAss',1,'p_prelistAss','drawme_yacc.py',450),
  ('listAss -> LB lista3 RB SC','listAss',4,'p_listAss','drawme_yacc.py',453),
  ('lista2 -> val','lista2',1,'p_lista2','drawme_yacc.py',456),
  ('lista2 -> ID','lista2',1,'p_lista2','drawme_yacc.py',457),
  ('lista3 -> lista2 li4','lista3',2,'p_lista3','drawme_yacc.py',460),
  ('li4 -> C lista2 li4','li4',3,'p_li4','drawme_yacc.py',463),
  ('li4 -> empty','li4',1,'p_li4','drawme_yacc.py',464),
  ('lab -> LA LP stExp lab2 RP SC','lab',6,'p_lab','drawme_yacc.py',467),
  ('lab2 -> ADD stExp lab2','lab2',3,'p_lab2','drawme_yacc.py',474),
  ('lab2 -> empty','lab2',1,'p_lab2','drawme_yacc.py',475),
  ('stExp -> STR','stExp',1,'p_stExp','drawme_yacc.py',478),
  ('stExp -> exp','stExp',1,'p_stExp','drawme_yacc.py',479),
  ('condition -> IF LP expresion condRP block con2','condition',6,'p_condition','drawme_yacc.py',482),
  ('condRP -> RP','condRP',1,'p_condRP','drawme_yacc.py',491),
  ('con2 -> empty','con2',1,'p_con2','drawme_yacc.py',504),
  ('con2 -> con3 block','con2',2,'p_con2','drawme_yacc.py',505),
  ('con3 -> ELSE','con3',1,'p_con3','drawme_yacc.py',508),
  ('block -> LB block3 RB','block',3,'p_block','drawme_yacc.py',520),
  ('block3 -> block2 block3','block3',2,'p_block3','drawme_yacc.py',523),
  ('block3 -> empty','block3',1,'p_block3','drawme_yacc.py',524),
  ('figure -> rect','figure',1,'p_figure','drawme_yacc.py',527),
  ('figure -> tria','figure',1,'p_figure','drawme_yacc.py',528),
  ('figure -> poly','figure',1,'p_figure','drawme_yacc.py',529),
  ('figure -> lstrip','figure',1,'p_figure','drawme_yacc.py',530),
  ('figure -> one_par','figure',1,'p_figure','drawme_yacc.py',531),
  ('figure -> p_arc','figure',1,'p_figure','drawme_yacc.py',532),
  ('pen -> colors','pen',1,'p_pen','drawme_yacc.py',535),
  ('pen -> p_width','pen',1,'p_pen','drawme_yacc.py',536),
  ('pen -> move','pen',1,'p_pen','drawme_yacc.py',537),
  ('pen -> position','pen',1,'p_pen','drawme_yacc.py',538),
  ('pen -> penwrite','pen',1,'p_pen','drawme_yacc.py',539),
  ('block2 -> figure','block2',1,'p_block2','drawme_yacc.py',542),
  ('block2 -> condition','block2',1,'p_block2','drawme_yacc.py',543),
  ('block2 -> pen','block2',1,'p_block2','drawme_yacc.py',544),
  ('block2 -> lab','block2',1,'p_block2','drawme_yacc.py',545),
  ('block2 -> list','block2',1,'p_block2','drawme_yacc.py',546),
  ('block2 -> WID','block2',1,'p_block2','drawme_yacc.py',547),
  ('block2 -> rep','block2',1,'p_block2','drawme_yacc.py',548),
  ('empty -> <empty>','empty',0,'p_empty','drawme_yacc.py',551),
]
