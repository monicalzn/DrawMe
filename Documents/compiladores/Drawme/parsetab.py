
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '%\x00\xb3\xb0\xed7\xc7\xcc*\xf8\x81a\x95\xfc\x98\xc2'
    
_lr_action_items = {'A':([194,],[229,]),'SUB':([93,94,96,97,100,101,102,145,148,180,181,],[138,-70,-72,-73,-71,-125,-68,-62,-64,-67,-63,]),'BACO':([33,47,48,49,50,51,52,53,58,61,64,71,72,74,76,77,81,83,84,85,104,108,112,114,115,119,120,122,124,125,129,134,135,158,167,168,170,177,205,221,227,230,236,240,244,246,251,253,255,256,257,258,264,265,268,269,271,],[65,65,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-29,-31,-37,-36,-76,-77,-75,-30,-87,-89,-74,-80,-79,-78,-88,-81,-33,-46,-82,-125,-49,-96,-45,-90,-101,-102,-43,-44,-28,-103,-39,-38,-32,-42,]),'VALI':([43,60,95,99,103,106,107,109,113,117,118,121,123,126,127,128,130,138,139,141,144,146,147,166,182,183,186,191,193,197,207,208,209,210,212,229,234,247,248,],[96,96,-69,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-61,96,-60,96,-65,-66,199,96,96,96,96,96,96,-55,-56,-54,-53,96,96,199,96,96,]),'ELSE':([104,236,],[-104,254,]),'CIR':([33,47,48,49,50,51,52,53,58,61,64,71,72,74,76,77,81,83,84,85,104,108,112,114,115,119,120,122,124,125,129,134,135,158,167,168,170,177,205,221,227,230,236,240,244,246,251,253,255,256,257,258,264,265,268,269,271,],[78,78,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-29,-31,-37,-36,-76,-77,-75,-30,-87,-89,-74,-80,-79,-78,-88,-81,-33,-46,-82,-125,-49,-96,-45,-90,-101,-102,-43,-44,-28,-103,-39,-38,-32,-42,]),'FUN':([1,3,4,5,6,7,12,13,14,19,23,27,28,30,35,39,41,89,104,134,135,177,251,],[-125,11,-125,-2,-3,11,-6,-125,-14,-125,-16,-13,-125,-23,-7,-22,-125,-15,-104,-87,-89,-88,-90,]),'REC':([33,47,48,49,50,51,52,53,58,61,64,71,72,74,76,77,81,83,84,85,104,108,112,114,115,119,120,122,124,125,129,134,135,158,167,168,170,177,205,221,227,230,236,240,244,246,251,253,255,256,257,258,264,265,268,269,271,],[54,54,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-29,-31,-37,-36,-76,-77,-75,-30,-87,-89,-74,-80,-79,-78,-88,-81,-33,-46,-82,-125,-49,-96,-45,-90,-101,-102,-43,-44,-28,-103,-39,-38,-32,-42,]),'DIV':([94,96,97,100,101,102,180,],[-70,-72,-73,-71,147,-68,-67,]),'DP':([9,86,],[17,-8,]),'D':([93,94,96,97,100,101,102,140,142,145,148,172,179,180,181,],[-125,-70,-72,-73,-71,-125,-68,-57,-59,-62,-64,207,-58,-67,-63,]),'PR':([0,],[1,]),'PENU':([33,47,48,49,50,51,52,53,58,61,64,71,72,74,76,77,81,83,84,85,104,108,112,114,115,119,120,122,124,125,129,134,135,158,167,168,170,177,205,221,227,230,236,240,244,246,251,253,255,256,257,258,264,265,268,269,271,],[56,56,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-29,-31,-37,-36,-76,-77,-75,-30,-87,-89,-74,-80,-79,-78,-88,-81,-33,-46,-82,-125,-49,-96,-45,-90,-101,-102,-43,-44,-28,-103,-39,-38,-32,-42,]),'LB':([13,14,16,17,19,23,24,25,27,28,30,39,41,89,93,94,96,97,100,101,102,111,123,134,135,136,140,142,145,148,177,179,180,181,206,251,254,],[-125,-14,-125,-125,-125,-16,33,33,-13,-125,-23,-22,-125,-15,-125,-70,-72,-73,-71,-125,-68,33,166,-87,-89,166,-57,-59,-62,-64,-88,-58,-67,-63,33,-90,33,]),'LA':([33,47,48,49,50,51,52,53,58,61,64,71,72,74,76,77,81,83,84,85,104,108,112,114,115,119,120,122,124,125,129,134,135,158,167,168,170,177,205,221,227,230,236,240,244,246,251,253,255,256,257,258,264,265,268,269,271,],[57,57,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-29,-31,-37,-36,-76,-77,-75,-30,-87,-89,-74,-80,-79,-78,-88,-81,-33,-46,-82,-125,-49,-96,-45,-90,-101,-102,-43,-44,-28,-103,-39,-38,-32,-42,]),'SEQ':([93,94,96,97,100,101,102,140,142,145,148,172,179,180,181,],[-125,-70,-72,-73,-71,-125,-68,-57,-59,-62,-64,208,-58,-67,-63,]),'PENP':([33,47,48,49,50,51,52,53,58,61,64,71,72,74,76,77,81,83,84,85,104,108,112,114,115,119,120,122,124,125,129,134,135,158,167,168,170,177,205,221,227,230,236,240,244,246,251,253,255,256,257,258,264,265,268,269,271,],[45,45,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-29,-31,-37,-36,-76,-77,-75,-30,-87,-89,-74,-80,-79,-78,-88,-81,-33,-46,-82,-125,-49,-96,-45,-90,-101,-102,-43,-44,-28,-103,-39,-38,-32,-42,]),'LT':([93,94,96,97,100,101,102,140,142,145,148,172,179,180,181,],[-125,-70,-72,-73,-71,-125,-68,-57,-59,-62,-64,210,-58,-67,-63,]),'RE':([33,47,48,49,50,51,52,53,58,61,64,71,72,74,76,77,81,83,84,85,104,108,112,114,115,119,120,122,124,125,129,134,135,158,167,168,170,177,205,221,227,230,236,240,244,246,251,253,255,256,257,258,264,265,268,269,271,],[60,60,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-29,-31,-37,-36,-76,-77,-75,-30,-87,-89,-74,-80,-79,-78,-88,-81,-33,-46,-82,-125,-49,-96,-45,-90,-101,-102,-43,-44,-28,-103,-39,-38,-32,-42,]),'POL':([33,47,48,49,50,51,52,53,58,61,64,71,72,74,76,77,81,83,84,85,104,108,112,114,115,119,120,122,124,125,129,134,135,158,167,168,170,177,205,221,227,230,236,240,244,246,251,253,255,256,257,258,264,265,268,269,271,],[59,59,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-29,-31,-37,-36,-76,-77,-75,-30,-87,-89,-74,-80,-79,-78,-88,-81,-33,-46,-82,-125,-49,-96,-45,-90,-101,-102,-43,-44,-28,-103,-39,-38,-32,-42,]),'PEND':([33,47,48,49,50,51,52,53,58,61,64,71,72,74,76,77,81,83,84,85,104,108,112,114,115,119,120,122,124,125,129,134,135,158,167,168,170,177,205,221,227,230,236,240,244,246,251,253,255,256,257,258,264,265,268,269,271,],[62,62,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-29,-31,-37,-36,-76,-77,-75,-30,-87,-89,-74,-80,-79,-78,-88,-81,-33,-46,-82,-125,-49,-96,-45,-90,-101,-102,-43,-44,-28,-103,-39,-38,-32,-42,]),'PENC':([33,47,48,49,50,51,52,53,58,61,64,71,72,74,76,77,81,83,84,85,104,108,112,114,115,119,120,122,124,125,129,134,135,158,167,168,170,177,205,221,227,230,236,240,244,246,251,253,255,256,257,258,264,265,268,269,271,],[63,63,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-29,-31,-37,-36,-76,-77,-75,-30,-87,-89,-74,-80,-79,-78,-88,-81,-33,-46,-82,-125,-49,-96,-45,-90,-101,-102,-43,-44,-28,-103,-39,-38,-32,-42,]),'LS':([33,47,48,49,50,51,52,53,58,61,64,71,72,74,76,77,81,83,84,85,104,108,112,114,115,119,120,122,124,125,129,134,135,158,167,168,170,177,205,221,227,230,236,240,244,246,251,253,255,256,257,258,264,265,268,269,271,],[67,67,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-29,-31,-37,-36,-76,-77,-75,-30,-87,-89,-74,-80,-79,-78,-88,-81,-33,-46,-82,-125,-49,-96,-45,-90,-101,-102,-43,-44,-28,-103,-39,-38,-32,-42,]),'LP':([18,43,45,54,55,57,59,60,63,65,67,68,69,70,73,75,78,79,80,82,95,99,103,106,107,109,113,117,118,121,123,126,127,128,130,138,139,141,144,146,147,182,183,186,191,193,197,207,208,209,210,212,229,247,248,],[26,95,103,106,107,109,110,95,113,113,116,117,118,118,121,126,127,128,113,130,-69,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-61,95,-60,95,-65,-66,95,95,95,95,95,95,-55,-56,-54,-53,95,95,95,95,]),'FILL':([188,],[224,]),'$end':([2,34,104,],[0,-1,-104,]),'TRI':([33,47,48,49,50,51,52,53,58,61,64,71,72,74,76,77,81,83,84,85,104,108,112,114,115,119,120,122,124,125,129,134,135,158,167,168,170,177,205,221,227,230,236,240,244,246,251,253,255,256,257,258,264,265,268,269,271,],[68,68,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-29,-31,-37,-36,-76,-77,-75,-30,-87,-89,-74,-80,-79,-78,-88,-81,-33,-46,-82,-125,-49,-96,-45,-90,-101,-102,-43,-44,-28,-103,-39,-38,-32,-42,]),'PENW':([33,47,48,49,50,51,52,53,58,61,64,71,72,74,76,77,81,83,84,85,104,108,112,114,115,119,120,122,124,125,129,134,135,158,167,168,170,177,205,221,227,230,236,240,244,246,251,253,255,256,257,258,264,265,268,269,271,],[55,55,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-29,-31,-37,-36,-76,-77,-75,-30,-87,-89,-74,-80,-79,-78,-88,-81,-33,-46,-82,-125,-49,-96,-45,-90,-101,-102,-43,-44,-28,-103,-39,-38,-32,-42,]),'C':([32,42,44,87,93,94,96,97,98,100,101,102,134,135,137,140,142,145,148,149,150,155,156,157,159,161,162,164,173,174,177,178,179,180,181,199,200,201,202,204,217,220,226,228,231,251,252,261,],[-125,91,-21,132,-125,-70,-72,-73,-20,-71,-125,-68,-87,-89,-125,-57,-59,-62,-64,182,183,188,-47,-48,191,193,194,197,188,188,-88,91,-58,-67,-63,-26,-91,-27,-92,234,132,188,247,248,197,-90,234,188,]),'B':([33,47,48,49,50,51,52,53,58,61,64,71,72,74,76,77,81,83,84,85,104,108,112,114,115,119,120,122,124,125,129,134,135,158,167,168,170,177,205,221,227,230,236,240,244,246,251,253,255,256,257,258,264,265,268,269,271,],[69,69,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-29,-31,-37,-36,-76,-77,-75,-30,-87,-89,-74,-80,-79,-78,-88,-81,-33,-46,-82,-125,-49,-96,-45,-90,-101,-102,-43,-44,-28,-103,-39,-38,-32,-42,]),'RB':([33,46,47,48,49,50,51,52,53,58,61,64,66,71,72,74,76,77,81,83,84,85,104,105,108,112,114,115,119,120,122,124,125,129,134,135,158,167,168,170,177,199,200,201,202,203,204,205,221,227,230,233,235,236,240,244,246,251,252,253,255,256,257,258,263,264,265,268,269,271,],[-125,104,-125,-118,-110,-115,-108,-109,-113,-124,-120,-119,-106,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-105,-34,-35,-29,-31,-37,-36,-76,-77,-75,-30,-87,-89,-74,-80,-79,-78,-88,-26,-91,-27,-92,232,-125,-81,-33,-46,-82,-93,-95,-125,-49,-96,-45,-90,-125,-101,-102,-43,-44,-28,-94,-103,-39,-38,-32,-42,]),'F':([33,47,48,49,50,51,52,53,58,61,64,71,72,74,76,77,81,83,84,85,104,108,112,114,115,119,120,122,124,125,129,134,135,158,167,168,170,177,205,221,227,230,236,240,244,246,251,253,255,256,257,258,264,265,268,269,271,],[70,70,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-29,-31,-37,-36,-76,-77,-75,-30,-87,-89,-74,-80,-79,-78,-88,-81,-33,-46,-82,-125,-49,-96,-45,-90,-101,-102,-43,-44,-28,-103,-39,-38,-32,-42,]),'M':([94,96,97,100,101,102,180,],[-70,-72,-73,-71,146,-68,-67,]),'L':([13,19,23,28,33,41,47,48,49,50,51,52,53,58,61,64,71,72,74,76,77,81,83,84,85,89,104,108,110,112,114,115,116,119,120,122,124,125,129,134,135,158,167,168,170,177,205,221,227,230,236,240,244,246,251,253,255,256,257,258,264,265,268,269,271,],[-125,29,-16,29,29,-125,29,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-15,-104,-34,29,-35,-29,-31,29,-37,-36,-76,-77,-75,-30,-87,-89,-74,-80,-79,-78,-88,-81,-33,-46,-82,-125,-49,-96,-45,-90,-101,-102,-43,-44,-28,-103,-39,-38,-32,-42,]),'VALF':([43,60,95,99,103,106,107,109,113,117,118,121,123,126,127,128,130,138,139,141,144,146,147,166,182,183,186,191,193,197,207,208,209,210,212,229,234,247,248,],[97,97,-69,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-61,97,-60,97,-65,-66,201,97,97,97,97,97,97,-55,-56,-54,-53,97,97,201,97,97,]),'ADD':([93,94,96,97,100,101,102,140,142,145,148,152,153,154,179,180,181,223,],[141,-70,-72,-73,-71,-125,-68,-57,-59,-62,-64,-99,186,-100,-58,-67,-63,186,]),'STR':([109,186,],[152,152,]),'V':([4,16,17,],[13,13,13,]),'RP':([26,36,38,87,93,94,96,97,100,101,102,121,131,133,134,135,140,142,143,145,148,151,152,153,154,155,156,157,160,163,164,165,171,172,173,174,175,177,179,180,181,185,187,189,190,196,198,211,213,214,215,217,219,220,223,224,231,237,241,243,245,249,250,251,260,261,267,],[-125,86,-10,-125,-125,-70,-72,-73,-71,-125,-68,-125,-9,-12,-87,-89,-57,-59,180,-62,-64,184,-99,-125,-100,-125,-47,-48,192,195,-125,-84,206,-125,-125,-125,216,-88,-58,-67,-63,222,-98,225,-41,-83,-86,-50,-52,238,239,-125,242,-125,-125,-40,-125,-51,-11,259,-97,262,-85,-90,266,-125,270,]),'GL':([1,],[4,]),'EQ':([32,73,88,137,],[43,123,136,43,]),'ID':([11,20,21,22,33,37,40,43,47,48,49,50,51,52,53,58,60,61,64,71,72,74,76,77,81,83,84,85,91,95,99,103,104,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,134,135,138,139,141,144,146,147,158,166,167,168,170,176,177,182,183,186,191,193,197,205,207,208,209,210,212,221,227,229,230,234,236,240,244,246,247,248,251,253,255,256,257,258,264,265,268,269,271,],[18,-24,-25,32,73,87,88,100,73,-118,-110,-115,-108,-109,-113,-124,100,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,137,-69,100,100,-104,100,100,-34,100,157,-35,100,-29,-31,157,100,100,-37,-36,100,-76,100,-77,-75,100,100,100,-30,100,-87,-89,-61,100,-60,100,-65,-66,-74,202,-80,-79,-78,217,-88,100,100,100,100,100,100,-81,-55,-56,-54,-53,100,-33,-46,100,-82,202,-125,-49,-96,-45,100,100,-90,-101,-102,-43,-44,-28,-103,-39,-38,-32,-42,]),'IF':([33,47,48,49,50,51,52,53,58,61,64,71,72,74,76,77,81,83,84,85,104,108,112,114,115,119,120,122,124,125,129,134,135,158,167,168,170,177,205,221,227,230,236,240,244,246,251,253,255,256,257,258,264,265,268,269,271,],[75,75,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-29,-31,-37,-36,-76,-77,-75,-30,-87,-89,-74,-80,-79,-78,-88,-81,-33,-46,-82,-125,-49,-96,-45,-90,-101,-102,-43,-44,-28,-103,-39,-38,-32,-42,]),'SETC':([33,47,48,49,50,51,52,53,58,61,64,71,72,74,76,77,81,83,84,85,104,108,112,114,115,119,120,122,124,125,129,134,135,158,167,168,170,177,205,221,227,230,236,240,244,246,251,253,255,256,257,258,264,265,268,269,271,],[80,80,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-29,-31,-37,-36,-76,-77,-75,-30,-87,-89,-74,-80,-79,-78,-88,-81,-33,-46,-82,-125,-49,-96,-45,-90,-101,-102,-43,-44,-28,-103,-39,-38,-32,-42,]),'INT':([13,26,29,41,132,],[20,20,20,20,20,]),'SQ':([33,47,48,49,50,51,52,53,58,61,64,71,72,74,76,77,81,83,84,85,104,108,112,114,115,119,120,122,124,125,129,134,135,158,167,168,170,177,205,221,227,230,236,240,244,246,251,253,255,256,257,258,264,265,268,269,271,],[79,79,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-29,-31,-37,-36,-76,-77,-75,-30,-87,-89,-74,-80,-79,-78,-88,-81,-33,-46,-82,-125,-49,-96,-45,-90,-101,-102,-43,-44,-28,-103,-39,-38,-32,-42,]),'FLOAT':([13,26,29,41,132,],[21,21,21,21,21,]),'MT':([93,94,96,97,100,101,102,140,142,145,148,172,179,180,181,],[-125,-70,-72,-73,-71,-125,-68,-57,-59,-62,-64,209,-58,-67,-63,]),'ARC':([33,47,48,49,50,51,52,53,58,61,64,71,72,74,76,77,81,83,84,85,104,108,112,114,115,119,120,122,124,125,129,134,135,158,167,168,170,177,205,221,227,230,236,240,244,246,251,253,255,256,257,258,264,265,268,269,271,],[82,82,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-29,-31,-37,-36,-76,-77,-75,-30,-87,-89,-74,-80,-79,-78,-88,-81,-33,-46,-82,-125,-49,-96,-45,-90,-101,-102,-43,-44,-28,-103,-39,-38,-32,-42,]),'SC':([31,32,42,44,56,62,88,90,92,93,94,96,97,98,100,101,102,137,140,142,145,148,169,178,179,180,181,184,192,195,216,218,222,225,232,238,239,242,259,262,266,270,],[41,-125,-125,-21,108,112,135,-17,-19,-125,-70,-72,-73,-20,-71,-125,-68,-125,-57,-59,-62,-64,205,-125,-58,-67,-63,221,227,230,240,-18,244,246,251,256,257,258,265,268,269,271,]),'MAIN':([1,3,4,5,6,7,8,10,12,13,14,15,19,23,27,28,30,35,39,41,89,104,134,135,177,251,],[-125,-125,-125,-2,-3,-125,16,-5,-6,-125,-14,-4,-125,-16,-13,-125,-23,-7,-22,-125,-15,-104,-87,-89,-88,-90,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'fun4':([87,217,],[131,241,]),'block3':([33,47,],[46,105,]),'block2':([33,47,],[47,47,]),'vars':([4,16,17,],[12,24,25,]),'fun2':([3,7,],[9,9,]),'lstrip':([33,47,],[49,49,]),'colors2':([63,65,80,],[114,115,129,]),'move':([33,47,],[50,50,]),'tria':([33,47,],[51,51,]),'con2':([236,],[253,]),'poly':([33,47,],[52,52,]),'lab2':([153,223,],[185,245,]),'colors':([33,47,],[53,53,]),'globals':([1,],[5,]),'WID2':([73,],[125,]),'term3':([101,],[144,]),'varAss':([123,],[168,]),'lista3':([166,],[203,]),'term2':([101,],[145,]),'li4':([204,252,],[233,263,]),'functions':([3,7,],[7,7,]),'valExp':([43,60,99,103,106,107,109,113,117,118,121,123,126,127,128,130,139,144,182,183,186,191,193,197,212,229,247,248,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'fun3':([26,],[36,]),'assigment':([73,],[122,]),'exp3':([93,],[139,]),'exp2':([93,],[140,]),'rep':([33,47,],[58,58,]),'funCall':([73,],[124,]),'pen':([33,47,],[61,61,]),'ex2':([172,],[211,]),'condition':([33,47,],[64,64,]),'p_fill':([155,173,174,220,261,],[189,214,215,243,267,]),'prog':([0,],[2,]),'figure':([33,47,],[48,48,]),'type':([13,26,29,41,132,],[22,37,40,22,176,]),'empty':([1,3,4,7,13,16,17,19,26,28,32,33,41,42,47,87,93,101,121,137,153,155,164,172,173,174,178,204,217,220,223,231,236,252,261,],[6,10,14,10,23,14,14,30,38,30,44,66,23,92,66,133,142,148,165,44,187,190,198,213,190,190,92,235,133,190,187,198,255,235,190,]),'ex3':([172,],[212,]),'var5':([19,28,],[27,39,]),'var4':([32,137,],[42,178,]),'expresion':([126,],[171,]),'prelistAss':([88,],[134,]),'idList':([110,116,],[155,160,]),'var3':([22,],[31,]),'var2':([13,41,],[19,89,]),'func3':([164,231,],[196,250,]),'mueve2':([69,70,],[119,120,]),'lab':([33,47,],[71,71,]),'stExp':([109,186,],[153,223,]),'one_par':([33,47,],[72,72,]),'fact2':([43,60,99,103,106,107,109,113,117,118,121,123,126,127,128,130,139,144,182,183,186,191,193,197,212,229,247,248,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'rect':([33,47,],[74,74,]),'fact4':([43,60,99,103,106,107,109,113,117,118,121,123,126,127,128,130,139,144,182,183,186,191,193,197,212,229,247,248,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'p2':([1,],[3,]),'p3':([3,7,],[8,15,]),'term':([43,60,99,103,106,107,109,113,117,118,121,123,126,127,128,130,139,144,182,183,186,191,193,197,212,229,247,248,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,181,93,93,93,93,93,93,93,93,93,93,]),'WID':([33,47,],[76,76,]),'p_arc':([33,47,],[77,77,]),'val':([166,234,],[200,200,]),'func2':([121,],[163,]),'tipeAss':([123,],[170,]),'list':([19,28,33,47,110,116,],[28,28,81,81,156,156,]),'var33':([42,178,],[90,218,]),'fact':([43,60,99,103,106,107,109,113,117,118,121,123,126,127,128,130,139,144,182,183,186,191,193,197,212,229,247,248,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'exp':([43,60,99,103,106,107,109,113,117,118,121,123,126,127,128,130,139,182,183,186,191,193,197,212,229,247,248,],[98,111,143,149,150,151,154,159,161,162,164,169,172,173,174,175,179,219,220,154,226,228,231,237,249,260,261,]),'position':([33,47,],[83,83,]),'p_width':([33,47,],[84,84,]),'listAss':([123,136,],[167,177,]),'penwrite':([33,47,],[85,85,]),'block':([24,25,111,206,254,],[34,35,158,236,264,]),'lista2':([166,234,],[204,252,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> PR p2 p3 MAIN vars block','prog',6,'p_prog','drawme_yacc.py',21),
  ('p2 -> globals','p2',1,'p_p2','drawme_yacc.py',27),
  ('p2 -> empty','p2',1,'p_p2','drawme_yacc.py',28),
  ('p3 -> functions p3','p3',2,'p_p3','drawme_yacc.py',31),
  ('p3 -> empty','p3',1,'p_p3','drawme_yacc.py',32),
  ('globals -> GL vars','globals',2,'p_globals','drawme_yacc.py',35),
  ('functions -> fun2 DP vars block','functions',4,'p_functions','drawme_yacc.py',41),
  ('fun2 -> FUN ID LP fun3 RP','fun2',5,'p_fun2','drawme_yacc.py',44),
  ('fun3 -> type ID fun4','fun3',3,'p_fun3','drawme_yacc.py',50),
  ('fun3 -> empty','fun3',1,'p_fun3','drawme_yacc.py',51),
  ('fun4 -> C type ID fun4','fun4',4,'p_fun4','drawme_yacc.py',54),
  ('fun4 -> empty','fun4',1,'p_fun4','drawme_yacc.py',55),
  ('vars -> V var2 var5','vars',3,'p_vars','drawme_yacc.py',58),
  ('vars -> empty','vars',1,'p_vars','drawme_yacc.py',59),
  ('var2 -> type var3 SC var2','var2',4,'p_var2','drawme_yacc.py',62),
  ('var2 -> empty','var2',1,'p_var2','drawme_yacc.py',63),
  ('var3 -> ID var4 var33','var3',3,'p_var3','drawme_yacc.py',66),
  ('var33 -> C ID var4 var33','var33',4,'p_var33','drawme_yacc.py',73),
  ('var33 -> empty','var33',1,'p_var33','drawme_yacc.py',74),
  ('var4 -> EQ exp','var4',2,'p_var4','drawme_yacc.py',82),
  ('var4 -> empty','var4',1,'p_var4','drawme_yacc.py',83),
  ('var5 -> list var5','var5',2,'p_var5','drawme_yacc.py',86),
  ('var5 -> empty','var5',1,'p_var5','drawme_yacc.py',87),
  ('type -> INT','type',1,'p_type','drawme_yacc.py',90),
  ('type -> FLOAT','type',1,'p_type','drawme_yacc.py',91),
  ('val -> VALI','val',1,'p_val','drawme_yacc.py',96),
  ('val -> VALF','val',1,'p_val','drawme_yacc.py',97),
  ('position -> PENP LP exp C exp RP SC','position',7,'p_position','drawme_yacc.py',100),
  ('colors -> PENC colors2','colors',2,'p_colors','drawme_yacc.py',103),
  ('colors -> SETC colors2','colors',2,'p_colors','drawme_yacc.py',104),
  ('colors -> BACO colors2','colors',2,'p_colors','drawme_yacc.py',105),
  ('colors2 -> LP exp C exp C exp RP SC','colors2',8,'p_colors2','drawme_yacc.py',108),
  ('p_width -> PENW LP exp RP SC','p_width',5,'p_p_width','drawme_yacc.py',111),
  ('penwrite -> PENU SC','penwrite',2,'p_penwrite','drawme_yacc.py',114),
  ('penwrite -> PEND SC','penwrite',2,'p_penwrite','drawme_yacc.py',115),
  ('move -> F mueve2','move',2,'p_move','drawme_yacc.py',118),
  ('move -> B mueve2','move',2,'p_move','drawme_yacc.py',119),
  ('mueve2 -> LP exp C A exp RP SC','mueve2',7,'p_mueve2','drawme_yacc.py',122),
  ('rect -> REC LP exp C exp p_fill RP SC','rect',8,'p_rect','drawme_yacc.py',125),
  ('p_fill -> C FILL','p_fill',2,'p_p_fill','drawme_yacc.py',132),
  ('p_fill -> empty','p_fill',1,'p_p_fill','drawme_yacc.py',133),
  ('tria -> TRI LP exp C exp C exp p_fill RP SC','tria',10,'p_tria','drawme_yacc.py',143),
  ('one_par -> CIR LP exp p_fill RP SC','one_par',6,'p_one_par','drawme_yacc.py',150),
  ('one_par -> SQ LP exp p_fill RP SC','one_par',6,'p_one_par','drawme_yacc.py',151),
  ('poly -> POL LP idList p_fill RP SC','poly',6,'p_poly','drawme_yacc.py',162),
  ('lstrip -> LS LP idList RP SC','lstrip',5,'p_lstrip','drawme_yacc.py',165),
  ('idList -> list','idList',1,'p_idList','drawme_yacc.py',168),
  ('idList -> ID','idList',1,'p_idList','drawme_yacc.py',169),
  ('p_arc -> ARC LP exp RP SC','p_arc',5,'p_p_arc','drawme_yacc.py',176),
  ('expresion -> exp ex2','expresion',2,'p_expresion','drawme_yacc.py',180),
  ('ex2 -> ex3 exp','ex2',2,'p_ex2','drawme_yacc.py',183),
  ('ex2 -> empty','ex2',1,'p_ex2','drawme_yacc.py',184),
  ('ex3 -> LT','ex3',1,'p_ex3','drawme_yacc.py',200),
  ('ex3 -> MT','ex3',1,'p_ex3','drawme_yacc.py',201),
  ('ex3 -> D','ex3',1,'p_ex3','drawme_yacc.py',202),
  ('ex3 -> SEQ','ex3',1,'p_ex3','drawme_yacc.py',203),
  ('exp -> term exp2','exp',2,'p_exp','drawme_yacc.py',207),
  ('exp2 -> exp3 exp','exp2',2,'p_exp2','drawme_yacc.py',210),
  ('exp2 -> empty','exp2',1,'p_exp2','drawme_yacc.py',211),
  ('exp3 -> ADD','exp3',1,'p_exp3','drawme_yacc.py',227),
  ('exp3 -> SUB','exp3',1,'p_exp3','drawme_yacc.py',228),
  ('term -> fact term2','term',2,'p_term','drawme_yacc.py',233),
  ('term2 -> term3 term','term2',2,'p_term2','drawme_yacc.py',238),
  ('term2 -> empty','term2',1,'p_term2','drawme_yacc.py',239),
  ('term3 -> M','term3',1,'p_term3','drawme_yacc.py',255),
  ('term3 -> DIV','term3',1,'p_term3','drawme_yacc.py',256),
  ('fact -> fact2 exp RP','fact',3,'p_fact','drawme_yacc.py',261),
  ('fact -> fact4','fact',1,'p_fact','drawme_yacc.py',262),
  ('fact2 -> LP','fact2',1,'p_fact2','drawme_yacc.py',267),
  ('fact4 -> valExp','fact4',1,'p_fact4','drawme_yacc.py',271),
  ('fact4 -> ID','fact4',1,'p_fact4','drawme_yacc.py',272),
  ('valExp -> VALI','valExp',1,'p_valExp','drawme_yacc.py',279),
  ('valExp -> VALF','valExp',1,'p_valExp','drawme_yacc.py',280),
  ('rep -> RE exp block','rep',3,'p_rep','drawme_yacc.py',286),
  ('WID -> ID WID2','WID',2,'p_WID','drawme_yacc.py',289),
  ('WID2 -> assigment','WID2',1,'p_WID2','drawme_yacc.py',307),
  ('WID2 -> funCall','WID2',1,'p_WID2','drawme_yacc.py',308),
  ('assigment -> EQ tipeAss','assigment',2,'p_assigment','drawme_yacc.py',311),
  ('tipeAss -> varAss','tipeAss',1,'p_tipeAss','drawme_yacc.py',316),
  ('tipeAss -> listAss','tipeAss',1,'p_tipeAss','drawme_yacc.py',317),
  ('varAss -> exp SC','varAss',2,'p_varAss','drawme_yacc.py',320),
  ('funCall -> LP func2 RP SC','funCall',4,'p_funCall','drawme_yacc.py',323),
  ('func2 -> exp func3','func2',2,'p_func2','drawme_yacc.py',328),
  ('func2 -> empty','func2',1,'p_func2','drawme_yacc.py',329),
  ('func3 -> C exp func3','func3',3,'p_func3','drawme_yacc.py',333),
  ('func3 -> empty','func3',1,'p_func3','drawme_yacc.py',334),
  ('list -> L type ID prelistAss','list',4,'p_list','drawme_yacc.py',337),
  ('prelistAss -> EQ listAss','prelistAss',2,'p_prelistAss','drawme_yacc.py',344),
  ('prelistAss -> SC','prelistAss',1,'p_prelistAss','drawme_yacc.py',345),
  ('listAss -> LB lista3 RB SC','listAss',4,'p_listAss','drawme_yacc.py',348),
  ('lista2 -> val','lista2',1,'p_lista2','drawme_yacc.py',351),
  ('lista2 -> ID','lista2',1,'p_lista2','drawme_yacc.py',352),
  ('lista3 -> lista2 li4','lista3',2,'p_lista3','drawme_yacc.py',355),
  ('li4 -> C lista2 li4','li4',3,'p_li4','drawme_yacc.py',358),
  ('li4 -> empty','li4',1,'p_li4','drawme_yacc.py',359),
  ('lab -> LA LP stExp lab2 RP SC','lab',6,'p_lab','drawme_yacc.py',362),
  ('lab2 -> ADD stExp lab2','lab2',3,'p_lab2','drawme_yacc.py',365),
  ('lab2 -> empty','lab2',1,'p_lab2','drawme_yacc.py',366),
  ('stExp -> STR','stExp',1,'p_stExp','drawme_yacc.py',369),
  ('stExp -> exp','stExp',1,'p_stExp','drawme_yacc.py',370),
  ('condition -> IF LP expresion RP block con2','condition',6,'p_condition','drawme_yacc.py',373),
  ('con2 -> empty','con2',1,'p_con2','drawme_yacc.py',376),
  ('con2 -> ELSE block','con2',2,'p_con2','drawme_yacc.py',377),
  ('block -> LB block3 RB','block',3,'p_block','drawme_yacc.py',380),
  ('block3 -> block2 block3','block3',2,'p_block3','drawme_yacc.py',383),
  ('block3 -> empty','block3',1,'p_block3','drawme_yacc.py',384),
  ('figure -> rect','figure',1,'p_figure','drawme_yacc.py',387),
  ('figure -> tria','figure',1,'p_figure','drawme_yacc.py',388),
  ('figure -> poly','figure',1,'p_figure','drawme_yacc.py',389),
  ('figure -> lstrip','figure',1,'p_figure','drawme_yacc.py',390),
  ('figure -> one_par','figure',1,'p_figure','drawme_yacc.py',391),
  ('figure -> p_arc','figure',1,'p_figure','drawme_yacc.py',392),
  ('pen -> colors','pen',1,'p_pen','drawme_yacc.py',395),
  ('pen -> p_width','pen',1,'p_pen','drawme_yacc.py',396),
  ('pen -> move','pen',1,'p_pen','drawme_yacc.py',397),
  ('pen -> position','pen',1,'p_pen','drawme_yacc.py',398),
  ('pen -> penwrite','pen',1,'p_pen','drawme_yacc.py',399),
  ('block2 -> figure','block2',1,'p_block2','drawme_yacc.py',402),
  ('block2 -> condition','block2',1,'p_block2','drawme_yacc.py',403),
  ('block2 -> pen','block2',1,'p_block2','drawme_yacc.py',404),
  ('block2 -> lab','block2',1,'p_block2','drawme_yacc.py',405),
  ('block2 -> list','block2',1,'p_block2','drawme_yacc.py',406),
  ('block2 -> WID','block2',1,'p_block2','drawme_yacc.py',407),
  ('block2 -> rep','block2',1,'p_block2','drawme_yacc.py',408),
  ('empty -> <empty>','empty',0,'p_empty','drawme_yacc.py',411),
]
