
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = "v&\xc8\x94\xfaS\xbbc\xff'\xfb\xa9\x15\xce\xff\x1a"
    
_lr_action_items = {'A':([210,],[254,]),'SUB':([101,103,104,105,108,109,110,111,150,151,153,154,157,158,159,179,199,203,247,248,],[-145,-145,-83,-84,-76,-78,-80,-145,194,-66,-79,-82,-145,-69,-72,-80,-75,-71,-81,-70,]),'BACO':([38,52,53,54,56,57,58,59,62,65,69,72,78,79,81,83,84,87,89,90,91,114,119,120,126,135,138,139,171,175,178,180,182,219,220,228,258,260,262,267,269,273,275,280,282,285,288,291,292,295,302,305,306,310,311,313,326,],[55,55,-137,-129,-134,-127,-128,-132,-144,-143,-139,-138,-140,-130,-126,-142,-131,-141,-135,-133,-136,-123,-44,-42,-43,-88,-89,-87,-85,-120,-90,-93,-92,-101,-103,-91,-41,-53,-102,-94,-145,-55,-50,-110,-52,-104,-115,-117,-51,-37,-118,-46,-45,-40,-38,-39,-49,]),'VALI':([47,68,76,99,102,107,112,113,116,117,118,121,123,127,134,136,137,140,141,142,143,152,174,177,194,195,196,200,201,202,207,208,209,212,216,231,235,236,237,238,240,243,254,261,265,277,283,293,312,315,319,321,],[104,104,104,104,-77,104,104,104,104,104,104,104,104,104,-95,104,104,104,104,104,104,104,104,222,-68,104,-67,104,-73,-74,104,104,104,104,104,104,-61,-62,-60,-59,104,104,104,104,222,104,104,104,104,104,104,104,]),'ELSE':([114,269,],[-123,290,]),'CIR':([38,52,53,54,56,57,58,59,62,65,69,72,78,79,81,83,84,87,89,90,91,114,119,120,126,135,138,139,171,175,178,180,182,219,220,228,258,260,262,267,269,273,275,280,282,285,288,291,292,295,302,305,306,310,311,313,326,],[49,49,-137,-129,-134,-127,-128,-132,-144,-143,-139,-138,-140,-130,-126,-142,-131,-141,-135,-133,-136,-123,-44,-42,-43,-88,-89,-87,-85,-120,-90,-93,-92,-101,-103,-91,-41,-53,-102,-94,-145,-55,-50,-110,-52,-104,-115,-117,-51,-37,-118,-46,-45,-40,-38,-39,-49,]),'FUN':([1,3,4,5,6,7,8,14,15,16,27,29,40,45,97,114,],[-145,12,-9,-145,-4,-5,12,-22,-8,-145,-21,-24,-10,-145,-23,-123,]),'REC':([38,52,53,54,56,57,58,59,62,65,69,72,78,79,81,83,84,87,89,90,91,114,119,120,126,135,138,139,171,175,178,180,182,219,220,228,258,260,262,267,269,273,275,280,282,285,288,291,292,295,302,305,306,310,311,313,326,],[60,60,-137,-129,-134,-127,-128,-132,-144,-143,-139,-138,-140,-130,-126,-142,-131,-141,-135,-133,-136,-123,-44,-42,-43,-88,-89,-87,-85,-120,-90,-93,-92,-101,-103,-91,-41,-53,-102,-94,-145,-55,-50,-110,-52,-104,-115,-117,-51,-37,-118,-46,-45,-40,-38,-39,-49,]),'DIV':([103,104,105,108,109,110,111,153,154,157,159,179,199,247,],[-145,-83,-84,-76,-78,-80,-145,-79,-82,202,-72,-80,-75,-81,]),'DP':([10,95,],[20,-12,]),'D':([101,103,104,105,108,109,110,111,149,150,151,153,154,157,158,159,188,197,199,203,246,247,248,],[-145,-145,-83,-84,-76,-78,-80,-145,-63,-145,-66,-79,-82,-145,-69,-72,235,-65,-75,-71,-64,-81,-70,]),'PR':([0,],[1,]),'PENU':([38,52,53,54,56,57,58,59,62,65,69,72,78,79,81,83,84,87,89,90,91,114,119,120,126,135,138,139,171,175,178,180,182,219,220,228,258,260,262,267,269,273,275,280,282,285,288,291,292,295,302,305,306,310,311,313,326,],[63,63,-137,-129,-134,-127,-128,-132,-144,-143,-139,-138,-140,-130,-126,-142,-131,-141,-135,-133,-136,-123,-44,-42,-43,-88,-89,-87,-85,-120,-90,-93,-92,-101,-103,-91,-41,-53,-102,-94,-145,-55,-50,-110,-52,-104,-115,-117,-51,-37,-118,-46,-45,-40,-38,-39,-49,]),'RP':([34,41,42,44,92,94,96,101,103,104,105,108,109,110,111,134,137,144,149,150,151,153,154,156,157,158,159,160,165,166,167,168,169,170,173,183,184,185,186,187,188,189,191,192,197,199,203,205,206,211,213,214,230,232,239,241,242,246,247,248,249,251,253,256,268,270,278,279,281,287,296,299,303,323,324,],[-145,-145,95,-17,-16,-19,-20,-145,-145,-83,-84,-76,-78,-80,-145,-95,-145,-145,-63,-145,-66,-79,-82,199,-145,-69,-72,-145,-113,-145,-114,-145,-54,215,217,229,-145,-100,-97,233,-145,-145,244,-18,-65,-75,-71,250,-48,255,-112,257,-96,-99,-56,-58,271,-64,-81,-70,-47,276,-145,-145,-145,-57,297,298,-111,-98,304,307,309,-145,325,]),'LC':([36,37,103,110,129,179,193,308,318,],[47,-28,152,-80,174,-80,47,312,319,]),'SEQ':([101,103,104,105,108,109,110,111,149,150,151,153,154,157,158,159,188,197,199,203,246,247,248,],[-145,-145,-83,-84,-76,-78,-80,-145,-63,-145,-66,-79,-82,-145,-69,-72,236,-65,-75,-71,-64,-81,-70,]),'PENP':([38,52,53,54,56,57,58,59,62,65,69,72,78,79,81,83,84,87,89,90,91,114,119,120,126,135,138,139,171,175,178,180,182,219,220,228,258,260,262,267,269,273,275,280,282,285,288,291,292,295,302,305,306,310,311,313,326,],[50,50,-137,-129,-134,-127,-128,-132,-144,-143,-139,-138,-140,-130,-126,-142,-131,-141,-135,-133,-136,-123,-44,-42,-43,-88,-89,-87,-85,-120,-90,-93,-92,-101,-103,-91,-41,-53,-102,-94,-145,-55,-50,-110,-52,-104,-115,-117,-51,-37,-118,-46,-45,-40,-38,-39,-49,]),'LT':([101,103,104,105,108,109,110,111,149,150,151,153,154,157,158,159,188,197,199,203,246,247,248,],[-145,-145,-83,-84,-76,-78,-80,-145,-63,-145,-66,-79,-82,-145,-69,-72,238,-65,-75,-71,-64,-81,-70,]),'LI':([38,52,53,54,56,57,58,59,62,65,69,72,78,79,81,83,84,87,89,90,91,114,119,120,126,135,138,139,171,175,178,180,182,219,220,228,258,260,262,267,269,273,275,280,282,285,288,291,292,295,302,305,306,310,311,313,326,],[61,61,-137,-129,-134,-127,-128,-132,-144,-143,-139,-138,-140,-130,-126,-142,-131,-141,-135,-133,-136,-123,-44,-42,-43,-88,-89,-87,-85,-120,-90,-93,-92,-101,-103,-91,-41,-53,-102,-94,-145,-55,-50,-110,-52,-104,-115,-117,-51,-37,-118,-46,-45,-40,-38,-39,-49,]),'RE':([38,52,53,54,56,57,58,59,62,65,69,72,78,79,81,83,84,87,89,90,91,114,119,120,126,135,138,139,171,175,178,180,182,219,220,228,258,260,262,267,269,273,275,280,282,285,288,291,292,295,302,305,306,310,311,313,326,],[68,68,-137,-129,-134,-127,-128,-132,-144,-143,-139,-138,-140,-130,-126,-142,-131,-141,-135,-133,-136,-123,-44,-42,-43,-88,-89,-87,-85,-120,-90,-93,-92,-101,-103,-91,-41,-53,-102,-94,-145,-55,-50,-110,-52,-104,-115,-117,-51,-37,-118,-46,-45,-40,-38,-39,-49,]),'POL':([38,52,53,54,56,57,58,59,62,65,69,72,78,79,81,83,84,87,89,90,91,114,119,120,126,135,138,139,171,175,178,180,182,219,220,228,258,260,262,267,269,273,275,280,282,285,288,291,292,295,302,305,306,310,311,313,326,],[66,66,-137,-129,-134,-127,-128,-132,-144,-143,-139,-138,-140,-130,-126,-142,-131,-141,-135,-133,-136,-123,-44,-42,-43,-88,-89,-87,-85,-120,-90,-93,-92,-101,-103,-91,-41,-53,-102,-94,-145,-55,-50,-110,-52,-104,-115,-117,-51,-37,-118,-46,-45,-40,-38,-39,-49,]),'PEND':([38,52,53,54,56,57,58,59,62,65,69,72,78,79,81,83,84,87,89,90,91,114,119,120,126,135,138,139,171,175,178,180,182,219,220,228,258,260,262,267,269,273,275,280,282,285,288,291,292,295,302,305,306,310,311,313,326,],[70,70,-137,-129,-134,-127,-128,-132,-144,-143,-139,-138,-140,-130,-126,-142,-131,-141,-135,-133,-136,-123,-44,-42,-43,-88,-89,-87,-85,-120,-90,-93,-92,-101,-103,-91,-41,-53,-102,-94,-145,-55,-50,-110,-52,-104,-115,-117,-51,-37,-118,-46,-45,-40,-38,-39,-49,]),'PENC':([38,52,53,54,56,57,58,59,62,65,69,72,78,79,81,83,84,87,89,90,91,114,119,120,126,135,138,139,171,175,178,180,182,219,220,228,258,260,262,267,269,273,275,280,282,285,288,291,292,295,302,305,306,310,311,313,326,],[71,71,-137,-129,-134,-127,-128,-132,-144,-143,-139,-138,-140,-130,-126,-142,-131,-141,-135,-133,-136,-123,-44,-42,-43,-88,-89,-87,-85,-120,-90,-93,-92,-101,-103,-91,-41,-53,-102,-94,-145,-55,-50,-110,-52,-104,-115,-117,-51,-37,-118,-46,-45,-40,-38,-39,-49,]),'LS':([38,52,53,54,56,57,58,59,62,65,69,72,78,79,81,83,84,87,89,90,91,114,119,120,126,135,138,139,171,175,178,180,182,219,220,228,258,260,262,267,269,273,275,280,282,285,288,291,292,295,302,305,306,310,311,313,326,],[74,74,-137,-129,-134,-127,-128,-132,-144,-143,-139,-138,-140,-130,-126,-142,-131,-141,-135,-133,-136,-123,-44,-42,-43,-88,-89,-87,-85,-120,-90,-93,-92,-101,-103,-91,-41,-53,-102,-94,-145,-55,-50,-110,-52,-104,-115,-117,-51,-37,-118,-46,-45,-40,-38,-39,-49,]),'LP':([26,47,49,50,55,60,61,64,66,67,68,71,74,75,76,80,82,85,86,88,99,102,107,112,113,116,117,118,121,123,127,134,136,137,140,141,142,143,152,174,179,194,195,196,200,201,202,207,208,209,212,216,231,235,236,237,238,240,243,254,261,277,283,293,312,315,319,321,],[34,102,112,113,116,117,118,121,122,123,102,127,128,129,102,134,140,141,142,143,102,-77,102,102,102,102,102,102,102,102,102,-95,102,102,102,102,102,102,102,102,134,-68,102,-67,102,-73,-74,102,102,102,102,102,102,-61,-62,-60,-59,102,102,102,102,102,102,102,102,102,102,102,]),'RC':([101,103,104,105,106,108,109,110,111,149,150,151,153,154,157,158,159,197,198,199,203,246,247,248,284,316,322,],[-145,-145,-83,-84,155,-76,-78,-80,-145,-63,-145,-66,-79,-82,-145,-69,-72,-65,247,-75,-71,-64,-81,-70,300,317,323,]),'LA':([38,52,53,54,56,57,58,59,62,65,69,72,78,79,81,83,84,87,89,90,91,114,119,120,126,135,138,139,171,175,178,180,182,219,220,228,258,260,262,267,269,273,275,280,282,285,288,291,292,295,302,305,306,310,311,313,326,],[64,64,-137,-129,-134,-127,-128,-132,-144,-143,-139,-138,-140,-130,-126,-142,-131,-141,-135,-133,-136,-123,-44,-42,-43,-88,-89,-87,-85,-120,-90,-93,-92,-101,-103,-91,-41,-53,-102,-94,-145,-55,-50,-110,-52,-104,-115,-117,-51,-37,-118,-46,-45,-40,-38,-39,-49,]),'FILL':([204,],[249,]),'$end':([2,39,114,],[0,-1,-123,]),'TRI':([38,52,53,54,56,57,58,59,62,65,69,72,78,79,81,83,84,87,89,90,91,114,119,120,126,135,138,139,171,175,178,180,182,219,220,228,258,260,262,267,269,273,275,280,282,285,288,291,292,295,302,305,306,310,311,313,326,],[75,75,-137,-129,-134,-127,-128,-132,-144,-143,-139,-138,-140,-130,-126,-142,-131,-141,-135,-133,-136,-123,-44,-42,-43,-88,-89,-87,-85,-120,-90,-93,-92,-101,-103,-91,-41,-53,-102,-94,-145,-55,-50,-110,-52,-104,-115,-117,-51,-37,-118,-46,-45,-40,-38,-39,-49,]),'RT':([38,52,53,54,56,57,58,59,62,65,69,72,78,79,81,83,84,87,89,90,91,114,119,120,126,135,138,139,171,175,178,180,182,219,220,228,258,260,262,267,269,273,275,280,282,285,288,291,292,295,302,305,306,310,311,313,326,],[76,76,-137,-129,-134,-127,-128,-132,-144,-143,-139,-138,-140,-130,-126,-142,-131,-141,-135,-133,-136,-123,-44,-42,-43,-88,-89,-87,-85,-120,-90,-93,-92,-101,-103,-91,-41,-53,-102,-94,-145,-55,-50,-110,-52,-104,-115,-117,-51,-37,-118,-46,-45,-40,-38,-39,-49,]),'C':([36,37,41,46,48,96,98,100,101,103,104,105,108,109,110,111,144,148,149,150,151,153,154,155,157,158,159,160,161,162,163,164,168,169,172,184,185,189,190,193,197,199,203,218,222,223,224,225,227,245,246,247,248,252,253,259,268,272,274,286,300,314,317,320,323,],[-145,-28,93,-145,-32,-20,145,-30,-145,-145,-83,-84,-76,-78,-80,-145,93,-29,-63,-145,-66,-79,-82,-31,-145,-69,-72,204,207,208,209,210,204,-54,216,231,-100,204,243,-145,-65,-75,-71,261,-35,-105,-36,-106,265,-145,-64,-81,-70,277,204,283,231,293,145,265,308,315,318,321,204,]),'VD':([12,],[21,]),'RB':([38,51,52,53,54,56,57,58,59,62,65,69,72,73,78,79,81,83,84,87,89,90,91,114,115,119,120,126,135,138,139,171,175,178,180,182,219,220,222,223,224,225,226,227,228,258,260,262,264,266,267,269,273,275,280,282,285,286,288,291,292,295,301,302,305,306,310,311,313,326,],[-145,114,-145,-137,-129,-134,-127,-128,-132,-144,-143,-139,-138,-125,-140,-130,-126,-142,-131,-141,-135,-133,-136,-123,-124,-44,-42,-43,-88,-89,-87,-85,-120,-90,-93,-92,-101,-103,-35,-105,-36,-106,263,-145,-91,-41,-53,-102,-107,-109,-94,-145,-55,-50,-110,-52,-104,-145,-115,-117,-51,-37,-108,-118,-46,-45,-40,-38,-39,-49,]),'M':([103,104,105,108,109,110,111,153,154,157,159,179,199,247,],[-145,-83,-84,-76,-78,-80,-145,-79,-82,201,-72,-80,-75,-81,]),'L':([38,52,53,54,56,57,58,59,62,65,69,72,78,79,81,83,84,87,89,90,91,114,119,120,126,135,138,139,171,175,178,180,182,219,220,228,258,260,262,267,269,273,275,280,282,285,288,291,292,295,302,305,306,310,311,313,326,],[77,77,-137,-129,-134,-127,-128,-132,-144,-143,-139,-138,-140,-130,-126,-142,-131,-141,-135,-133,-136,-123,-44,-42,-43,-88,-89,-87,-85,-120,-90,-93,-92,-101,-103,-91,-41,-53,-102,-94,-145,-55,-50,-110,-52,-104,-115,-117,-51,-37,-118,-46,-45,-40,-38,-39,-49,]),'VALF':([47,68,76,99,102,107,112,113,116,117,118,121,123,127,134,136,137,140,141,142,143,152,174,177,194,195,196,200,201,202,207,208,209,212,216,231,235,236,237,238,240,243,254,261,265,277,283,293,312,315,319,321,],[105,105,105,105,-77,105,105,105,105,105,105,105,105,105,-95,105,105,105,105,105,105,105,105,224,-68,105,-67,105,-73,-74,105,105,105,105,105,105,-61,-62,-60,-59,105,105,105,105,224,105,105,105,105,105,105,105,]),'ADD':([101,103,104,105,108,109,110,111,149,150,151,153,154,157,158,159,165,166,167,179,197,199,203,246,247,248,256,],[-145,-145,-83,-84,-76,-78,-80,-145,-63,196,-66,-79,-82,-145,-69,-72,-113,212,-114,-80,-65,-75,-71,-64,-81,-70,212,]),'STR':([121,212,],[165,165,]),'V':([4,5,18,19,20,],[-9,16,-2,16,16,]),'LB':([14,16,18,19,20,27,29,30,31,32,33,45,97,101,103,104,105,108,109,110,111,124,125,136,149,150,151,153,154,157,158,159,197,199,203,221,233,234,246,247,248,289,290,],[-22,-145,-2,-145,-145,-21,-24,-3,38,-11,38,-145,-23,-145,-145,-83,-84,-76,-78,-80,-145,38,-86,177,-63,-145,-66,-79,-82,-145,-69,-72,-65,-75,-71,177,-116,38,-64,-81,-70,38,-119,]),'GL':([1,],[4,]),'EQ':([36,37,46,48,80,155,176,179,193,245,],[-145,-28,99,-32,136,-31,221,136,-145,99,]),'ID':([13,21,22,23,24,25,28,38,43,47,52,53,54,56,57,58,59,62,65,68,69,72,76,78,79,81,83,84,87,89,90,91,99,102,107,112,113,114,116,117,118,119,120,121,122,123,126,127,128,133,134,135,136,137,138,139,140,141,142,143,145,152,171,174,175,177,178,180,182,194,195,196,200,201,202,207,208,209,212,216,219,220,228,231,235,236,237,238,240,243,254,258,260,261,262,265,267,269,273,275,277,280,282,283,285,288,291,292,293,295,302,305,306,310,311,312,313,315,319,321,326,],[26,-14,-33,-34,-13,-15,37,80,96,110,80,-137,-129,-134,-127,-128,-132,-144,-143,110,-139,-138,110,-140,-130,-126,-142,-131,-141,-135,-133,-136,110,-77,110,110,110,-123,110,110,110,-44,-42,110,169,110,-43,110,169,176,-95,-88,179,110,-89,-87,110,110,110,110,37,110,-85,110,-120,225,-90,-93,-92,-68,110,-67,110,-73,-74,110,110,110,110,110,-101,-103,-91,110,-61,-62,-60,-59,110,110,110,-41,-53,110,-102,225,-94,-145,-55,-50,110,-110,-52,110,-104,-115,-117,-51,110,-37,-118,-46,-45,-40,-38,110,-39,110,110,110,-49,]),'IF':([38,52,53,54,56,57,58,59,62,65,69,72,78,79,81,83,84,87,89,90,91,114,119,120,126,135,138,139,171,175,178,180,182,219,220,228,258,260,262,267,269,273,275,280,282,285,288,291,292,295,302,305,306,310,311,313,326,],[82,82,-137,-129,-134,-127,-128,-132,-144,-143,-139,-138,-140,-130,-126,-142,-131,-141,-135,-133,-136,-123,-44,-42,-43,-88,-89,-87,-85,-120,-90,-93,-92,-101,-103,-91,-41,-53,-102,-94,-145,-55,-50,-110,-52,-104,-115,-117,-51,-37,-118,-46,-45,-40,-38,-39,-49,]),'SETC':([38,52,53,54,56,57,58,59,62,65,69,72,78,79,81,83,84,87,89,90,91,114,119,120,126,135,138,139,171,175,178,180,182,219,220,228,258,260,262,267,269,273,275,280,282,285,288,291,292,295,302,305,306,310,311,313,326,],[86,86,-137,-129,-134,-127,-128,-132,-144,-143,-139,-138,-140,-130,-126,-142,-131,-141,-135,-133,-136,-123,-44,-42,-43,-88,-89,-87,-85,-120,-90,-93,-92,-101,-103,-91,-41,-53,-102,-94,-145,-55,-50,-110,-52,-104,-115,-117,-51,-37,-118,-46,-45,-40,-38,-39,-49,]),'INT':([12,16,34,45,77,93,],[22,22,22,22,22,22,]),'SQ':([38,52,53,54,56,57,58,59,62,65,69,72,78,79,81,83,84,87,89,90,91,114,119,120,126,135,138,139,171,175,178,180,182,219,220,228,258,260,262,267,269,273,275,280,282,285,288,291,292,295,302,305,306,310,311,313,326,],[85,85,-137,-129,-134,-127,-128,-132,-144,-143,-139,-138,-140,-130,-126,-142,-131,-141,-135,-133,-136,-123,-44,-42,-43,-88,-89,-87,-85,-120,-90,-93,-92,-101,-103,-91,-41,-53,-102,-94,-145,-55,-50,-110,-52,-104,-115,-117,-51,-37,-118,-46,-45,-40,-38,-39,-49,]),'FLOAT':([12,16,34,45,77,93,],[23,23,23,23,23,23,]),'MT':([101,103,104,105,108,109,110,111,149,150,151,153,154,157,158,159,188,197,199,203,246,247,248,],[-145,-145,-83,-84,-76,-78,-80,-145,-63,-145,-66,-79,-82,-145,-69,-72,237,-65,-75,-71,-64,-81,-70,]),'ARC':([38,52,53,54,56,57,58,59,62,65,69,72,78,79,81,83,84,87,89,90,91,114,119,120,126,135,138,139,171,175,178,180,182,219,220,228,258,260,262,267,269,273,275,280,282,285,288,291,292,295,302,305,306,310,311,313,326,],[88,88,-137,-129,-134,-127,-128,-132,-144,-143,-139,-138,-140,-130,-126,-142,-131,-141,-135,-133,-136,-123,-44,-42,-43,-88,-89,-87,-85,-120,-90,-93,-92,-101,-103,-91,-41,-53,-102,-94,-145,-55,-50,-110,-52,-104,-115,-117,-51,-37,-118,-46,-45,-40,-38,-39,-49,]),'PENW':([38,52,53,54,56,57,58,59,62,65,69,72,78,79,81,83,84,87,89,90,91,114,119,120,126,135,138,139,171,175,178,180,182,219,220,228,258,260,262,267,269,273,275,280,282,285,288,291,292,295,302,305,306,310,311,313,326,],[67,67,-137,-129,-134,-127,-128,-132,-144,-143,-139,-138,-140,-130,-126,-142,-131,-141,-135,-133,-136,-123,-44,-42,-43,-88,-89,-87,-85,-120,-90,-93,-92,-101,-103,-91,-41,-53,-102,-94,-145,-55,-50,-110,-52,-104,-115,-117,-51,-37,-118,-46,-45,-40,-38,-39,-49,]),'SC':([35,36,37,46,48,63,70,76,98,100,101,103,104,105,108,109,110,111,130,131,132,146,147,148,149,150,151,153,154,155,157,158,159,176,179,181,193,197,199,203,215,217,229,244,245,246,247,248,250,255,257,263,271,274,276,294,297,298,304,307,309,325,],[45,-145,-28,-145,-32,120,126,-145,-145,-30,-145,-145,-83,-84,-76,-78,-80,-145,175,-121,-122,-25,-27,-29,-63,-145,-66,-79,-82,-31,-145,-69,-72,220,-80,228,-145,-65,-75,-71,258,260,267,273,-145,-64,-81,-70,275,280,282,285,292,-145,295,-26,305,306,310,311,313,326,]),'MAIN':([1,3,4,5,6,7,8,9,11,14,15,16,17,27,29,40,45,97,114,],[-145,-145,-9,-145,-4,-5,-145,18,-7,-22,-8,-145,-6,-21,-24,-10,-145,-23,-123,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([5,19,20,],[15,30,32,]),'move':([38,52,],[56,56,]),'rep3':([68,],[124,]),'colors':([38,52,],[59,59,]),'WID2':([80,179,],[139,139,]),'rtE':([76,],[130,]),'tp':([12,],[24,]),'fact5':([103,],[153,]),'p_fill':([160,168,189,253,323,],[205,214,242,278,324,]),'main':([9,],[19,]),'var5':([36,193,],[46,245,]),'var4':([46,245,],[98,274,]),'var3':([28,],[35,]),'func4':([137,231,],[184,268,]),'varSave':([28,145,],[36,193,]),'stExp':([121,212,],[166,256,]),'fact2':([47,68,76,99,107,112,113,116,117,118,121,123,127,136,137,140,141,142,143,152,174,195,200,207,208,209,212,216,231,240,243,254,261,277,283,293,312,315,319,321,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'funVDir':([20,],[33,]),'condition':([38,52,],[72,72,]),'fact4':([47,68,76,99,107,112,113,116,117,118,121,123,127,136,137,140,141,142,143,152,174,195,200,207,208,209,212,216,231,240,243,254,261,277,283,293,312,315,319,321,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'expresion':([140,],[187,]),'term':([47,68,76,99,107,112,113,116,117,118,121,123,127,136,137,140,141,142,143,152,174,195,200,207,208,209,212,216,231,240,243,254,261,277,283,293,312,315,319,321,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,248,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'p_arc':([38,52,],[84,84,]),'list':([38,52,],[87,87,]),'factID':([47,68,76,99,107,112,113,116,117,118,121,123,127,136,137,140,141,142,143,152,174,195,200,207,208,209,212,216,231,240,243,254,261,277,283,293,312,315,319,321,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'lista3':([177,],[226,]),'lista2':([177,265,],[227,286,]),'term4':([111,],[157,]),'term3':([157,],[200,]),'term2':([111,],[158,]),'lstrip':([38,52,],[54,54,]),'lab2':([166,256,],[211,281,]),'rt':([38,52,],[62,62,]),'var33':([98,274,],[146,294,]),'rep':([38,52,],[65,65,]),'funCall':([80,179,],[138,138,]),'pen':([38,52,],[69,69,]),'prog':([0,],[2,]),'mueve2':([61,],[119,]),'one_par':([38,52,],[79,79,]),'rect':([38,52,],[81,81,]),'listAss':([136,221,],[182,262,]),'block':([31,33,124,234,289,],[39,40,171,269,302,]),'fun5':([34,93,],[41,144,]),'fun4':([41,144,],[92,192,]),'fun3':([34,],[42,]),'fun2':([3,8,],[10,10,]),'poly':([38,52,],[58,58,]),'globals':([1,],[6,]),'valExp':([47,68,76,99,107,112,113,116,117,118,121,123,127,136,137,140,141,142,143,152,174,195,200,207,208,209,212,216,231,240,243,254,261,277,283,293,312,315,319,321,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'val':([177,265,],[223,223,]),'exp3':([150,],[195,]),'exp2':([101,],[149,]),'penwrite':([38,52,],[91,91,]),'exp4':([101,],[150,]),'type':([12,16,34,45,77,93,],[25,28,43,28,133,43,]),'empty':([1,3,5,8,16,19,20,34,36,38,41,45,46,52,76,98,101,103,111,137,144,150,157,160,166,168,184,188,189,193,227,245,253,256,268,269,274,286,323,],[7,11,14,11,29,14,14,44,48,73,94,29,100,73,132,147,151,154,159,186,94,197,203,206,213,206,232,241,206,48,266,100,206,213,232,291,147,266,206,]),'p2':([1,],[3,]),'p3':([3,8,],[9,17,]),'WID':([38,52,136,],[83,83,180,]),'tipeAss':([136,],[178,]),'funEra':([80,179,],[137,137,]),'condRP':([187,],[234,]),'func3':([184,268,],[230,287,]),'block3':([38,52,],[51,115,]),'block2':([38,52,],[52,52,]),'figure':([38,52,],[53,53,]),'func2':([137,],[183,]),'mainVDir':([19,],[31,]),'tria':([38,52,],[57,57,]),'functions':([3,8,],[8,8,]),'assigment':([80,179,],[135,135,]),'var2':([16,45,],[27,97,]),'ex2':([188,],[239,]),'ex3':([188,],[240,]),'funBlock':([3,8,],[13,13,]),'con2':([269,],[288,]),'con3':([269,],[289,]),'prelistAss':([176,],[219,]),'idList':([122,128,],[168,173,]),'glob':([1,],[5,]),'lab':([38,52,],[78,78,]),'li4':([227,286,],[264,301,]),'exp':([47,68,76,99,107,112,113,116,117,118,121,123,127,136,137,140,141,142,143,152,174,195,207,208,209,212,216,231,240,243,254,261,277,283,293,312,315,319,321,],[106,125,131,148,156,160,161,162,163,164,167,170,172,181,185,188,189,190,191,198,218,246,251,252,253,167,259,185,270,272,279,284,296,299,303,314,316,320,322,]),'position':([38,52,],[89,89,]),'p_width':([38,52,],[90,90,]),'fact':([47,68,76,99,107,112,113,116,117,118,121,123,127,136,137,140,141,142,143,152,174,195,200,207,208,209,212,216,231,240,243,254,261,277,283,293,312,315,319,321,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> PR p2 p3 main mainVDir block','prog',6,'p_prog','drawme_yacc.py',29),
  ('main -> MAIN','main',1,'p_main','drawme_yacc.py',45),
  ('mainVDir -> vars','mainVDir',1,'p_mainVDir','drawme_yacc.py',50),
  ('p2 -> globals','p2',1,'p_p2','drawme_yacc.py',54),
  ('p2 -> empty','p2',1,'p_p2','drawme_yacc.py',55),
  ('p3 -> functions p3','p3',2,'p_p3','drawme_yacc.py',60),
  ('p3 -> empty','p3',1,'p_p3','drawme_yacc.py',61),
  ('globals -> glob vars','globals',2,'p_globals','drawme_yacc.py',64),
  ('glob -> GL','glob',1,'p_glob','drawme_yacc.py',76),
  ('functions -> fun2 DP funVDir block','functions',4,'p_functions','drawme_yacc.py',81),
  ('funVDir -> vars','funVDir',1,'p_funVDir','drawme_yacc.py',92),
  ('fun2 -> funBlock ID LP fun3 RP','fun2',5,'p_fun2','drawme_yacc.py',102),
  ('funBlock -> FUN tp','funBlock',2,'p_funBlock','drawme_yacc.py',112),
  ('tp -> VD','tp',1,'p_tp','drawme_yacc.py',117),
  ('tp -> type','tp',1,'p_tp','drawme_yacc.py',118),
  ('fun3 -> fun5 fun4','fun3',2,'p_fun3','drawme_yacc.py',125),
  ('fun3 -> empty','fun3',1,'p_fun3','drawme_yacc.py',126),
  ('fun4 -> C fun5 fun4','fun4',3,'p_fun4','drawme_yacc.py',130),
  ('fun4 -> empty','fun4',1,'p_fun4','drawme_yacc.py',131),
  ('fun5 -> type ID','fun5',2,'p_fun5','drawme_yacc.py',134),
  ('vars -> V var2','vars',2,'p_vars','drawme_yacc.py',140),
  ('vars -> empty','vars',1,'p_vars','drawme_yacc.py',141),
  ('var2 -> type var3 SC var2','var2',4,'p_var2','drawme_yacc.py',144),
  ('var2 -> empty','var2',1,'p_var2','drawme_yacc.py',145),
  ('var3 -> varSave var5 var4 var33','var3',4,'p_var3','drawme_yacc.py',148),
  ('var33 -> C varSave var5 var4 var33','var33',5,'p_var33','drawme_yacc.py',151),
  ('var33 -> empty','var33',1,'p_var33','drawme_yacc.py',152),
  ('varSave -> ID','varSave',1,'p_varSave','drawme_yacc.py',155),
  ('var4 -> EQ exp','var4',2,'p_var4','drawme_yacc.py',162),
  ('var4 -> empty','var4',1,'p_var4','drawme_yacc.py',163),
  ('var5 -> LC exp RC','var5',3,'p_var5','drawme_yacc.py',168),
  ('var5 -> empty','var5',1,'p_var5','drawme_yacc.py',169),
  ('type -> INT','type',1,'p_type','drawme_yacc.py',183),
  ('type -> FLOAT','type',1,'p_type','drawme_yacc.py',184),
  ('val -> VALI','val',1,'p_val','drawme_yacc.py',189),
  ('val -> VALF','val',1,'p_val','drawme_yacc.py',190),
  ('position -> PENP LP exp C exp RP SC','position',7,'p_position','drawme_yacc.py',202),
  ('colors -> PENC LP exp C exp C exp RP SC','colors',9,'p_colors','drawme_yacc.py',206),
  ('colors -> SETC LP exp C exp C exp RP SC','colors',9,'p_colors','drawme_yacc.py',207),
  ('colors -> BACO LP exp C exp C exp RP SC','colors',9,'p_colors','drawme_yacc.py',208),
  ('p_width -> PENW LP exp RP SC','p_width',5,'p_p_width','drawme_yacc.py',219),
  ('penwrite -> PENU SC','penwrite',2,'p_penwrite','drawme_yacc.py',223),
  ('penwrite -> PEND SC','penwrite',2,'p_penwrite','drawme_yacc.py',224),
  ('move -> LI mueve2','move',2,'p_move','drawme_yacc.py',232),
  ('mueve2 -> LP exp C A exp RP SC','mueve2',7,'p_mueve2','drawme_yacc.py',236),
  ('rect -> REC LP exp C exp p_fill RP SC','rect',8,'p_rect','drawme_yacc.py',239),
  ('p_fill -> C FILL','p_fill',2,'p_p_fill','drawme_yacc.py',243),
  ('p_fill -> empty','p_fill',1,'p_p_fill','drawme_yacc.py',244),
  ('tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC','tria',22,'p_tria','drawme_yacc.py',252),
  ('one_par -> CIR LP exp p_fill RP SC','one_par',6,'p_one_par','drawme_yacc.py',256),
  ('one_par -> SQ LP exp p_fill RP SC','one_par',6,'p_one_par','drawme_yacc.py',257),
  ('poly -> POL LP idList p_fill RP SC','poly',6,'p_poly','drawme_yacc.py',265),
  ('lstrip -> LS LP idList RP SC','lstrip',5,'p_lstrip','drawme_yacc.py',269),
  ('idList -> ID','idList',1,'p_idList','drawme_yacc.py',273),
  ('p_arc -> ARC LP exp RP SC','p_arc',5,'p_p_arc','drawme_yacc.py',280),
  ('expresion -> exp ex2','expresion',2,'p_expresion','drawme_yacc.py',284),
  ('ex2 -> ex3 exp','ex2',2,'p_ex2','drawme_yacc.py',287),
  ('ex2 -> empty','ex2',1,'p_ex2','drawme_yacc.py',288),
  ('ex3 -> LT','ex3',1,'p_ex3','drawme_yacc.py',292),
  ('ex3 -> MT','ex3',1,'p_ex3','drawme_yacc.py',293),
  ('ex3 -> D','ex3',1,'p_ex3','drawme_yacc.py',294),
  ('ex3 -> SEQ','ex3',1,'p_ex3','drawme_yacc.py',295),
  ('exp -> term exp2','exp',2,'p_exp','drawme_yacc.py',299),
  ('exp2 -> exp4 exp3 exp','exp2',3,'p_exp2','drawme_yacc.py',304),
  ('exp2 -> exp4 empty','exp2',2,'p_exp2','drawme_yacc.py',305),
  ('exp4 -> empty','exp4',1,'p_exp4','drawme_yacc.py',308),
  ('exp3 -> ADD','exp3',1,'p_exp3','drawme_yacc.py',312),
  ('exp3 -> SUB','exp3',1,'p_exp3','drawme_yacc.py',313),
  ('term -> fact term2','term',2,'p_term','drawme_yacc.py',317),
  ('term2 -> term4 term3 term','term2',3,'p_term2','drawme_yacc.py',320),
  ('term2 -> term4 empty','term2',2,'p_term2','drawme_yacc.py',321),
  ('term4 -> empty','term4',1,'p_term4','drawme_yacc.py',324),
  ('term3 -> M','term3',1,'p_term3','drawme_yacc.py',328),
  ('term3 -> DIV','term3',1,'p_term3','drawme_yacc.py',329),
  ('fact -> fact2 exp RP','fact',3,'p_fact','drawme_yacc.py',333),
  ('fact -> fact4','fact',1,'p_fact','drawme_yacc.py',334),
  ('fact2 -> LP','fact2',1,'p_fact2','drawme_yacc.py',339),
  ('fact4 -> valExp','fact4',1,'p_fact4','drawme_yacc.py',343),
  ('fact4 -> factID fact5','fact4',2,'p_fact4','drawme_yacc.py',344),
  ('factID -> ID','factID',1,'p_factID','drawme_yacc.py',351),
  ('fact5 -> LC exp RC','fact5',3,'p_fact5','drawme_yacc.py',356),
  ('fact5 -> empty','fact5',1,'p_fact5','drawme_yacc.py',357),
  ('valExp -> VALI','valExp',1,'p_valExp','drawme_yacc.py',363),
  ('valExp -> VALF','valExp',1,'p_valExp','drawme_yacc.py',364),
  ('rep -> RE rep3 block','rep',3,'p_rep','drawme_yacc.py',383),
  ('rep3 -> exp','rep3',1,'p_rep3','drawme_yacc.py',387),
  ('WID -> ID WID2','WID',2,'p_WID','drawme_yacc.py',392),
  ('WID2 -> assigment','WID2',1,'p_WID2','drawme_yacc.py',414),
  ('WID2 -> funCall','WID2',1,'p_WID2','drawme_yacc.py',415),
  ('assigment -> EQ tipeAss','assigment',2,'p_assigment','drawme_yacc.py',418),
  ('tipeAss -> exp SC','tipeAss',2,'p_tipeAss','drawme_yacc.py',423),
  ('tipeAss -> listAss','tipeAss',1,'p_tipeAss','drawme_yacc.py',424),
  ('tipeAss -> WID','tipeAss',1,'p_tipeAss','drawme_yacc.py',425),
  ('funCall -> funEra func2 RP SC','funCall',4,'p_funCall','drawme_yacc.py',428),
  ('funEra -> LP','funEra',1,'p_funEra','drawme_yacc.py',435),
  ('func2 -> func4 func3','func2',2,'p_func2','drawme_yacc.py',439),
  ('func2 -> empty','func2',1,'p_func2','drawme_yacc.py',440),
  ('func3 -> C func4 func3','func3',3,'p_func3','drawme_yacc.py',443),
  ('func3 -> empty','func3',1,'p_func3','drawme_yacc.py',444),
  ('func4 -> exp','func4',1,'p_func4','drawme_yacc.py',447),
  ('list -> L type ID prelistAss','list',4,'p_list','drawme_yacc.py',451),
  ('prelistAss -> EQ listAss','prelistAss',2,'p_prelistAss','drawme_yacc.py',458),
  ('prelistAss -> SC','prelistAss',1,'p_prelistAss','drawme_yacc.py',459),
  ('listAss -> LB lista3 RB SC','listAss',4,'p_listAss','drawme_yacc.py',462),
  ('lista2 -> val','lista2',1,'p_lista2','drawme_yacc.py',465),
  ('lista2 -> ID','lista2',1,'p_lista2','drawme_yacc.py',466),
  ('lista3 -> lista2 li4','lista3',2,'p_lista3','drawme_yacc.py',469),
  ('li4 -> C lista2 li4','li4',3,'p_li4','drawme_yacc.py',472),
  ('li4 -> empty','li4',1,'p_li4','drawme_yacc.py',473),
  ('lab -> LA LP stExp lab2 RP SC','lab',6,'p_lab','drawme_yacc.py',476),
  ('lab2 -> ADD stExp lab2','lab2',3,'p_lab2','drawme_yacc.py',480),
  ('lab2 -> empty','lab2',1,'p_lab2','drawme_yacc.py',481),
  ('stExp -> STR','stExp',1,'p_stExp','drawme_yacc.py',484),
  ('stExp -> exp','stExp',1,'p_stExp','drawme_yacc.py',485),
  ('condition -> IF LP expresion condRP block con2','condition',6,'p_condition','drawme_yacc.py',488),
  ('condRP -> RP','condRP',1,'p_condRP','drawme_yacc.py',492),
  ('con2 -> empty','con2',1,'p_con2','drawme_yacc.py',497),
  ('con2 -> con3 block','con2',2,'p_con2','drawme_yacc.py',498),
  ('con3 -> ELSE','con3',1,'p_con3','drawme_yacc.py',501),
  ('rt -> RT rtE SC','rt',3,'p_rt','drawme_yacc.py',505),
  ('rtE -> exp','rtE',1,'p_rtE','drawme_yacc.py',510),
  ('rtE -> empty','rtE',1,'p_rtE','drawme_yacc.py',511),
  ('block -> LB block3 RB','block',3,'p_block','drawme_yacc.py',533),
  ('block3 -> block2 block3','block3',2,'p_block3','drawme_yacc.py',536),
  ('block3 -> empty','block3',1,'p_block3','drawme_yacc.py',537),
  ('figure -> rect','figure',1,'p_figure','drawme_yacc.py',540),
  ('figure -> tria','figure',1,'p_figure','drawme_yacc.py',541),
  ('figure -> poly','figure',1,'p_figure','drawme_yacc.py',542),
  ('figure -> lstrip','figure',1,'p_figure','drawme_yacc.py',543),
  ('figure -> one_par','figure',1,'p_figure','drawme_yacc.py',544),
  ('figure -> p_arc','figure',1,'p_figure','drawme_yacc.py',545),
  ('pen -> colors','pen',1,'p_pen','drawme_yacc.py',548),
  ('pen -> p_width','pen',1,'p_pen','drawme_yacc.py',549),
  ('pen -> move','pen',1,'p_pen','drawme_yacc.py',550),
  ('pen -> position','pen',1,'p_pen','drawme_yacc.py',551),
  ('pen -> penwrite','pen',1,'p_pen','drawme_yacc.py',552),
  ('block2 -> figure','block2',1,'p_block2','drawme_yacc.py',556),
  ('block2 -> condition','block2',1,'p_block2','drawme_yacc.py',557),
  ('block2 -> pen','block2',1,'p_block2','drawme_yacc.py',558),
  ('block2 -> lab','block2',1,'p_block2','drawme_yacc.py',559),
  ('block2 -> list','block2',1,'p_block2','drawme_yacc.py',560),
  ('block2 -> WID','block2',1,'p_block2','drawme_yacc.py',561),
  ('block2 -> rep','block2',1,'p_block2','drawme_yacc.py',562),
  ('block2 -> rt','block2',1,'p_block2','drawme_yacc.py',563),
  ('empty -> <empty>','empty',0,'p_empty','drawme_yacc.py',566),
]
