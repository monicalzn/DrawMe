
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = "Xn\xa7\x00\xbf\xb5\x8b\x16n\xc0\x19$\xa5o'\x0e"
    
_lr_action_items = {'A':([202,],[241,]),'FLOAT':([15,31,34,47,92,],[24,24,24,24,24,]),'SUB':([101,102,104,105,108,109,110,145,146,148,149,150,187,191,232,],[-135,-75,-77,-78,-76,-135,-73,183,-63,-135,-66,-69,-72,-68,-67,]),'BACO':([38,53,54,55,57,58,59,60,65,69,72,76,77,79,81,82,86,88,89,90,112,117,121,124,129,132,133,140,141,161,166,167,169,181,212,236,243,249,251,256,260,262,266,269,272,273,274,276,283,286,287,291,292,294,307,],[56,56,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-41,-40,-82,-83,-81,-95,-97,-79,-86,-85,-84,-96,-87,-38,-50,-88,-135,-52,-104,-49,-98,-109,-111,-47,-48,-34,-112,-43,-42,-37,-35,-36,-46,]),'VALI':([49,68,103,107,111,114,115,116,118,120,125,128,130,131,134,135,136,137,138,164,165,183,184,185,188,189,190,192,193,194,197,203,215,219,220,221,222,224,228,241,244,247,258,264,275,293,296,300,302,],[104,104,-74,104,104,104,104,104,104,104,104,-89,104,104,104,104,104,104,104,104,206,-65,104,-64,104,-70,-71,104,104,104,104,104,104,-58,-59,-57,-56,104,104,104,104,206,104,104,104,104,104,104,104,]),'ELSE':([112,251,],[-114,271,]),'CIR':([38,53,54,55,57,58,59,60,65,69,72,76,77,79,81,82,86,88,89,90,112,117,121,124,129,132,133,140,141,161,166,167,169,181,212,236,243,249,251,256,260,262,266,269,272,273,274,276,283,286,287,291,292,294,307,],[83,83,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-41,-40,-82,-83,-81,-95,-97,-79,-86,-85,-84,-96,-87,-38,-50,-88,-135,-52,-104,-49,-98,-109,-111,-47,-48,-34,-112,-43,-42,-37,-35,-36,-46,]),'FUN':([1,3,4,5,6,7,8,14,15,16,22,26,32,33,35,40,45,47,97,112,140,141,181,266,],[-135,12,-9,-135,-4,-5,12,-8,-135,-20,-135,-22,-19,-135,-29,-10,-28,-135,-21,-114,-95,-97,-96,-98,]),'REC':([38,53,54,55,57,58,59,60,65,69,72,76,77,79,81,82,86,88,89,90,112,117,121,124,129,132,133,140,141,161,166,167,169,181,212,236,243,249,251,256,260,262,266,269,272,273,274,276,283,286,287,291,292,294,307,],[61,61,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-41,-40,-82,-83,-81,-95,-97,-79,-86,-85,-84,-96,-87,-38,-50,-88,-135,-52,-104,-49,-98,-109,-111,-47,-48,-34,-112,-43,-42,-37,-35,-36,-46,]),'DIV':([102,104,105,108,109,110,148,150,187,],[-75,-77,-78,-76,-135,-73,190,-69,-72,]),'DP':([10,94,],[20,-12,]),'D':([101,102,104,105,108,109,110,144,145,146,148,149,150,175,186,187,191,231,232,],[-135,-75,-77,-78,-76,-135,-73,-60,-135,-63,-135,-66,-69,219,-62,-72,-68,-61,-67,]),'PR':([0,],[1,]),'PENU':([38,53,54,55,57,58,59,60,65,69,72,76,77,79,81,82,86,88,89,90,112,117,121,124,129,132,133,140,141,161,166,167,169,181,212,236,243,249,251,256,260,262,266,269,272,273,274,276,283,286,287,291,292,294,307,],[63,63,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-41,-40,-82,-83,-81,-95,-97,-79,-86,-85,-84,-96,-87,-38,-50,-88,-135,-52,-104,-49,-98,-109,-111,-47,-48,-34,-112,-43,-42,-37,-35,-36,-46,]),'LB':([15,16,18,19,20,22,26,27,28,29,30,32,33,35,45,47,97,101,102,104,105,108,109,110,122,123,130,140,141,142,144,145,146,148,149,150,181,186,187,191,217,218,231,232,266,270,271,],[-135,-20,-2,-135,-135,-135,-22,-3,38,-11,38,-19,-135,-29,-28,-135,-21,-135,-75,-77,-78,-76,-135,-73,38,-80,165,-95,-97,165,-60,-135,-63,-135,-66,-69,-96,-62,-72,-68,-110,38,-61,-67,-98,38,-113,]),'LC':([127,289,299,],[164,293,300,]),'SEQ':([101,102,104,105,108,109,110,144,145,146,148,149,150,175,186,187,191,231,232,],[-135,-75,-77,-78,-76,-135,-73,-60,-135,-63,-135,-66,-69,220,-62,-72,-68,-61,-67,]),'LA':([38,53,54,55,57,58,59,60,65,69,72,76,77,79,81,82,86,88,89,90,112,117,121,124,129,132,133,140,141,161,166,167,169,181,212,236,243,249,251,256,260,262,266,269,272,273,274,276,283,286,287,291,292,294,307,],[64,64,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-41,-40,-82,-83,-81,-95,-97,-79,-86,-85,-84,-96,-87,-38,-50,-88,-135,-52,-104,-49,-98,-109,-111,-47,-48,-34,-112,-43,-42,-37,-35,-36,-46,]),'LT':([101,102,104,105,108,109,110,144,145,146,148,149,150,175,186,187,191,231,232,],[-135,-75,-77,-78,-76,-135,-73,-60,-135,-63,-135,-66,-69,222,-62,-72,-68,-61,-67,]),'LI':([38,53,54,55,57,58,59,60,65,69,72,76,77,79,81,82,86,88,89,90,112,117,121,124,129,132,133,140,141,161,166,167,169,181,212,236,243,249,251,256,260,262,266,269,272,273,274,276,283,286,287,291,292,294,307,],[67,67,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-41,-40,-82,-83,-81,-95,-97,-79,-86,-85,-84,-96,-87,-38,-50,-88,-135,-52,-104,-49,-98,-109,-111,-47,-48,-34,-112,-43,-42,-37,-35,-36,-46,]),'RE':([38,53,54,55,57,58,59,60,65,69,72,76,77,79,81,82,86,88,89,90,112,117,121,124,129,132,133,140,141,161,166,167,169,181,212,236,243,249,251,256,260,262,266,269,272,273,274,276,283,286,287,291,292,294,307,],[68,68,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-41,-40,-82,-83,-81,-95,-97,-79,-86,-85,-84,-96,-87,-38,-50,-88,-135,-52,-104,-49,-98,-109,-111,-47,-48,-34,-112,-43,-42,-37,-35,-36,-46,]),'POL':([38,53,54,55,57,58,59,60,65,69,72,76,77,79,81,82,86,88,89,90,112,117,121,124,129,132,133,140,141,161,166,167,169,181,212,236,243,249,251,256,260,262,266,269,272,273,274,276,283,286,287,291,292,294,307,],[66,66,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-41,-40,-82,-83,-81,-95,-97,-79,-86,-85,-84,-96,-87,-38,-50,-88,-135,-52,-104,-49,-98,-109,-111,-47,-48,-34,-112,-43,-42,-37,-35,-36,-46,]),'PEND':([38,53,54,55,57,58,59,60,65,69,72,76,77,79,81,82,86,88,89,90,112,117,121,124,129,132,133,140,141,161,166,167,169,181,212,236,243,249,251,256,260,262,266,269,272,273,274,276,283,286,287,291,292,294,307,],[70,70,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-41,-40,-82,-83,-81,-95,-97,-79,-86,-85,-84,-96,-87,-38,-50,-88,-135,-52,-104,-49,-98,-109,-111,-47,-48,-34,-112,-43,-42,-37,-35,-36,-46,]),'PENC':([38,53,54,55,57,58,59,60,65,69,72,76,77,79,81,82,86,88,89,90,112,117,121,124,129,132,133,140,141,161,166,167,169,181,212,236,243,249,251,256,260,262,266,269,272,273,274,276,283,286,287,291,292,294,307,],[71,71,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-41,-40,-82,-83,-81,-95,-97,-79,-86,-85,-84,-96,-87,-38,-50,-88,-135,-52,-104,-49,-98,-109,-111,-47,-48,-34,-112,-43,-42,-37,-35,-36,-46,]),'LS':([38,53,54,55,57,58,59,60,65,69,72,76,77,79,81,82,86,88,89,90,112,117,121,124,129,132,133,140,141,161,166,167,169,181,212,236,243,249,251,256,260,262,266,269,272,273,274,276,283,286,287,291,292,294,307,],[74,74,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-41,-40,-82,-83,-81,-95,-97,-79,-86,-85,-84,-96,-87,-38,-50,-88,-135,-52,-104,-49,-98,-109,-111,-47,-48,-34,-112,-43,-42,-37,-35,-36,-46,]),'LP':([21,49,51,56,61,62,64,66,67,68,71,74,75,78,80,83,84,85,87,103,107,111,114,115,116,118,120,125,128,130,131,134,135,136,137,138,164,183,184,185,188,189,190,192,193,194,197,203,215,219,220,221,222,224,228,241,244,258,264,275,293,296,300,302,],[31,103,111,114,115,116,118,119,120,103,125,126,127,128,134,135,136,137,138,-74,103,103,103,103,103,103,103,103,-89,103,103,103,103,103,103,103,103,-65,103,-64,103,-70,-71,103,103,103,103,103,103,-58,-59,-57,-56,103,103,103,103,103,103,103,103,103,103,103,]),'RC':([101,102,104,105,108,109,110,144,145,146,148,149,150,186,187,191,231,232,265,297,303,],[-135,-75,-77,-78,-76,-135,-73,-60,-135,-63,-135,-66,-69,-62,-72,-68,-61,-67,281,298,304,]),'FILL':([199,],[239,]),'$end':([2,39,112,],[0,-1,-114,]),'TRI':([38,53,54,55,57,58,59,60,65,69,72,76,77,79,81,82,86,88,89,90,112,117,121,124,129,132,133,140,141,161,166,167,169,181,212,236,243,249,251,256,260,262,266,269,272,273,274,276,283,286,287,291,292,294,307,],[75,75,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-41,-40,-82,-83,-81,-95,-97,-79,-86,-85,-84,-96,-87,-38,-50,-88,-135,-52,-104,-49,-98,-109,-111,-47,-48,-34,-112,-43,-42,-37,-35,-36,-46,]),'PENW':([38,53,54,55,57,58,59,60,65,69,72,76,77,79,81,82,86,88,89,90,112,117,121,124,129,132,133,140,141,161,166,167,169,181,212,236,243,249,251,256,260,262,266,269,272,273,274,276,283,286,287,291,292,294,307,],[62,62,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-41,-40,-82,-83,-81,-95,-97,-79,-86,-85,-84,-96,-87,-38,-50,-88,-135,-52,-104,-49,-98,-109,-111,-47,-48,-34,-112,-43,-42,-37,-35,-36,-46,]),'C':([37,41,48,50,95,101,102,104,105,106,108,109,110,139,143,144,145,146,148,149,150,151,152,153,158,159,160,162,171,172,176,177,178,182,186,187,191,205,206,207,208,209,211,231,232,234,235,242,250,255,267,281,295,298,301,304,],[-135,92,99,-27,-18,-135,-75,-77,-78,-26,-76,-135,-73,92,-135,-60,-135,-63,-135,-66,-69,192,193,194,199,-51,202,203,215,-94,199,199,228,99,-62,-72,-68,244,-32,-99,-33,-100,247,-61,-67,258,199,264,215,275,247,289,296,299,302,199,]),'RB':([38,52,53,54,55,57,58,59,60,65,69,72,73,76,77,79,81,82,86,88,89,90,112,113,117,121,124,129,132,133,140,141,161,166,167,169,181,206,207,208,209,210,211,212,236,243,246,248,249,251,256,260,262,266,267,269,272,273,274,276,282,283,286,287,291,292,294,307,],[-135,112,-135,-128,-120,-125,-118,-119,-123,-134,-130,-129,-116,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-115,-39,-41,-40,-82,-83,-81,-95,-97,-79,-86,-85,-84,-96,-32,-99,-33,-100,245,-135,-87,-38,-50,-101,-103,-88,-135,-52,-104,-49,-98,-135,-109,-111,-47,-48,-34,-102,-112,-43,-42,-37,-35,-36,-46,]),'M':([102,104,105,108,109,110,148,150,187,],[-75,-77,-78,-76,-135,-73,189,-69,-72,]),'L':([15,22,26,33,38,47,53,54,55,57,58,59,60,65,69,72,76,77,79,81,82,86,88,89,90,97,112,117,121,124,129,132,133,140,141,161,166,167,169,181,212,236,243,249,251,256,260,262,266,269,272,273,274,276,283,286,287,291,292,294,307,],[-135,34,-22,34,34,-135,34,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-21,-114,-39,-41,-40,-82,-83,-81,-95,-97,-79,-86,-85,-84,-96,-87,-38,-50,-88,-135,-52,-104,-49,-98,-109,-111,-47,-48,-34,-112,-43,-42,-37,-35,-36,-46,]),'VALF':([49,68,103,107,111,114,115,116,118,120,125,128,130,131,134,135,136,137,138,164,165,183,184,185,188,189,190,192,193,194,197,203,215,219,220,221,222,224,228,241,244,247,258,264,275,293,296,300,302,],[105,105,-74,105,105,105,105,105,105,105,105,-89,105,105,105,105,105,105,105,105,208,-65,105,-64,105,-70,-71,105,105,105,105,105,105,-58,-59,-57,-56,105,105,105,105,208,105,105,105,105,105,105,105,]),'ADD':([101,102,104,105,108,109,110,144,145,146,148,149,150,155,156,157,186,187,191,231,232,238,],[-135,-75,-77,-78,-76,-135,-73,-60,185,-63,-135,-66,-69,-107,197,-108,-62,-72,-68,-61,-67,197,]),'STR':([118,197,],[155,155,]),'V':([4,5,18,19,20,],[-9,15,-2,15,15,]),'RP':([31,41,42,44,91,93,95,101,102,104,105,108,109,110,128,131,139,144,145,146,147,148,149,150,154,155,156,157,158,159,163,170,171,172,173,174,175,176,177,179,180,186,187,191,196,198,200,201,214,216,223,225,226,227,231,232,233,235,238,239,250,252,259,261,263,268,277,280,284,304,305,],[-135,-135,94,-15,-14,-17,-18,-135,-75,-77,-78,-76,-135,-73,-89,-135,-135,-60,-135,-63,187,-135,-66,-69,195,-107,-135,-108,-135,-51,204,213,-135,-94,-91,217,-135,-135,-135,229,-16,-62,-72,-68,237,-106,240,-45,-90,-93,-53,-55,253,254,-61,-67,257,-135,-135,-44,-135,-54,278,-105,279,-92,285,288,290,-135,306,]),'GL':([1,],[4,]),'EQ':([37,78,96,143,],[49,130,142,49,]),'ID':([12,13,23,24,25,38,43,46,49,53,54,55,57,58,59,60,65,68,69,72,76,77,79,81,82,86,88,89,90,99,103,107,111,112,114,115,116,117,118,119,120,121,124,125,126,128,129,130,131,132,133,134,135,136,137,138,140,141,161,164,165,166,167,169,181,183,184,185,188,189,190,192,193,194,197,203,212,215,219,220,221,222,224,228,236,241,243,244,247,249,251,256,258,260,262,264,266,269,272,273,274,275,276,283,286,287,291,292,293,294,296,300,302,307,],[-13,21,-30,-31,37,78,95,96,108,78,-128,-120,-125,-118,-119,-123,-134,108,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,143,-74,108,108,-114,108,108,108,-39,108,159,108,-41,-40,108,159,-89,-82,108,108,-83,-81,108,108,108,108,108,-95,-97,-79,108,209,-86,-85,-84,-96,-65,108,-64,108,-70,-71,108,108,108,108,108,-87,108,-58,-59,-57,-56,108,108,-38,108,-50,108,209,-88,-135,-52,108,-104,-49,108,-98,-109,-111,-47,-48,108,-34,-112,-43,-42,-37,-35,108,-36,108,108,108,-46,]),'IF':([38,53,54,55,57,58,59,60,65,69,72,76,77,79,81,82,86,88,89,90,112,117,121,124,129,132,133,140,141,161,166,167,169,181,212,236,243,249,251,256,260,262,266,269,272,273,274,276,283,286,287,291,292,294,307,],[80,80,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-41,-40,-82,-83,-81,-95,-97,-79,-86,-85,-84,-96,-87,-38,-50,-88,-135,-52,-104,-49,-98,-109,-111,-47,-48,-34,-112,-43,-42,-37,-35,-36,-46,]),'SETC':([38,53,54,55,57,58,59,60,65,69,72,76,77,79,81,82,86,88,89,90,112,117,121,124,129,132,133,140,141,161,166,167,169,181,212,236,243,249,251,256,260,262,266,269,272,273,274,276,283,286,287,291,292,294,307,],[85,85,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-41,-40,-82,-83,-81,-95,-97,-79,-86,-85,-84,-96,-87,-38,-50,-88,-135,-52,-104,-49,-98,-109,-111,-47,-48,-34,-112,-43,-42,-37,-35,-36,-46,]),'INT':([15,31,34,47,92,],[23,23,23,23,23,]),'SQ':([38,53,54,55,57,58,59,60,65,69,72,76,77,79,81,82,86,88,89,90,112,117,121,124,129,132,133,140,141,161,166,167,169,181,212,236,243,249,251,256,260,262,266,269,272,273,274,276,283,286,287,291,292,294,307,],[84,84,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-41,-40,-82,-83,-81,-95,-97,-79,-86,-85,-84,-96,-87,-38,-50,-88,-135,-52,-104,-49,-98,-109,-111,-47,-48,-34,-112,-43,-42,-37,-35,-36,-46,]),'PENP':([38,53,54,55,57,58,59,60,65,69,72,76,77,79,81,82,86,88,89,90,112,117,121,124,129,132,133,140,141,161,166,167,169,181,212,236,243,249,251,256,260,262,266,269,272,273,274,276,283,286,287,291,292,294,307,],[51,51,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-41,-40,-82,-83,-81,-95,-97,-79,-86,-85,-84,-96,-87,-38,-50,-88,-135,-52,-104,-49,-98,-109,-111,-47,-48,-34,-112,-43,-42,-37,-35,-36,-46,]),'MT':([101,102,104,105,108,109,110,144,145,146,148,149,150,175,186,187,191,231,232,],[-135,-75,-77,-78,-76,-135,-73,-60,-135,-63,-135,-66,-69,221,-62,-72,-68,-61,-67,]),'ARC':([38,53,54,55,57,58,59,60,65,69,72,76,77,79,81,82,86,88,89,90,112,117,121,124,129,132,133,140,141,161,166,167,169,181,212,236,243,249,251,256,260,262,266,269,272,273,274,276,283,286,287,291,292,294,307,],[87,87,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-41,-40,-82,-83,-81,-95,-97,-79,-86,-85,-84,-96,-87,-38,-50,-88,-135,-52,-104,-49,-98,-109,-111,-47,-48,-34,-112,-43,-42,-37,-35,-36,-46,]),'SC':([36,37,48,50,63,70,96,98,100,101,102,104,105,106,108,109,110,143,144,145,146,148,149,150,168,182,186,187,191,195,204,213,229,230,231,232,237,240,245,253,254,257,278,279,285,288,290,306,],[47,-135,-135,-27,117,124,141,-23,-25,-135,-75,-77,-78,-26,-76,-135,-73,-135,-60,-135,-63,-135,-66,-69,212,-135,-62,-72,-68,236,243,249,256,-24,-61,-67,260,262,266,273,274,276,286,287,291,292,294,307,]),'MAIN':([1,3,4,5,6,7,8,9,11,14,15,16,17,22,26,32,33,35,40,45,47,97,112,140,141,181,266,],[-135,-135,-9,-135,-4,-5,-135,18,-7,-8,-135,-20,-6,-135,-22,-19,-135,-29,-10,-28,-135,-21,-114,-95,-97,-96,-98,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'fun5':([31,92,],[41,139,]),'fun4':([41,139,],[91,180,]),'term4':([109,],[148,]),'block3':([38,53,],[52,113,]),'block2':([38,53,],[53,53,]),'vars':([5,19,20,],[14,27,29,]),'fun2':([3,8,],[10,10,]),'mainVDir':([19,],[28,]),'move':([38,53,],[57,57,]),'tria':([38,53,],[58,58,]),'con2':([251,],[269,]),'poly':([38,53,],[59,59,]),'lab2':([156,238,],[196,261,]),'colors':([38,53,],[60,60,]),'globals':([1,],[6,]),'WID2':([78,],[133,]),'term3':([148,],[188,]),'varAss':([130,],[167,]),'lista3':([165,],[210,]),'term2':([109,],[149,]),'condRP':([174,],[218,]),'functions':([3,8,],[8,8,]),'valExp':([49,68,107,111,114,115,116,118,120,125,130,131,134,135,136,137,138,164,184,188,192,193,194,197,203,215,224,228,241,244,258,264,275,293,296,300,302,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'fun3':([31,],[42,]),'assigment':([78,],[129,]),'exp3':([145,],[184,]),'exp2':([101,],[144,]),'rep':([38,53,],[65,65,]),'func4':([131,215,],[171,250,]),'exp4':([101,],[145,]),'funCall':([78,],[132,]),'lstrip':([38,53,],[55,55,]),'pen':([38,53,],[69,69,]),'ex2':([175,],[223,]),'condition':([38,53,],[72,72,]),'p_fill':([158,176,177,235,304,],[200,226,227,259,305,]),'prog':([0,],[2,]),'figure':([38,53,],[54,54,]),'funBlock':([3,8,],[13,13,]),'main':([9,],[19,]),'type':([15,31,34,47,92,],[25,43,46,25,43,]),'li4':([211,267,],[246,282,]),'empty':([1,3,5,8,15,19,20,22,31,33,37,38,41,47,48,53,101,109,131,139,143,145,148,156,158,171,175,176,177,182,211,235,238,250,251,267,304,],[7,11,16,11,26,16,16,35,44,35,50,73,93,26,100,73,146,150,173,93,50,186,191,198,201,216,225,201,201,100,248,201,198,216,272,248,201,]),'ex3':([175,],[224,]),'var5':([22,33,],[32,45,]),'var4':([37,143,],[48,182,]),'expresion':([134,],[174,]),'con3':([251,],[270,]),'prelistAss':([96,],[140,]),'idList':([119,126,],[158,163,]),'var3':([25,],[36,]),'var2':([15,47,],[22,97,]),'func3':([171,250,],[214,268,]),'rep3':([68,],[122,]),'glob':([1,],[5,]),'mueve2':([67,],[121,]),'lab':([38,53,],[76,76,]),'stExp':([118,197,],[156,238,]),'one_par':([38,53,],[77,77,]),'fact2':([49,68,107,111,114,115,116,118,120,125,130,131,134,135,136,137,138,164,184,188,192,193,194,197,203,215,224,228,241,244,258,264,275,293,296,300,302,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'funVDir':([20,],[30,]),'rect':([38,53,],[79,79,]),'fact4':([49,68,107,111,114,115,116,118,120,125,130,131,134,135,136,137,138,164,184,188,192,193,194,197,203,215,224,228,241,244,258,264,275,293,296,300,302,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'p2':([1,],[3,]),'p3':([3,8,],[9,17,]),'term':([49,68,107,111,114,115,116,118,120,125,130,131,134,135,136,137,138,164,184,188,192,193,194,197,203,215,224,228,241,244,258,264,275,293,296,300,302,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,232,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'WID':([38,53,],[81,81,]),'p_arc':([38,53,],[82,82,]),'val':([165,247,],[207,207,]),'func2':([131,],[170,]),'tipeAss':([130,],[169,]),'list':([22,33,38,53,],[33,33,86,86,]),'funEra':([78,],[131,]),'var33':([48,182,],[98,230,]),'fact':([49,68,107,111,114,115,116,118,120,125,130,131,134,135,136,137,138,164,184,188,192,193,194,197,203,215,224,228,241,244,258,264,275,293,296,300,302,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'exp':([49,68,107,111,114,115,116,118,120,125,130,131,134,135,136,137,138,164,184,192,193,194,197,203,215,224,228,241,244,258,264,275,293,296,300,302,],[106,123,147,151,152,153,154,157,160,162,168,172,175,176,177,178,179,205,231,233,234,235,157,242,172,252,255,263,265,277,280,284,295,297,301,303,]),'position':([38,53,],[88,88,]),'p_width':([38,53,],[89,89,]),'listAss':([130,142,],[166,181,]),'penwrite':([38,53,],[90,90,]),'block':([28,30,122,218,270,],[39,40,161,251,283,]),'lista2':([165,247,],[211,267,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> PR p2 p3 main mainVDir block','prog',6,'p_prog','drawme_yacc.py',27),
  ('main -> MAIN','main',1,'p_main','drawme_yacc.py',43),
  ('mainVDir -> vars','mainVDir',1,'p_mainVDir','drawme_yacc.py',48),
  ('p2 -> globals','p2',1,'p_p2','drawme_yacc.py',52),
  ('p2 -> empty','p2',1,'p_p2','drawme_yacc.py',53),
  ('p3 -> functions p3','p3',2,'p_p3','drawme_yacc.py',58),
  ('p3 -> empty','p3',1,'p_p3','drawme_yacc.py',59),
  ('globals -> glob vars','globals',2,'p_globals','drawme_yacc.py',62),
  ('glob -> GL','glob',1,'p_glob','drawme_yacc.py',74),
  ('functions -> fun2 DP funVDir block','functions',4,'p_functions','drawme_yacc.py',79),
  ('funVDir -> vars','funVDir',1,'p_funVDir','drawme_yacc.py',91),
  ('fun2 -> funBlock ID LP fun3 RP','fun2',5,'p_fun2','drawme_yacc.py',101),
  ('funBlock -> FUN','funBlock',1,'p_funBlock','drawme_yacc.py',112),
  ('fun3 -> fun5 fun4','fun3',2,'p_fun3','drawme_yacc.py',116),
  ('fun3 -> empty','fun3',1,'p_fun3','drawme_yacc.py',117),
  ('fun4 -> C fun5 fun4','fun4',3,'p_fun4','drawme_yacc.py',121),
  ('fun4 -> empty','fun4',1,'p_fun4','drawme_yacc.py',122),
  ('fun5 -> type ID','fun5',2,'p_fun5','drawme_yacc.py',125),
  ('vars -> V var2 var5','vars',3,'p_vars','drawme_yacc.py',131),
  ('vars -> empty','vars',1,'p_vars','drawme_yacc.py',132),
  ('var2 -> type var3 SC var2','var2',4,'p_var2','drawme_yacc.py',135),
  ('var2 -> empty','var2',1,'p_var2','drawme_yacc.py',136),
  ('var3 -> ID var4 var33','var3',3,'p_var3','drawme_yacc.py',139),
  ('var33 -> C ID var4 var33','var33',4,'p_var33','drawme_yacc.py',143),
  ('var33 -> empty','var33',1,'p_var33','drawme_yacc.py',144),
  ('var4 -> EQ exp','var4',2,'p_var4','drawme_yacc.py',149),
  ('var4 -> empty','var4',1,'p_var4','drawme_yacc.py',150),
  ('var5 -> list var5','var5',2,'p_var5','drawme_yacc.py',153),
  ('var5 -> empty','var5',1,'p_var5','drawme_yacc.py',154),
  ('type -> INT','type',1,'p_type','drawme_yacc.py',157),
  ('type -> FLOAT','type',1,'p_type','drawme_yacc.py',158),
  ('val -> VALI','val',1,'p_val','drawme_yacc.py',163),
  ('val -> VALF','val',1,'p_val','drawme_yacc.py',164),
  ('position -> PENP LP exp C exp RP SC','position',7,'p_position','drawme_yacc.py',176),
  ('colors -> PENC LP exp C exp C exp RP SC','colors',9,'p_colors','drawme_yacc.py',180),
  ('colors -> SETC LP exp C exp C exp RP SC','colors',9,'p_colors','drawme_yacc.py',181),
  ('colors -> BACO LP exp C exp C exp RP SC','colors',9,'p_colors','drawme_yacc.py',182),
  ('p_width -> PENW LP exp RP SC','p_width',5,'p_p_width','drawme_yacc.py',193),
  ('penwrite -> PENU SC','penwrite',2,'p_penwrite','drawme_yacc.py',197),
  ('penwrite -> PEND SC','penwrite',2,'p_penwrite','drawme_yacc.py',198),
  ('move -> LI mueve2','move',2,'p_move','drawme_yacc.py',206),
  ('mueve2 -> LP exp C A exp RP SC','mueve2',7,'p_mueve2','drawme_yacc.py',210),
  ('rect -> REC LP exp C exp p_fill RP SC','rect',8,'p_rect','drawme_yacc.py',213),
  ('p_fill -> C FILL','p_fill',2,'p_p_fill','drawme_yacc.py',217),
  ('p_fill -> empty','p_fill',1,'p_p_fill','drawme_yacc.py',218),
  ('tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC','tria',22,'p_tria','drawme_yacc.py',226),
  ('one_par -> CIR LP exp p_fill RP SC','one_par',6,'p_one_par','drawme_yacc.py',230),
  ('one_par -> SQ LP exp p_fill RP SC','one_par',6,'p_one_par','drawme_yacc.py',231),
  ('poly -> POL LP idList p_fill RP SC','poly',6,'p_poly','drawme_yacc.py',239),
  ('lstrip -> LS LP idList RP SC','lstrip',5,'p_lstrip','drawme_yacc.py',243),
  ('idList -> ID','idList',1,'p_idList','drawme_yacc.py',247),
  ('p_arc -> ARC LP exp RP SC','p_arc',5,'p_p_arc','drawme_yacc.py',254),
  ('expresion -> exp ex2','expresion',2,'p_expresion','drawme_yacc.py',258),
  ('ex2 -> ex3 exp','ex2',2,'p_ex2','drawme_yacc.py',261),
  ('ex2 -> empty','ex2',1,'p_ex2','drawme_yacc.py',262),
  ('ex3 -> LT','ex3',1,'p_ex3','drawme_yacc.py',266),
  ('ex3 -> MT','ex3',1,'p_ex3','drawme_yacc.py',267),
  ('ex3 -> D','ex3',1,'p_ex3','drawme_yacc.py',268),
  ('ex3 -> SEQ','ex3',1,'p_ex3','drawme_yacc.py',269),
  ('exp -> term exp2','exp',2,'p_exp','drawme_yacc.py',273),
  ('exp2 -> exp4 exp3 exp','exp2',3,'p_exp2','drawme_yacc.py',276),
  ('exp2 -> exp4 empty','exp2',2,'p_exp2','drawme_yacc.py',277),
  ('exp4 -> empty','exp4',1,'p_exp4','drawme_yacc.py',280),
  ('exp3 -> ADD','exp3',1,'p_exp3','drawme_yacc.py',284),
  ('exp3 -> SUB','exp3',1,'p_exp3','drawme_yacc.py',285),
  ('term -> fact term2','term',2,'p_term','drawme_yacc.py',289),
  ('term2 -> term4 term3 term','term2',3,'p_term2','drawme_yacc.py',292),
  ('term2 -> term4 empty','term2',2,'p_term2','drawme_yacc.py',293),
  ('term4 -> empty','term4',1,'p_term4','drawme_yacc.py',296),
  ('term3 -> M','term3',1,'p_term3','drawme_yacc.py',300),
  ('term3 -> DIV','term3',1,'p_term3','drawme_yacc.py',301),
  ('fact -> fact2 exp RP','fact',3,'p_fact','drawme_yacc.py',305),
  ('fact -> fact4','fact',1,'p_fact','drawme_yacc.py',306),
  ('fact2 -> LP','fact2',1,'p_fact2','drawme_yacc.py',311),
  ('fact4 -> valExp','fact4',1,'p_fact4','drawme_yacc.py',315),
  ('fact4 -> ID','fact4',1,'p_fact4','drawme_yacc.py',316),
  ('valExp -> VALI','valExp',1,'p_valExp','drawme_yacc.py',323),
  ('valExp -> VALF','valExp',1,'p_valExp','drawme_yacc.py',324),
  ('rep -> RE rep3 block','rep',3,'p_rep','drawme_yacc.py',343),
  ('rep3 -> exp','rep3',1,'p_rep3','drawme_yacc.py',347),
  ('WID -> ID WID2','WID',2,'p_WID','drawme_yacc.py',352),
  ('WID2 -> assigment','WID2',1,'p_WID2','drawme_yacc.py',372),
  ('WID2 -> funCall','WID2',1,'p_WID2','drawme_yacc.py',373),
  ('assigment -> EQ tipeAss','assigment',2,'p_assigment','drawme_yacc.py',376),
  ('tipeAss -> varAss','tipeAss',1,'p_tipeAss','drawme_yacc.py',381),
  ('tipeAss -> listAss','tipeAss',1,'p_tipeAss','drawme_yacc.py',382),
  ('varAss -> exp SC','varAss',2,'p_varAss','drawme_yacc.py',385),
  ('funCall -> funEra func2 RP SC','funCall',4,'p_funCall','drawme_yacc.py',388),
  ('funEra -> LP','funEra',1,'p_funEra','drawme_yacc.py',393),
  ('func2 -> func4 func3','func2',2,'p_func2','drawme_yacc.py',397),
  ('func2 -> empty','func2',1,'p_func2','drawme_yacc.py',398),
  ('func3 -> C func4 func3','func3',3,'p_func3','drawme_yacc.py',403),
  ('func3 -> empty','func3',1,'p_func3','drawme_yacc.py',404),
  ('func4 -> exp','func4',1,'p_func4','drawme_yacc.py',408),
  ('list -> L type ID prelistAss','list',4,'p_list','drawme_yacc.py',413),
  ('prelistAss -> EQ listAss','prelistAss',2,'p_prelistAss','drawme_yacc.py',420),
  ('prelistAss -> SC','prelistAss',1,'p_prelistAss','drawme_yacc.py',421),
  ('listAss -> LB lista3 RB SC','listAss',4,'p_listAss','drawme_yacc.py',424),
  ('lista2 -> val','lista2',1,'p_lista2','drawme_yacc.py',427),
  ('lista2 -> ID','lista2',1,'p_lista2','drawme_yacc.py',428),
  ('lista3 -> lista2 li4','lista3',2,'p_lista3','drawme_yacc.py',431),
  ('li4 -> C lista2 li4','li4',3,'p_li4','drawme_yacc.py',434),
  ('li4 -> empty','li4',1,'p_li4','drawme_yacc.py',435),
  ('lab -> LA LP stExp lab2 RP SC','lab',6,'p_lab','drawme_yacc.py',438),
  ('lab2 -> ADD stExp lab2','lab2',3,'p_lab2','drawme_yacc.py',442),
  ('lab2 -> empty','lab2',1,'p_lab2','drawme_yacc.py',443),
  ('stExp -> STR','stExp',1,'p_stExp','drawme_yacc.py',446),
  ('stExp -> exp','stExp',1,'p_stExp','drawme_yacc.py',447),
  ('condition -> IF LP expresion condRP block con2','condition',6,'p_condition','drawme_yacc.py',450),
  ('condRP -> RP','condRP',1,'p_condRP','drawme_yacc.py',454),
  ('con2 -> empty','con2',1,'p_con2','drawme_yacc.py',459),
  ('con2 -> con3 block','con2',2,'p_con2','drawme_yacc.py',460),
  ('con3 -> ELSE','con3',1,'p_con3','drawme_yacc.py',463),
  ('block -> LB block3 RB','block',3,'p_block','drawme_yacc.py',468),
  ('block3 -> block2 block3','block3',2,'p_block3','drawme_yacc.py',471),
  ('block3 -> empty','block3',1,'p_block3','drawme_yacc.py',472),
  ('figure -> rect','figure',1,'p_figure','drawme_yacc.py',475),
  ('figure -> tria','figure',1,'p_figure','drawme_yacc.py',476),
  ('figure -> poly','figure',1,'p_figure','drawme_yacc.py',477),
  ('figure -> lstrip','figure',1,'p_figure','drawme_yacc.py',478),
  ('figure -> one_par','figure',1,'p_figure','drawme_yacc.py',479),
  ('figure -> p_arc','figure',1,'p_figure','drawme_yacc.py',480),
  ('pen -> colors','pen',1,'p_pen','drawme_yacc.py',483),
  ('pen -> p_width','pen',1,'p_pen','drawme_yacc.py',484),
  ('pen -> move','pen',1,'p_pen','drawme_yacc.py',485),
  ('pen -> position','pen',1,'p_pen','drawme_yacc.py',486),
  ('pen -> penwrite','pen',1,'p_pen','drawme_yacc.py',487),
  ('block2 -> figure','block2',1,'p_block2','drawme_yacc.py',490),
  ('block2 -> condition','block2',1,'p_block2','drawme_yacc.py',491),
  ('block2 -> pen','block2',1,'p_block2','drawme_yacc.py',492),
  ('block2 -> lab','block2',1,'p_block2','drawme_yacc.py',493),
  ('block2 -> list','block2',1,'p_block2','drawme_yacc.py',494),
  ('block2 -> WID','block2',1,'p_block2','drawme_yacc.py',495),
  ('block2 -> rep','block2',1,'p_block2','drawme_yacc.py',496),
  ('empty -> <empty>','empty',0,'p_empty','drawme_yacc.py',499),
]
