
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xa7{\xd8\xf0J\x1d\xe7%kP\xbf\xd1B\x02\x95\xf9'
    
_lr_action_items = {'A':([205,],[259,]),'FLOAT':([12,16,36,87,135,],[24,24,24,24,24,]),'SUB':([70,103,106,112,114,116,118,120,131,132,164,165,166,167,168,169,219,220,237,238,239,267,],[-95,-100,-101,-149,-149,-149,-93,-91,-98,-99,212,-81,-149,-84,-87,-94,-86,-90,-97,-96,-111,-85,]),'BACO':([34,43,44,45,47,48,49,51,54,56,59,61,63,68,71,73,74,80,81,82,93,99,158,162,184,185,186,243,246,260,262,264,268,269,273,277,286,289,292,295,296,298,306,312,319,320,326,327,329,330,353,],[46,46,-143,-134,-140,-132,-133,-138,-148,-147,-137,-145,-144,-135,-131,-146,-136,-141,-139,-142,-128,-57,-102,-124,-106,-105,-107,-108,-110,-127,-56,-66,-54,-149,-55,-109,-63,-65,-119,-121,-64,-68,-50,-122,-59,-58,-53,-51,-52,-118,-62,]),'MT':([70,103,106,112,114,116,118,120,131,132,163,164,165,166,167,168,169,173,215,219,220,237,238,239,266,267,],[-95,-100,-101,-149,-149,-149,-93,-91,-98,-99,-78,-149,-81,-149,-84,-87,-94,227,-80,-86,-90,-97,-96,-111,-79,-85,]),'VALI':([60,67,89,90,92,95,96,97,98,102,108,113,117,121,122,123,124,125,126,127,128,129,130,143,161,187,194,199,200,204,209,212,213,214,216,217,218,224,225,226,227,228,230,231,234,241,244,248,252,259,265,281,285,290,297,300,303,328,336,337,340,345,348,],[103,103,103,103,103,103,103,103,103,103,103,-92,103,103,103,103,103,103,103,103,103,-112,103,103,103,103,103,103,103,103,103,-83,103,-82,103,-88,-89,-74,-75,-77,-73,-72,103,-76,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'CIR':([34,43,44,45,47,48,49,51,54,56,59,61,63,68,71,73,74,80,81,82,93,99,158,162,184,185,186,243,246,260,262,264,268,269,273,277,286,289,292,295,296,298,306,312,319,320,326,327,329,330,353,],[50,50,-143,-134,-140,-132,-133,-138,-148,-147,-137,-145,-144,-135,-131,-146,-136,-141,-139,-142,-128,-57,-102,-124,-106,-105,-107,-108,-110,-127,-56,-66,-54,-149,-55,-109,-63,-65,-119,-121,-64,-68,-50,-122,-59,-58,-53,-51,-52,-118,-62,]),'LI':([34,43,44,45,47,48,49,51,54,56,59,61,63,68,71,73,74,80,81,82,93,99,158,162,184,185,186,243,246,260,262,264,268,269,273,277,286,289,292,295,296,298,306,312,319,320,326,327,329,330,353,],[53,53,-143,-134,-140,-132,-133,-138,-148,-147,-137,-145,-144,-135,-131,-146,-136,-141,-139,-142,-128,-57,-102,-124,-106,-105,-107,-108,-110,-127,-56,-66,-54,-149,-55,-109,-63,-65,-119,-121,-64,-68,-50,-122,-59,-58,-53,-51,-52,-118,-62,]),'FUN':([1,3,4,5,6,7,8,14,15,16,29,31,35,87,93,141,],[-149,12,-9,-149,-4,-5,12,-27,-8,-149,-26,-29,-10,-149,-128,-28,]),'REC':([34,43,44,45,47,48,49,51,54,56,59,61,63,68,71,73,74,80,81,82,93,99,158,162,184,185,186,243,246,260,262,264,268,269,273,277,286,289,292,295,296,298,306,312,319,320,326,327,329,330,353,],[52,52,-143,-134,-140,-132,-133,-138,-148,-147,-137,-145,-144,-135,-131,-146,-136,-141,-139,-142,-128,-57,-102,-124,-106,-105,-107,-108,-110,-127,-56,-66,-54,-149,-55,-109,-63,-65,-119,-121,-64,-68,-50,-122,-59,-58,-53,-51,-52,-118,-62,]),'DIV':([70,103,106,114,116,118,120,131,132,166,168,169,220,237,238,239,],[-95,-100,-101,-149,-149,-93,-91,-98,-99,218,-87,-94,-90,-97,-96,-111,]),'PENX':([34,43,44,45,47,48,49,51,54,56,59,61,63,68,71,73,74,80,81,82,93,99,158,162,184,185,186,243,246,260,262,264,268,269,273,277,286,289,292,295,296,298,306,312,319,320,326,327,329,330,353,],[77,77,-143,-134,-140,-132,-133,-138,-148,-147,-137,-145,-144,-135,-131,-146,-136,-141,-139,-142,-128,-57,-102,-124,-106,-105,-107,-108,-110,-127,-56,-66,-54,-149,-55,-109,-63,-65,-119,-121,-64,-68,-50,-122,-59,-58,-53,-51,-52,-118,-62,]),'D':([70,103,106,112,114,116,118,120,131,132,163,164,165,166,167,168,169,173,215,219,220,237,238,239,266,267,],[-95,-100,-101,-149,-149,-149,-93,-91,-98,-99,-78,-149,-81,-149,-84,-87,-94,224,-80,-86,-90,-97,-96,-111,-79,-85,]),'PR':([0,],[1,]),'LB':([10,14,16,18,19,20,21,29,31,32,33,38,39,70,79,87,103,104,105,106,107,116,137,141,143,187,222,223,251,293,294,],[-149,-27,-149,-2,-149,-11,34,-26,-29,-3,34,89,-33,-95,127,-149,-100,-103,34,-101,-104,127,-12,-28,193,244,-120,34,89,34,-123,]),'LC':([38,39,70,79,110,116,143,189,251,322,343,],[90,-33,-95,128,161,128,194,248,90,328,345,]),'SEQ':([70,103,106,112,114,116,118,120,131,132,163,164,165,166,167,168,169,173,215,219,220,237,238,239,266,267,],[-95,-100,-101,-149,-149,-149,-93,-91,-98,-99,-78,-149,-81,-149,-84,-87,-94,225,-80,-86,-90,-97,-96,-111,-79,-85,]),'LA':([34,43,44,45,47,48,49,51,54,56,59,61,63,68,71,73,74,80,81,82,93,99,158,162,184,185,186,243,246,260,262,264,268,269,273,277,286,289,292,295,296,298,306,312,319,320,326,327,329,330,353,],[55,55,-143,-134,-140,-132,-133,-138,-148,-147,-137,-145,-144,-135,-131,-146,-136,-141,-139,-142,-128,-57,-102,-124,-106,-105,-107,-108,-110,-127,-56,-66,-54,-149,-55,-109,-63,-65,-119,-121,-64,-68,-50,-122,-59,-58,-53,-51,-52,-118,-62,]),'LT':([70,103,106,112,114,116,118,120,131,132,163,164,165,166,167,168,169,173,215,219,220,237,238,239,266,267,],[-95,-100,-101,-149,-149,-149,-93,-91,-98,-99,-78,-149,-81,-149,-84,-87,-94,228,-80,-86,-90,-97,-96,-111,-79,-85,]),'PENY':([34,43,44,45,47,48,49,51,54,56,59,61,63,68,71,73,74,80,81,82,93,99,158,162,184,185,186,243,246,260,262,264,268,269,273,277,286,289,292,295,296,298,306,312,319,320,326,327,329,330,353,],[58,58,-143,-134,-140,-132,-133,-138,-148,-147,-137,-145,-144,-135,-131,-146,-136,-141,-139,-142,-128,-57,-102,-124,-106,-105,-107,-108,-110,-127,-56,-66,-54,-149,-55,-109,-63,-65,-119,-121,-64,-68,-50,-122,-59,-58,-53,-51,-52,-118,-62,]),'PENW':([34,43,44,45,47,48,49,51,54,56,59,61,63,68,71,73,74,80,81,82,93,99,158,162,184,185,186,243,246,260,262,264,268,269,273,277,286,289,292,295,296,298,306,312,319,320,326,327,329,330,353,],[69,69,-143,-134,-140,-132,-133,-138,-148,-147,-137,-145,-144,-135,-131,-146,-136,-141,-139,-142,-128,-57,-102,-124,-106,-105,-107,-108,-110,-127,-56,-66,-54,-149,-55,-109,-63,-65,-119,-121,-64,-68,-50,-122,-59,-58,-53,-51,-52,-118,-62,]),'RE':([34,43,44,45,47,48,49,51,54,56,59,61,63,68,71,73,74,80,81,82,93,99,158,162,184,185,186,243,246,260,262,264,268,269,273,277,286,289,292,295,296,298,306,312,319,320,326,327,329,330,353,],[60,60,-143,-134,-140,-132,-133,-138,-148,-147,-137,-145,-144,-135,-131,-146,-136,-141,-139,-142,-128,-57,-102,-124,-106,-105,-107,-108,-110,-127,-56,-66,-54,-149,-55,-109,-63,-65,-119,-121,-64,-68,-50,-122,-59,-58,-53,-51,-52,-118,-62,]),'POL':([34,43,44,45,47,48,49,51,54,56,59,61,63,68,71,73,74,80,81,82,93,99,158,162,184,185,186,243,246,260,262,264,268,269,273,277,286,289,292,295,296,298,306,312,319,320,326,327,329,330,353,],[57,57,-143,-134,-140,-132,-133,-138,-148,-147,-137,-145,-144,-135,-131,-146,-136,-141,-139,-142,-128,-57,-102,-124,-106,-105,-107,-108,-110,-127,-56,-66,-54,-149,-55,-109,-63,-65,-119,-121,-64,-68,-50,-122,-59,-58,-53,-51,-52,-118,-62,]),'PENC':([34,43,44,45,47,48,49,51,54,56,59,61,63,68,71,73,74,80,81,82,93,99,158,162,184,185,186,243,246,260,262,264,268,269,273,277,286,289,292,295,296,298,306,312,319,320,326,327,329,330,353,],[62,62,-143,-134,-140,-132,-133,-138,-148,-147,-137,-145,-144,-135,-131,-146,-136,-141,-139,-142,-128,-57,-102,-124,-106,-105,-107,-108,-110,-127,-56,-66,-54,-149,-55,-109,-63,-65,-119,-121,-64,-68,-50,-122,-59,-58,-53,-51,-52,-118,-62,]),'LS':([34,43,44,45,47,48,49,51,54,56,59,61,63,68,71,73,74,80,81,82,93,99,158,162,184,185,186,243,246,260,262,264,268,269,273,277,286,289,292,295,296,298,306,312,319,320,326,327,329,330,353,],[65,65,-143,-134,-140,-132,-133,-138,-148,-147,-137,-145,-144,-135,-131,-146,-136,-141,-139,-142,-128,-57,-102,-124,-106,-105,-107,-108,-110,-127,-56,-66,-54,-149,-55,-109,-63,-65,-119,-121,-64,-68,-50,-122,-59,-58,-53,-51,-52,-118,-62,]),'LP':([27,28,41,46,50,52,53,55,57,58,62,65,66,67,69,70,72,75,76,77,78,79,89,90,92,95,96,97,98,102,108,113,116,117,121,122,123,124,125,126,127,128,129,130,143,161,187,193,194,199,200,204,209,212,213,214,216,217,218,224,225,226,227,228,230,231,234,241,244,248,252,259,265,281,285,290,297,300,303,328,332,336,337,340,345,348,],[36,-13,92,95,96,97,98,100,101,102,108,109,110,113,121,-95,122,123,124,125,126,129,113,113,113,113,113,113,113,113,113,-92,129,113,113,113,113,113,113,113,113,113,-112,113,113,113,113,252,113,113,113,113,113,-83,113,-82,113,-88,-89,-74,-75,-77,-73,-72,113,-76,113,113,113,113,113,113,113,113,113,113,113,113,113,113,336,113,113,113,113,113,]),'RC':([70,103,106,112,114,116,118,120,131,132,147,163,164,165,166,167,168,169,179,215,219,220,237,238,239,253,266,267,278,282,283,291,304,317,339,349,],[-95,-100,-101,-149,-149,-149,-93,-91,-98,-99,198,-78,-149,-81,-149,-84,-87,-94,238,-80,-86,-90,-97,-96,-111,-149,-79,-85,301,305,-45,311,-149,-44,341,350,]),'FILL':([201,],[256,]),'$end':([2,40,93,],[0,-1,-128,]),'TRI':([34,43,44,45,47,48,49,51,54,56,59,61,63,68,71,73,74,80,81,82,93,99,158,162,184,185,186,243,246,260,262,264,268,269,273,277,286,289,292,295,296,298,306,312,319,320,326,327,329,330,353,],[66,66,-143,-134,-140,-132,-133,-138,-148,-147,-137,-145,-144,-135,-131,-146,-136,-141,-139,-142,-128,-57,-102,-124,-106,-105,-107,-108,-110,-127,-56,-66,-54,-149,-55,-109,-63,-65,-119,-121,-64,-68,-50,-122,-59,-58,-53,-51,-52,-118,-62,]),'RT':([34,43,44,45,47,48,49,51,54,56,59,61,63,68,71,73,74,80,81,82,93,99,158,162,184,185,186,243,246,260,262,264,268,269,273,277,286,289,292,295,296,298,306,312,319,320,326,327,329,330,353,],[67,67,-143,-134,-140,-132,-133,-138,-148,-147,-137,-145,-144,-135,-131,-146,-136,-141,-139,-142,-128,-57,-102,-124,-106,-105,-107,-108,-110,-127,-56,-66,-54,-149,-55,-109,-63,-65,-119,-121,-64,-68,-50,-122,-59,-58,-53,-51,-52,-118,-62,]),'C':([38,39,70,83,88,91,103,106,112,114,116,118,120,131,132,142,144,146,148,149,150,151,152,153,155,156,159,163,164,165,166,167,168,169,174,175,177,181,182,188,189,195,196,197,198,211,215,219,220,237,238,239,249,250,251,253,255,258,263,266,267,272,275,276,279,280,301,302,304,305,311,325,334,335,338,341,344,347,350,],[-149,-33,-95,135,-149,-38,-100,-101,-149,-149,-149,-93,-91,-98,-99,190,-35,-37,-36,199,200,201,204,205,201,-67,209,-78,-149,-81,-149,-84,-87,-94,201,234,201,241,-117,135,-149,-34,-39,-47,-46,265,-80,-86,-90,-97,-96,-111,-25,-21,-149,281,285,201,290,-79,-85,297,241,300,-149,303,-24,190,281,-41,322,332,337,-40,340,343,332,348,201,]),'VD':([12,],[22,]),'RB':([34,42,43,44,45,47,48,49,51,54,56,59,61,63,64,68,70,71,73,74,80,81,82,93,94,99,103,106,112,114,116,118,120,131,132,145,158,162,163,164,165,166,167,168,169,178,184,185,186,215,219,220,237,238,239,243,246,260,262,264,266,267,268,269,273,277,286,289,292,295,296,298,306,312,314,319,320,325,326,327,329,330,331,333,344,346,353,],[-149,93,-149,-143,-134,-140,-132,-133,-138,-148,-147,-137,-145,-144,-130,-135,-95,-131,-146,-136,-141,-139,-142,-128,-129,-57,-100,-101,-149,-149,-149,-93,-91,-98,-99,197,-102,-124,-78,-149,-81,-149,-84,-87,-94,237,-106,-105,-107,-80,-86,-90,-97,-96,-111,-108,-110,-127,-56,-66,-79,-85,-54,-149,-55,-109,-63,-65,-119,-121,-64,-68,-50,-122,324,-59,-58,-149,-53,-51,-52,-118,335,-43,-149,-42,-62,]),'M':([70,103,106,114,116,118,120,131,132,166,168,169,220,237,238,239,],[-95,-100,-101,-149,-149,-93,-91,-98,-99,217,-87,-94,-90,-97,-96,-111,]),'VALF':([60,67,89,90,92,95,96,97,98,102,108,113,117,121,122,123,124,125,126,127,128,129,130,143,161,187,194,199,200,204,209,212,213,214,216,217,218,224,225,226,227,228,230,231,234,241,244,248,252,259,265,281,285,290,297,300,303,328,336,337,340,345,348,],[106,106,106,106,106,106,106,106,106,106,106,-92,106,106,106,106,106,106,106,106,106,-112,106,106,106,106,106,106,106,106,106,-83,106,-82,106,-88,-89,-74,-75,-77,-73,-72,106,-76,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'ELSE':([93,269,],[-128,294,]),'P':([23,24,85,],[-48,-49,139,]),'ADD':([70,103,106,112,114,116,118,120,131,132,164,165,166,167,168,169,219,220,237,238,239,267,],[-95,-100,-101,-149,-149,-149,-93,-91,-98,-99,214,-81,-149,-84,-87,-94,-86,-90,-97,-96,-111,-85,]),'STR':([100,],[154,]),'V':([4,5,10,18,19,137,],[-9,16,16,-2,16,-12,]),'RP':([36,70,83,84,86,103,106,112,114,116,118,120,129,130,131,132,134,136,151,154,155,156,157,160,163,164,165,166,167,168,169,170,171,172,173,174,176,177,180,181,182,183,188,189,202,203,207,215,219,220,229,232,233,236,237,238,239,240,242,247,249,250,254,256,258,266,267,270,275,287,288,299,301,307,310,313,316,342,350,351,],[-149,-95,-149,137,-18,-100,-101,-149,-149,-149,-93,-91,-112,-149,-98,-99,-17,-20,-149,206,-149,-67,208,210,-78,-149,-81,-149,-84,-87,-94,220,221,222,-149,-149,235,-149,239,-149,-117,-114,-149,-149,257,-61,261,-80,-86,-90,-69,-71,271,274,-97,-96,-111,-113,-116,-19,-25,-21,284,-60,-149,-79,-85,-70,-149,308,309,-115,-24,318,321,323,325,344,-149,352,]),'GL':([1,],[4,]),'EQ':([38,39,70,79,88,91,131,132,133,146,148,197,198,237,238,239,251,279,],[-149,-33,-95,-149,143,-38,-98,-99,187,-37,-36,-47,-46,-97,-96,-111,-149,143,]),'ID':([13,22,23,24,25,26,30,34,43,44,45,47,48,49,51,54,56,59,60,61,63,67,68,71,73,74,80,81,82,85,89,90,92,93,95,96,97,98,99,101,102,108,109,113,117,121,122,123,124,125,126,127,128,129,130,138,139,140,143,158,161,162,184,185,186,187,190,194,199,200,204,209,212,213,214,216,217,218,224,225,226,227,228,230,231,234,241,243,244,246,248,252,259,260,262,264,265,268,269,273,277,281,285,286,289,290,292,295,296,297,298,300,303,306,312,319,320,326,327,328,329,330,336,337,340,345,348,353,],[28,-15,-48,-49,-14,-16,39,70,70,-143,-134,-140,-132,-133,-138,-148,-147,-137,107,-145,-144,70,-135,-131,-146,-136,-141,-139,-142,-149,70,70,70,-128,70,70,70,70,-57,156,70,70,156,-92,70,70,70,70,70,70,70,70,70,-112,70,189,-22,-23,70,-102,70,-124,-106,-105,-107,70,39,70,70,70,70,70,-83,70,-82,70,-88,-89,-74,-75,-77,-73,-72,70,-76,70,70,-108,70,-110,70,70,70,-127,-56,-66,70,-54,-149,-55,-109,70,70,-63,-65,70,-119,-121,-64,70,-68,70,70,-50,-122,-59,-58,-53,-51,70,-52,-118,70,70,70,70,70,-62,]),'IF':([34,43,44,45,47,48,49,51,54,56,59,61,63,68,71,73,74,80,81,82,93,99,158,162,184,185,186,243,246,260,262,264,268,269,273,277,286,289,292,295,296,298,306,312,319,320,326,327,329,330,353,],[72,72,-143,-134,-140,-132,-133,-138,-148,-147,-137,-145,-144,-135,-131,-146,-136,-141,-139,-142,-128,-57,-102,-124,-106,-105,-107,-108,-110,-127,-56,-66,-54,-149,-55,-109,-63,-65,-119,-121,-64,-68,-50,-122,-59,-58,-53,-51,-52,-118,-62,]),'SETC':([34,43,44,45,47,48,49,51,54,56,59,61,63,68,71,73,74,80,81,82,93,99,158,162,184,185,186,243,246,260,262,264,268,269,273,277,286,289,292,295,296,298,306,312,319,320,326,327,329,330,353,],[76,76,-143,-134,-140,-132,-133,-138,-148,-147,-137,-145,-144,-135,-131,-146,-136,-141,-139,-142,-128,-57,-102,-124,-106,-105,-107,-108,-110,-127,-56,-66,-54,-149,-55,-109,-63,-65,-119,-121,-64,-68,-50,-122,-59,-58,-53,-51,-52,-118,-62,]),'INT':([12,16,36,87,135,],[23,23,23,23,23,]),'SQ':([34,43,44,45,47,48,49,51,54,56,59,61,63,68,71,73,74,80,81,82,93,99,158,162,184,185,186,243,246,260,262,264,268,269,273,277,286,289,292,295,296,298,306,312,319,320,326,327,329,330,353,],[75,75,-143,-134,-140,-132,-133,-138,-148,-147,-137,-145,-144,-135,-131,-146,-136,-141,-139,-142,-128,-57,-102,-124,-106,-105,-107,-108,-110,-127,-56,-66,-54,-149,-55,-109,-63,-65,-119,-121,-64,-68,-50,-122,-59,-58,-53,-51,-52,-118,-62,]),'PENP':([34,43,44,45,47,48,49,51,54,56,59,61,63,68,71,73,74,80,81,82,93,99,158,162,184,185,186,243,246,260,262,264,268,269,273,277,286,289,292,295,296,298,306,312,319,320,326,327,329,330,353,],[41,41,-143,-134,-140,-132,-133,-138,-148,-147,-137,-145,-144,-135,-131,-146,-136,-141,-139,-142,-128,-57,-102,-124,-106,-105,-107,-108,-110,-127,-56,-66,-54,-149,-55,-109,-63,-65,-119,-121,-64,-68,-50,-122,-59,-58,-53,-51,-52,-118,-62,]),'MET':([70,103,106,112,114,116,118,120,131,132,163,164,165,166,167,168,169,173,215,219,220,237,238,239,266,267,],[-95,-100,-101,-149,-149,-149,-93,-91,-98,-99,-78,-149,-81,-149,-84,-87,-94,226,-80,-86,-90,-97,-96,-111,-79,-85,]),'ARC':([34,43,44,45,47,48,49,51,54,56,59,61,63,68,71,73,74,80,81,82,93,99,158,162,184,185,186,243,246,260,262,264,268,269,273,277,286,289,292,295,296,298,306,312,319,320,326,327,329,330,353,],[78,78,-143,-134,-140,-132,-133,-138,-148,-147,-137,-145,-144,-135,-131,-146,-136,-141,-139,-142,-128,-57,-102,-124,-106,-105,-107,-108,-110,-127,-56,-66,-54,-149,-55,-109,-63,-65,-119,-121,-64,-68,-50,-122,-59,-58,-53,-51,-52,-118,-62,]),'LET':([70,103,106,112,114,116,118,120,131,132,163,164,165,166,167,168,169,173,215,219,220,237,238,239,266,267,],[-95,-100,-101,-149,-149,-149,-93,-91,-98,-99,-78,-149,-81,-149,-84,-87,-94,231,-80,-86,-90,-97,-96,-111,-79,-85,]),'SC':([37,38,39,67,70,79,88,91,103,106,111,112,114,115,116,118,119,120,131,132,133,142,144,146,148,163,164,165,166,167,168,169,191,192,195,196,197,198,206,208,210,215,219,220,221,235,237,238,239,245,251,257,261,266,267,271,274,279,284,302,305,308,309,315,318,321,323,324,335,352,],[87,-149,-33,-149,-95,-149,-149,-38,-100,-101,162,-149,-149,-125,-149,-93,-126,-91,-98,-99,186,-149,-35,-37,-36,-78,-149,-81,-149,-84,-87,-94,-30,-32,-34,-39,-47,-46,260,262,264,-80,-86,-90,268,273,-97,-96,-111,277,-149,286,289,-79,-85,296,298,-149,306,-149,-41,319,320,-31,326,327,329,330,-40,353,]),'MAIN':([1,3,4,5,6,7,8,9,11,14,15,16,17,29,31,35,87,93,141,],[-149,-149,-9,-149,-4,-5,-149,18,-7,-27,-8,-149,-6,-26,-29,-10,-149,-128,-28,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'vars':([5,10,19,],[15,20,32,]),'move':([34,43,],[47,47,]),'rep3':([60,],[105,]),'colors':([34,43,],[51,51,]),'WID2':([133,],[185,]),'rtE':([67,],[111,]),'tp':([12,],[25,]),'fact5':([79,116,],[133,169,]),'p_fill':([151,155,174,177,258,350,],[202,207,233,236,287,351,]),'main':([9,],[19,]),'var5':([38,251,],[88,279,]),'var4':([88,279,],[142,302,]),'var6':([143,],[195,]),'var3':([30,],[37,]),'func4':([130,241,],[181,275,]),'varSave':([30,190,],[38,251,]),'fact2':([67,89,90,92,95,96,97,98,102,108,117,121,122,123,124,125,126,127,128,130,143,161,187,194,199,200,204,209,213,216,230,234,241,244,248,252,259,265,281,285,290,297,300,303,328,336,337,340,345,348,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'funVDir':([10,],[21,]),'condition':([34,43,],[63,63,]),'fact4':([67,89,90,92,95,96,97,98,102,108,117,121,122,123,124,125,126,127,128,130,143,161,187,194,199,200,204,209,213,216,230,234,241,244,248,252,259,265,281,285,290,297,300,303,328,336,337,340,345,348,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'expresion':([122,],[172,]),'term':([67,89,90,92,95,96,97,98,102,108,117,121,122,123,124,125,126,127,128,130,143,161,187,194,199,200,204,209,213,216,230,234,241,244,248,252,259,265,281,285,290,297,300,303,328,336,337,340,345,348,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,267,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'p_arc':([34,43,],[74,74,]),'factID':([34,43,67,89,90,92,95,96,97,98,102,108,117,121,122,123,124,125,126,127,128,130,143,161,187,194,199,200,204,209,213,216,230,234,241,244,248,252,259,265,281,285,290,297,300,303,328,336,337,340,345,348,],[79,79,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'arr':([85,],[138,]),'term4':([114,],[166,]),'term3':([166,],[216,]),'term2':([114,],[167,]),'lstrip':([34,43,],[45,45,]),'rt':([34,43,],[54,54,]),'var33':([142,302,],[191,315,]),'var62':([253,304,],[282,317,]),'rep':([34,43,],[56,56,]),'label':([34,43,],[59,59,]),'funCall':([79,116,],[131,131,]),'pen':([34,43,],[61,61,]),'prog':([0,],[2,]),'mueve2':([53,],[99,]),'one_par':([34,43,],[68,68,]),'rect':([34,43,],[71,71,]),'fID':([13,],[27,]),'listAss':([187,],[246,]),'block':([21,33,105,223,293,],[35,40,158,269,312,]),'fun5':([36,135,],[83,188,]),'fun4':([83,188,],[134,247,]),'fun3':([36,],[84,]),'fun2':([3,8,],[10,10,]),'poly':([34,43,],[49,49,]),'globals':([1,],[6,]),'valExp':([60,67,89,90,92,95,96,97,98,102,108,117,121,122,123,124,125,126,127,128,130,143,161,187,194,199,200,204,209,213,216,230,234,241,244,248,252,259,265,281,285,290,297,300,303,328,336,337,340,345,348,],[104,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'exp3':([164,],[213,]),'exp2':([112,],[163,]),'penwrite':([34,43,],[82,82,]),'exp4':([112,],[164,]),'type':([12,16,36,87,135,],[26,30,85,30,85,]),'empty':([1,3,5,8,10,16,19,34,36,38,43,67,79,83,85,87,88,112,114,116,130,142,151,155,164,166,173,174,177,181,188,189,251,253,258,269,275,279,302,304,325,344,350,],[7,11,14,11,14,31,14,64,86,91,64,119,132,136,140,31,144,165,168,132,183,192,203,203,215,219,232,203,203,242,136,249,91,283,203,295,242,144,192,283,333,333,203,]),'p2':([1,],[3,]),'p3':([3,8,],[9,17,]),'WID':([34,43,],[73,73,]),'tipeAss':([187,],[243,]),'funEra':([79,116,],[130,130,]),'condRP':([172,],[223,]),'func3':([181,275,],[240,299,]),'block3':([34,43,],[42,94,]),'block2':([34,43,],[43,43,]),'figure':([34,43,],[44,44,]),'func2':([130,],[180,]),'mainVDir':([19,],[33,]),'tria':([34,43,],[48,48,]),'functions':([3,8,],[8,8,]),'assigment':([133,],[184,]),'var2':([16,87,],[29,141,]),'ex2':([173,],[229,]),'ex3':([173,],[230,]),'funBlock':([3,8,],[13,13,]),'con2':([269,],[292,]),'con3':([269,],[293,]),'idList':([101,109,],[155,160,]),'var61':([325,344,],[331,346,]),'glob':([1,],[5,]),'arrDim':([189,],[250,]),'exp':([67,89,90,92,95,96,97,98,102,108,117,121,122,123,124,125,126,127,128,130,143,161,187,194,199,200,204,209,213,230,234,241,244,248,252,259,265,281,285,290,297,300,303,328,336,337,340,345,348,],[115,145,147,149,150,151,152,153,157,159,170,171,173,174,175,176,177,178,179,182,196,211,245,253,254,255,258,263,266,270,272,182,276,278,280,288,291,304,307,310,313,314,316,334,338,339,342,347,349,]),'var51':([90,],[148,]),'position':([34,43,],[80,80,]),'p_width':([34,43,],[81,81,]),'var52':([89,],[146,]),'fact':([67,89,90,92,95,96,97,98,102,108,117,121,122,123,124,125,126,127,128,130,143,161,187,194,199,200,204,209,213,216,230,234,241,244,248,252,259,265,281,285,290,297,300,303,328,336,337,340,345,348,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> PR p2 p3 main mainVDir block','prog',6,'p_prog','drawme_yacc.py',37),
  ('main -> MAIN','main',1,'p_main','drawme_yacc.py',53),
  ('mainVDir -> vars','mainVDir',1,'p_mainVDir','drawme_yacc.py',58),
  ('p2 -> globals','p2',1,'p_p2','drawme_yacc.py',62),
  ('p2 -> empty','p2',1,'p_p2','drawme_yacc.py',63),
  ('p3 -> functions p3','p3',2,'p_p3','drawme_yacc.py',67),
  ('p3 -> empty','p3',1,'p_p3','drawme_yacc.py',68),
  ('globals -> glob vars','globals',2,'p_globals','drawme_yacc.py',71),
  ('glob -> GL','glob',1,'p_glob','drawme_yacc.py',84),
  ('functions -> fun2 funVDir block','functions',3,'p_functions','drawme_yacc.py',89),
  ('funVDir -> vars','funVDir',1,'p_funVDir','drawme_yacc.py',101),
  ('fun2 -> funBlock fID LP fun3 RP','fun2',5,'p_fun2','drawme_yacc.py',113),
  ('fID -> ID','fID',1,'p_fID','drawme_yacc.py',126),
  ('funBlock -> FUN tp','funBlock',2,'p_funBlock','drawme_yacc.py',130),
  ('tp -> VD','tp',1,'p_tp','drawme_yacc.py',135),
  ('tp -> type','tp',1,'p_tp','drawme_yacc.py',136),
  ('fun3 -> fun5 fun4','fun3',2,'p_fun3','drawme_yacc.py',143),
  ('fun3 -> empty','fun3',1,'p_fun3','drawme_yacc.py',144),
  ('fun4 -> C fun5 fun4','fun4',3,'p_fun4','drawme_yacc.py',148),
  ('fun4 -> empty','fun4',1,'p_fun4','drawme_yacc.py',149),
  ('fun5 -> type arr ID arrDim','fun5',4,'p_fun5','drawme_yacc.py',152),
  ('arr -> P','arr',1,'p_arr','drawme_yacc.py',169),
  ('arr -> empty','arr',1,'p_arr','drawme_yacc.py',170),
  ('arrDim -> LC exp RC','arrDim',3,'p_arrDim','drawme_yacc.py',178),
  ('arrDim -> empty','arrDim',1,'p_arrDim','drawme_yacc.py',179),
  ('vars -> V var2','vars',2,'p_vars','drawme_yacc.py',190),
  ('vars -> empty','vars',1,'p_vars','drawme_yacc.py',191),
  ('var2 -> type var3 SC var2','var2',4,'p_var2','drawme_yacc.py',194),
  ('var2 -> empty','var2',1,'p_var2','drawme_yacc.py',195),
  ('var3 -> varSave var5 var4 var33','var3',4,'p_var3','drawme_yacc.py',198),
  ('var33 -> C varSave var5 var4 var33','var33',5,'p_var33','drawme_yacc.py',201),
  ('var33 -> empty','var33',1,'p_var33','drawme_yacc.py',202),
  ('varSave -> ID','varSave',1,'p_varSave','drawme_yacc.py',205),
  ('var4 -> EQ var6','var4',2,'p_var4','drawme_yacc.py',212),
  ('var4 -> empty','var4',1,'p_var4','drawme_yacc.py',213),
  ('var5 -> LC var51','var5',2,'p_var5','drawme_yacc.py',218),
  ('var5 -> LB var52','var5',2,'p_var5','drawme_yacc.py',219),
  ('var5 -> empty','var5',1,'p_var5','drawme_yacc.py',220),
  ('var6 -> exp','var6',1,'p_var6','drawme_yacc.py',225),
  ('var6 -> LB LP exp C exp RP var61 RB','var6',8,'p_var6','drawme_yacc.py',226),
  ('var6 -> LC exp var62 RC','var6',4,'p_var6','drawme_yacc.py',227),
  ('var61 -> C LP exp C exp RP var61','var61',7,'p_var61','drawme_yacc.py',265),
  ('var61 -> empty','var61',1,'p_var61','drawme_yacc.py',266),
  ('var62 -> C exp var62','var62',3,'p_var62','drawme_yacc.py',272),
  ('var62 -> empty','var62',1,'p_var62','drawme_yacc.py',273),
  ('var51 -> exp RC','var51',2,'p_var51','drawme_yacc.py',279),
  ('var52 -> exp RB','var52',2,'p_var52','drawme_yacc.py',295),
  ('type -> INT','type',1,'p_type','drawme_yacc.py',314),
  ('type -> FLOAT','type',1,'p_type','drawme_yacc.py',315),
  ('position -> PENP LP exp C exp RP SC','position',7,'p_position','drawme_yacc.py',334),
  ('colors -> PENC LP exp C exp C exp RP SC','colors',9,'p_colors','drawme_yacc.py',338),
  ('colors -> SETC LP exp C exp C exp RP SC','colors',9,'p_colors','drawme_yacc.py',339),
  ('colors -> BACO LP exp C exp C exp RP SC','colors',9,'p_colors','drawme_yacc.py',340),
  ('p_width -> PENW LP exp RP SC','p_width',5,'p_p_width','drawme_yacc.py',351),
  ('penwrite -> PENX LP exp RP SC','penwrite',5,'p_penwrite','drawme_yacc.py',355),
  ('penwrite -> PENY LP exp RP SC','penwrite',5,'p_penwrite','drawme_yacc.py',356),
  ('move -> LI mueve2','move',2,'p_move','drawme_yacc.py',364),
  ('mueve2 -> LP exp C A exp RP SC','mueve2',7,'p_mueve2','drawme_yacc.py',368),
  ('rect -> REC LP exp C exp p_fill RP SC','rect',8,'p_rect','drawme_yacc.py',371),
  ('p_fill -> C FILL','p_fill',2,'p_p_fill','drawme_yacc.py',375),
  ('p_fill -> empty','p_fill',1,'p_p_fill','drawme_yacc.py',376),
  ('tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC','tria',22,'p_tria','drawme_yacc.py',384),
  ('one_par -> CIR LP exp p_fill RP SC','one_par',6,'p_one_par','drawme_yacc.py',388),
  ('one_par -> SQ LP exp p_fill RP SC','one_par',6,'p_one_par','drawme_yacc.py',389),
  ('poly -> POL LP idList p_fill RP SC','poly',6,'p_poly','drawme_yacc.py',397),
  ('lstrip -> LS LP idList RP SC','lstrip',5,'p_lstrip','drawme_yacc.py',401),
  ('idList -> ID','idList',1,'p_idList','drawme_yacc.py',405),
  ('p_arc -> ARC LP exp p_fill RP SC','p_arc',6,'p_p_arc','drawme_yacc.py',416),
  ('expresion -> exp ex2','expresion',2,'p_expresion','drawme_yacc.py',420),
  ('ex2 -> ex3 exp','ex2',2,'p_ex2','drawme_yacc.py',423),
  ('ex2 -> empty','ex2',1,'p_ex2','drawme_yacc.py',424),
  ('ex3 -> LT','ex3',1,'p_ex3','drawme_yacc.py',428),
  ('ex3 -> MT','ex3',1,'p_ex3','drawme_yacc.py',429),
  ('ex3 -> D','ex3',1,'p_ex3','drawme_yacc.py',430),
  ('ex3 -> SEQ','ex3',1,'p_ex3','drawme_yacc.py',431),
  ('ex3 -> LET','ex3',1,'p_ex3','drawme_yacc.py',432),
  ('ex3 -> MET','ex3',1,'p_ex3','drawme_yacc.py',433),
  ('exp -> term exp2','exp',2,'p_exp','drawme_yacc.py',437),
  ('exp2 -> exp4 exp3 exp','exp2',3,'p_exp2','drawme_yacc.py',442),
  ('exp2 -> exp4 empty','exp2',2,'p_exp2','drawme_yacc.py',443),
  ('exp4 -> empty','exp4',1,'p_exp4','drawme_yacc.py',446),
  ('exp3 -> ADD','exp3',1,'p_exp3','drawme_yacc.py',450),
  ('exp3 -> SUB','exp3',1,'p_exp3','drawme_yacc.py',451),
  ('term -> fact term2','term',2,'p_term','drawme_yacc.py',455),
  ('term2 -> term4 term3 term','term2',3,'p_term2','drawme_yacc.py',458),
  ('term2 -> term4 empty','term2',2,'p_term2','drawme_yacc.py',459),
  ('term4 -> empty','term4',1,'p_term4','drawme_yacc.py',462),
  ('term3 -> M','term3',1,'p_term3','drawme_yacc.py',466),
  ('term3 -> DIV','term3',1,'p_term3','drawme_yacc.py',467),
  ('fact -> fact2 exp RP','fact',3,'p_fact','drawme_yacc.py',471),
  ('fact -> fact4','fact',1,'p_fact','drawme_yacc.py',472),
  ('fact2 -> LP','fact2',1,'p_fact2','drawme_yacc.py',477),
  ('fact4 -> valExp','fact4',1,'p_fact4','drawme_yacc.py',481),
  ('fact4 -> factID fact5','fact4',2,'p_fact4','drawme_yacc.py',482),
  ('factID -> ID','factID',1,'p_factID','drawme_yacc.py',500),
  ('fact5 -> LC exp RC','fact5',3,'p_fact5','drawme_yacc.py',505),
  ('fact5 -> LB exp RB','fact5',3,'p_fact5','drawme_yacc.py',506),
  ('fact5 -> funCall','fact5',1,'p_fact5','drawme_yacc.py',507),
  ('fact5 -> empty','fact5',1,'p_fact5','drawme_yacc.py',508),
  ('valExp -> VALI','valExp',1,'p_valExp','drawme_yacc.py',528),
  ('valExp -> VALF','valExp',1,'p_valExp','drawme_yacc.py',529),
  ('rep -> RE rep3 block','rep',3,'p_rep','drawme_yacc.py',548),
  ('rep3 -> valExp','rep3',1,'p_rep3','drawme_yacc.py',552),
  ('rep3 -> ID','rep3',1,'p_rep3','drawme_yacc.py',553),
  ('WID -> factID fact5 WID2','WID',3,'p_WID','drawme_yacc.py',563),
  ('WID2 -> assigment','WID2',1,'p_WID2','drawme_yacc.py',614),
  ('WID2 -> SC','WID2',1,'p_WID2','drawme_yacc.py',615),
  ('assigment -> EQ tipeAss','assigment',2,'p_assigment','drawme_yacc.py',618),
  ('tipeAss -> exp SC','tipeAss',2,'p_tipeAss','drawme_yacc.py',623),
  ('tipeAss -> listAss','tipeAss',1,'p_tipeAss','drawme_yacc.py',624),
  ('funCall -> funEra func2 RP','funCall',3,'p_funCall','drawme_yacc.py',627),
  ('funEra -> LP','funEra',1,'p_funEra','drawme_yacc.py',644),
  ('func2 -> func4 func3','func2',2,'p_func2','drawme_yacc.py',648),
  ('func2 -> empty','func2',1,'p_func2','drawme_yacc.py',649),
  ('func3 -> C func4 func3','func3',3,'p_func3','drawme_yacc.py',652),
  ('func3 -> empty','func3',1,'p_func3','drawme_yacc.py',653),
  ('func4 -> exp','func4',1,'p_func4','drawme_yacc.py',656),
  ('listAss -> LB exp C exp RB SC','listAss',6,'p_listAss','drawme_yacc.py',660),
  ('condition -> IF LP expresion condRP block con2','condition',6,'p_condition','drawme_yacc.py',669),
  ('condRP -> RP','condRP',1,'p_condRP','drawme_yacc.py',673),
  ('con2 -> empty','con2',1,'p_con2','drawme_yacc.py',678),
  ('con2 -> con3 block','con2',2,'p_con2','drawme_yacc.py',679),
  ('con3 -> ELSE','con3',1,'p_con3','drawme_yacc.py',682),
  ('rt -> RT rtE SC','rt',3,'p_rt','drawme_yacc.py',686),
  ('rtE -> exp','rtE',1,'p_rtE','drawme_yacc.py',691),
  ('rtE -> empty','rtE',1,'p_rtE','drawme_yacc.py',692),
  ('label -> LA LP STR RP SC','label',5,'p_label','drawme_yacc.py',700),
  ('block -> LB block3 RB','block',3,'p_block','drawme_yacc.py',722),
  ('block3 -> block2 block3','block3',2,'p_block3','drawme_yacc.py',725),
  ('block3 -> empty','block3',1,'p_block3','drawme_yacc.py',726),
  ('figure -> rect','figure',1,'p_figure','drawme_yacc.py',729),
  ('figure -> tria','figure',1,'p_figure','drawme_yacc.py',730),
  ('figure -> poly','figure',1,'p_figure','drawme_yacc.py',731),
  ('figure -> lstrip','figure',1,'p_figure','drawme_yacc.py',732),
  ('figure -> one_par','figure',1,'p_figure','drawme_yacc.py',733),
  ('figure -> p_arc','figure',1,'p_figure','drawme_yacc.py',734),
  ('figure -> label','figure',1,'p_figure','drawme_yacc.py',735),
  ('pen -> colors','pen',1,'p_pen','drawme_yacc.py',738),
  ('pen -> p_width','pen',1,'p_pen','drawme_yacc.py',739),
  ('pen -> move','pen',1,'p_pen','drawme_yacc.py',740),
  ('pen -> position','pen',1,'p_pen','drawme_yacc.py',741),
  ('pen -> penwrite','pen',1,'p_pen','drawme_yacc.py',742),
  ('block2 -> figure','block2',1,'p_block2','drawme_yacc.py',746),
  ('block2 -> condition','block2',1,'p_block2','drawme_yacc.py',747),
  ('block2 -> pen','block2',1,'p_block2','drawme_yacc.py',748),
  ('block2 -> WID','block2',1,'p_block2','drawme_yacc.py',749),
  ('block2 -> rep','block2',1,'p_block2','drawme_yacc.py',750),
  ('block2 -> rt','block2',1,'p_block2','drawme_yacc.py',751),
  ('empty -> <empty>','empty',0,'p_empty','drawme_yacc.py',754),
]
