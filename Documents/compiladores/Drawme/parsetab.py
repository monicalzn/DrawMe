
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x845$\xa2\x87\xc5*[\x97\xab\x7f\xd2\x90<\xbd\xaf'
    
_lr_action_items = {'A':([198,],[234,]),'SUB':([97,98,100,101,104,105,106,146,149,183,184,],[139,-69,-71,-72,-70,-125,-67,-61,-63,-66,-62,]),'BACO':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,117,122,123,125,127,128,135,136,159,169,170,172,180,209,226,232,235,241,246,250,252,257,259,261,262,263,265,272,275,278,280,281,283,284,],[51,51,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-37,-36,-75,-76,-74,-87,-89,-73,-79,-78,-77,-88,-80,-33,-46,-81,-125,-48,-96,-45,-90,-101,-102,-43,-44,-29,-103,-39,-38,-32,-30,-31,-42,]),'VALI':([44,62,99,103,107,110,111,112,114,118,120,121,124,126,129,130,131,132,133,139,140,142,145,147,148,168,185,186,187,190,195,197,201,211,212,213,214,216,220,234,239,248,253,254,264,],[100,100,-68,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-60,100,-59,100,-64,-65,203,100,100,100,100,100,100,100,-54,-55,-53,-52,100,100,100,203,100,100,100,100,]),'ELSE':([108,241,],[-104,260,]),'CIR':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,117,122,123,125,127,128,135,136,159,169,170,172,180,209,226,232,235,241,246,250,252,257,259,261,262,263,265,272,275,278,280,281,283,284,],[79,79,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-37,-36,-75,-76,-74,-87,-89,-73,-79,-78,-77,-88,-80,-33,-46,-81,-125,-48,-96,-45,-90,-101,-102,-43,-44,-29,-103,-39,-38,-32,-30,-31,-42,]),'FUN':([1,3,4,5,6,7,12,13,14,19,23,27,28,30,35,40,42,93,108,135,136,180,257,],[-125,11,-125,-2,-3,11,-6,-125,-15,-125,-17,-14,-125,-24,-7,-23,-125,-16,-104,-87,-89,-88,-90,]),'REC':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,117,122,123,125,127,128,135,136,159,169,170,172,180,209,226,232,235,241,246,250,252,257,259,261,262,263,265,272,275,278,280,281,283,284,],[56,56,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-37,-36,-75,-76,-74,-87,-89,-73,-79,-78,-77,-88,-80,-33,-46,-81,-125,-48,-96,-45,-90,-101,-102,-43,-44,-29,-103,-39,-38,-32,-30,-31,-42,]),'DIV':([98,100,101,104,105,106,183,],[-69,-71,-72,-70,148,-67,-66,]),'DP':([9,90,],[17,-8,]),'D':([97,98,100,101,104,105,106,141,143,146,149,174,182,183,184,],[-125,-69,-71,-72,-70,-125,-67,-56,-58,-61,-63,211,-57,-66,-62,]),'PR':([0,],[1,]),'PENU':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,117,122,123,125,127,128,135,136,159,169,170,172,180,209,226,232,235,241,246,250,252,257,259,261,262,263,265,272,275,278,280,281,283,284,],[58,58,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-37,-36,-75,-76,-74,-87,-89,-73,-79,-78,-77,-88,-80,-33,-46,-81,-125,-48,-96,-45,-90,-101,-102,-43,-44,-29,-103,-39,-38,-32,-30,-31,-42,]),'LB':([13,14,16,17,19,23,24,25,27,28,30,40,42,93,97,98,100,101,104,105,106,116,126,135,136,137,141,143,146,149,180,182,183,184,210,257,260,],[-125,-15,-125,-125,-125,-17,33,33,-14,-125,-24,-23,-125,-16,-125,-69,-71,-72,-70,-125,-67,33,168,-87,-89,168,-56,-58,-61,-63,-88,-57,-66,-62,33,-90,33,]),'LA':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,117,122,123,125,127,128,135,136,159,169,170,172,180,209,226,232,235,241,246,250,252,257,259,261,262,263,265,272,275,278,280,281,283,284,],[59,59,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-37,-36,-75,-76,-74,-87,-89,-73,-79,-78,-77,-88,-80,-33,-46,-81,-125,-48,-96,-45,-90,-101,-102,-43,-44,-29,-103,-39,-38,-32,-30,-31,-42,]),'SEQ':([97,98,100,101,104,105,106,141,143,146,149,174,182,183,184,],[-125,-69,-71,-72,-70,-125,-67,-56,-58,-61,-63,212,-57,-66,-62,]),'PENP':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,117,122,123,125,127,128,135,136,159,169,170,172,180,209,226,232,235,241,246,250,252,257,259,261,262,263,265,272,275,278,280,281,283,284,],[46,46,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-37,-36,-75,-76,-74,-87,-89,-73,-79,-78,-77,-88,-80,-33,-46,-81,-125,-48,-96,-45,-90,-101,-102,-43,-44,-29,-103,-39,-38,-32,-30,-31,-42,]),'LT':([97,98,100,101,104,105,106,141,143,146,149,174,182,183,184,],[-125,-69,-71,-72,-70,-125,-67,-56,-58,-61,-63,214,-57,-66,-62,]),'RE':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,117,122,123,125,127,128,135,136,159,169,170,172,180,209,226,232,235,241,246,250,252,257,259,261,262,263,265,272,275,278,280,281,283,284,],[62,62,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-37,-36,-75,-76,-74,-87,-89,-73,-79,-78,-77,-88,-80,-33,-46,-81,-125,-48,-96,-45,-90,-101,-102,-43,-44,-29,-103,-39,-38,-32,-30,-31,-42,]),'POL':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,117,122,123,125,127,128,135,136,159,169,170,172,180,209,226,232,235,241,246,250,252,257,259,261,262,263,265,272,275,278,280,281,283,284,],[61,61,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-37,-36,-75,-76,-74,-87,-89,-73,-79,-78,-77,-88,-80,-33,-46,-81,-125,-48,-96,-45,-90,-101,-102,-43,-44,-29,-103,-39,-38,-32,-30,-31,-42,]),'PEND':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,117,122,123,125,127,128,135,136,159,169,170,172,180,209,226,232,235,241,246,250,252,257,259,261,262,263,265,272,275,278,280,281,283,284,],[64,64,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-37,-36,-75,-76,-74,-87,-89,-73,-79,-78,-77,-88,-80,-33,-46,-81,-125,-48,-96,-45,-90,-101,-102,-43,-44,-29,-103,-39,-38,-32,-30,-31,-42,]),'PENC':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,117,122,123,125,127,128,135,136,159,169,170,172,180,209,226,232,235,241,246,250,252,257,259,261,262,263,265,272,275,278,280,281,283,284,],[65,65,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-37,-36,-75,-76,-74,-87,-89,-73,-79,-78,-77,-88,-80,-33,-46,-81,-125,-48,-96,-45,-90,-101,-102,-43,-44,-29,-103,-39,-38,-32,-30,-31,-42,]),'LS':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,117,122,123,125,127,128,135,136,159,169,170,172,180,209,226,232,235,241,246,250,252,257,259,261,262,263,265,272,275,278,280,281,283,284,],[68,68,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-37,-36,-75,-76,-74,-87,-89,-73,-79,-78,-77,-88,-80,-33,-46,-81,-125,-48,-96,-45,-90,-101,-102,-43,-44,-29,-103,-39,-38,-32,-30,-31,-42,]),'LP':([18,44,46,51,56,57,59,61,62,65,68,69,70,71,74,76,79,80,81,83,99,103,107,110,111,112,114,118,120,121,124,126,129,130,131,132,133,139,140,142,145,147,148,185,186,187,190,195,197,201,211,212,213,214,216,220,234,248,253,254,264,],[26,99,107,110,111,112,114,115,99,118,119,120,121,121,124,129,130,131,132,133,-68,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-60,99,-59,99,-64,-65,99,99,99,99,99,99,99,-54,-55,-53,-52,99,99,99,99,99,99,99,]),'FILL':([192,],[229,]),'$end':([2,34,108,],[0,-1,-104,]),'TRI':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,117,122,123,125,127,128,135,136,159,169,170,172,180,209,226,232,235,241,246,250,252,257,259,261,262,263,265,272,275,278,280,281,283,284,],[69,69,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-37,-36,-75,-76,-74,-87,-89,-73,-79,-78,-77,-88,-80,-33,-46,-81,-125,-48,-96,-45,-90,-101,-102,-43,-44,-29,-103,-39,-38,-32,-30,-31,-42,]),'PENW':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,117,122,123,125,127,128,135,136,159,169,170,172,180,209,226,232,235,241,246,250,252,257,259,261,262,263,265,272,275,278,280,281,283,284,],[57,57,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-37,-36,-75,-76,-74,-87,-89,-73,-79,-78,-77,-88,-80,-33,-46,-81,-125,-48,-96,-45,-90,-101,-102,-43,-44,-29,-103,-39,-38,-32,-30,-31,-42,]),'C':([32,36,43,45,91,97,98,100,101,102,104,105,106,134,138,141,143,146,149,150,151,152,157,158,160,162,163,165,166,175,176,177,181,182,183,184,203,204,205,206,208,224,225,231,233,236,245,258,269,],[-125,88,95,-22,-13,-125,-69,-71,-72,-21,-70,-125,-67,88,-125,-56,-58,-61,-63,185,186,187,192,-47,195,197,198,-86,201,192,192,220,95,-57,-66,-62,-27,-91,-28,-92,239,248,192,253,254,201,264,239,192,]),'B':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,117,122,123,125,127,128,135,136,159,169,170,172,180,209,226,232,235,241,246,250,252,257,259,261,262,263,265,272,275,278,280,281,283,284,],[70,70,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-37,-36,-75,-76,-74,-87,-89,-73,-79,-78,-77,-88,-80,-33,-46,-81,-125,-48,-96,-45,-90,-101,-102,-43,-44,-29,-103,-39,-38,-32,-30,-31,-42,]),'RB':([33,47,48,49,50,52,53,54,55,60,63,66,67,72,73,75,77,78,82,84,85,86,108,109,113,117,122,123,125,127,128,135,136,159,169,170,172,180,203,204,205,206,207,208,209,226,232,235,238,240,241,246,250,252,257,258,259,261,262,263,265,271,272,275,278,280,281,283,284,],[-125,108,-125,-118,-110,-115,-108,-109,-113,-124,-120,-119,-106,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-105,-34,-35,-37,-36,-75,-76,-74,-87,-89,-73,-79,-78,-77,-88,-27,-91,-28,-92,237,-125,-80,-33,-46,-81,-93,-95,-125,-48,-96,-45,-90,-125,-101,-102,-43,-44,-29,-94,-103,-39,-38,-32,-30,-31,-42,]),'F':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,117,122,123,125,127,128,135,136,159,169,170,172,180,209,226,232,235,241,246,250,252,257,259,261,262,263,265,272,275,278,280,281,283,284,],[71,71,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-37,-36,-75,-76,-74,-87,-89,-73,-79,-78,-77,-88,-80,-33,-46,-81,-125,-48,-96,-45,-90,-101,-102,-43,-44,-29,-103,-39,-38,-32,-30,-31,-42,]),'M':([98,100,101,104,105,106,183,],[-69,-71,-72,-70,147,-67,-66,]),'L':([13,19,23,28,33,42,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,93,108,113,117,122,123,125,127,128,135,136,159,169,170,172,180,209,226,232,235,241,246,250,252,257,259,261,262,263,265,272,275,278,280,281,283,284,],[-125,29,-17,29,29,-125,29,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-16,-104,-34,-35,-37,-36,-75,-76,-74,-87,-89,-73,-79,-78,-77,-88,-80,-33,-46,-81,-125,-48,-96,-45,-90,-101,-102,-43,-44,-29,-103,-39,-38,-32,-30,-31,-42,]),'VALF':([44,62,99,103,107,110,111,112,114,118,120,121,124,126,129,130,131,132,133,139,140,142,145,147,148,168,185,186,187,190,195,197,201,211,212,213,214,216,220,234,239,248,253,254,264,],[101,101,-68,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-60,101,-59,101,-64,-65,205,101,101,101,101,101,101,101,-54,-55,-53,-52,101,101,101,205,101,101,101,101,]),'ADD':([97,98,100,101,104,105,106,141,143,146,149,154,155,156,182,183,184,228,],[142,-69,-71,-72,-70,-125,-67,-56,-58,-61,-63,-99,190,-100,-57,-66,-62,190,]),'STR':([114,190,],[154,154,]),'V':([4,16,17,],[13,13,13,]),'RP':([26,36,37,39,87,89,91,97,98,100,101,104,105,106,124,134,141,143,144,146,149,153,154,155,156,157,158,161,164,165,166,167,173,174,175,176,178,179,182,183,184,189,191,193,194,200,202,215,217,218,219,223,225,228,229,236,242,249,251,255,256,266,268,269,273,277,],[-125,-125,90,-10,-9,-12,-13,-125,-69,-71,-72,-70,-125,-67,-125,-125,-56,-58,183,-61,-63,188,-99,-125,-100,-125,-47,196,199,-86,-125,-83,210,-125,-125,-125,221,-11,-57,-66,-62,227,-98,230,-41,-82,-85,-49,-51,243,244,247,-125,-125,-40,-125,-50,267,-97,270,-84,274,276,-125,279,282,]),'GL':([1,],[4,]),'EQ':([32,74,92,138,],[44,126,137,44,]),'ID':([11,20,21,22,33,38,41,44,48,49,50,52,53,54,55,60,62,63,66,72,73,75,77,78,82,84,85,86,95,99,103,107,108,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,139,140,142,145,147,148,159,168,169,170,172,180,185,186,187,190,195,197,201,209,211,212,213,214,216,220,226,232,234,235,239,241,246,248,250,252,253,254,257,259,261,262,263,264,265,272,275,278,280,281,283,284,],[18,-25,-26,32,74,91,92,104,74,-118,-110,-115,-108,-109,-113,-124,104,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,138,-68,104,104,-104,104,104,104,-34,104,158,-35,104,158,104,104,-37,-36,104,-75,104,-76,-74,104,104,104,104,104,-87,-89,-60,104,-59,104,-64,-65,-73,206,-79,-78,-77,-88,104,104,104,104,104,104,104,-80,-54,-55,-53,-52,104,104,-33,-46,104,-81,206,-125,-48,104,-96,-45,104,104,-90,-101,-102,-43,-44,104,-29,-103,-39,-38,-32,-30,-31,-42,]),'IF':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,117,122,123,125,127,128,135,136,159,169,170,172,180,209,226,232,235,241,246,250,252,257,259,261,262,263,265,272,275,278,280,281,283,284,],[76,76,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-37,-36,-75,-76,-74,-87,-89,-73,-79,-78,-77,-88,-80,-33,-46,-81,-125,-48,-96,-45,-90,-101,-102,-43,-44,-29,-103,-39,-38,-32,-30,-31,-42,]),'SETC':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,117,122,123,125,127,128,135,136,159,169,170,172,180,209,226,232,235,241,246,250,252,257,259,261,262,263,265,272,275,278,280,281,283,284,],[81,81,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-37,-36,-75,-76,-74,-87,-89,-73,-79,-78,-77,-88,-80,-33,-46,-81,-125,-48,-96,-45,-90,-101,-102,-43,-44,-29,-103,-39,-38,-32,-30,-31,-42,]),'INT':([13,26,29,42,88,],[20,20,20,20,20,]),'SQ':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,117,122,123,125,127,128,135,136,159,169,170,172,180,209,226,232,235,241,246,250,252,257,259,261,262,263,265,272,275,278,280,281,283,284,],[80,80,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-37,-36,-75,-76,-74,-87,-89,-73,-79,-78,-77,-88,-80,-33,-46,-81,-125,-48,-96,-45,-90,-101,-102,-43,-44,-29,-103,-39,-38,-32,-30,-31,-42,]),'FLOAT':([13,26,29,42,88,],[21,21,21,21,21,]),'MT':([97,98,100,101,104,105,106,141,143,146,149,174,182,183,184,],[-125,-69,-71,-72,-70,-125,-67,-56,-58,-61,-63,213,-57,-66,-62,]),'ARC':([33,48,49,50,52,53,54,55,60,63,66,72,73,75,77,78,82,84,85,86,108,113,117,122,123,125,127,128,135,136,159,169,170,172,180,209,226,232,235,241,246,250,252,257,259,261,262,263,265,272,275,278,280,281,283,284,],[83,83,-118,-110,-115,-108,-109,-113,-124,-120,-119,-121,-111,-107,-123,-112,-122,-116,-114,-117,-104,-34,-35,-37,-36,-75,-76,-74,-87,-89,-73,-79,-78,-77,-88,-80,-33,-46,-81,-125,-48,-96,-45,-90,-101,-102,-43,-44,-29,-103,-39,-38,-32,-30,-31,-42,]),'SC':([31,32,43,45,58,64,92,94,96,97,98,100,101,102,104,105,106,138,141,143,146,149,171,181,182,183,184,188,196,199,221,222,227,230,237,243,244,247,267,270,274,276,279,282,],[42,-125,-125,-22,113,117,136,-18,-20,-125,-69,-71,-72,-21,-70,-125,-67,-125,-56,-58,-61,-63,209,-125,-57,-66,-62,226,232,235,246,-19,250,252,257,262,263,265,275,278,280,281,283,284,]),'MAIN':([1,3,4,5,6,7,8,10,12,13,14,15,19,23,27,28,30,35,40,42,93,108,135,136,180,257,],[-125,-125,-125,-2,-3,-125,16,-5,-6,-125,-15,-4,-125,-17,-14,-125,-24,-7,-23,-125,-16,-104,-87,-89,-88,-90,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'fun5':([26,88,],[36,134,]),'fun4':([36,134,],[87,179,]),'block3':([33,48,],[47,109,]),'block2':([33,48,],[48,48,]),'vars':([4,16,17,],[12,24,25,]),'fun2':([3,7,],[9,9,]),'lstrip':([33,48,],[50,50,]),'move':([33,48,],[52,52,]),'tria':([33,48,],[53,53,]),'con2':([241,],[259,]),'poly':([33,48,],[54,54,]),'lab2':([155,228,],[189,251,]),'colors':([33,48,],[55,55,]),'globals':([1,],[5,]),'WID2':([74,],[128,]),'term3':([105,],[145,]),'varAss':([126,],[170,]),'lista3':([168,],[207,]),'term2':([105,],[146,]),'li4':([208,258,],[238,271,]),'functions':([3,7,],[7,7,]),'valExp':([44,62,103,107,110,111,112,114,118,120,121,124,126,129,130,131,132,133,140,145,185,186,187,190,195,197,201,216,220,234,248,253,254,264,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'fun3':([26,],[37,]),'assigment':([74,],[125,]),'exp3':([97,],[140,]),'exp2':([97,],[141,]),'rep':([33,48,],[60,60,]),'func4':([124,201,],[166,236,]),'funCall':([74,],[127,]),'pen':([33,48,],[63,63,]),'ex2':([174,],[215,]),'condition':([33,48,],[66,66,]),'p_fill':([157,175,176,225,269,],[193,218,219,249,277,]),'prog':([0,],[2,]),'figure':([33,48,],[49,49,]),'type':([13,26,29,42,88,],[22,38,41,22,38,]),'empty':([1,3,4,7,13,16,17,19,26,28,32,33,36,42,43,48,97,105,124,134,138,155,157,166,174,175,176,181,208,225,228,236,241,258,269,],[6,10,14,10,23,14,14,30,39,30,45,67,89,23,96,67,143,149,167,89,45,191,194,202,217,194,194,96,240,194,191,202,261,240,194,]),'ex3':([174,],[216,]),'var5':([19,28,],[27,40,]),'var4':([32,138,],[43,181,]),'expresion':([129,],[173,]),'prelistAss':([92,],[135,]),'idList':([115,119,],[157,161,]),'var3':([22,],[31,]),'var2':([13,42,],[19,93,]),'func3':([166,236,],[200,256,]),'mueve2':([70,71,],[122,123,]),'lab':([33,48,],[72,72,]),'stExp':([114,190,],[155,228,]),'one_par':([33,48,],[73,73,]),'fact2':([44,62,103,107,110,111,112,114,118,120,121,124,126,129,130,131,132,133,140,145,185,186,187,190,195,197,201,216,220,234,248,253,254,264,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'rect':([33,48,],[75,75,]),'fact4':([44,62,103,107,110,111,112,114,118,120,121,124,126,129,130,131,132,133,140,145,185,186,187,190,195,197,201,216,220,234,248,253,254,264,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'p2':([1,],[3,]),'p3':([3,7,],[8,15,]),'term':([44,62,103,107,110,111,112,114,118,120,121,124,126,129,130,131,132,133,140,145,185,186,187,190,195,197,201,216,220,234,248,253,254,264,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,184,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'WID':([33,48,],[77,77,]),'p_arc':([33,48,],[78,78,]),'val':([168,239,],[204,204,]),'func2':([124,],[164,]),'tipeAss':([126,],[172,]),'list':([19,28,33,48,],[28,28,82,82,]),'var33':([43,181,],[94,222,]),'fact':([44,62,103,107,110,111,112,114,118,120,121,124,126,129,130,131,132,133,140,145,185,186,187,190,195,197,201,216,220,234,248,253,254,264,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'exp':([44,62,103,107,110,111,112,114,118,120,121,124,126,129,130,131,132,133,140,185,186,187,190,195,197,201,216,220,234,248,253,254,264,],[102,116,144,150,151,152,153,156,160,162,163,165,171,174,175,176,177,178,182,223,224,225,156,231,233,165,242,245,255,266,268,269,273,]),'position':([33,48,],[84,84,]),'p_width':([33,48,],[85,85,]),'listAss':([126,137,],[169,180,]),'penwrite':([33,48,],[86,86,]),'block':([24,25,116,210,260,],[34,35,159,241,272,]),'lista2':([168,239,],[208,258,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> PR p2 p3 MAIN vars block','prog',6,'p_prog','drawme_yacc.py',23),
  ('p2 -> globals','p2',1,'p_p2','drawme_yacc.py',29),
  ('p2 -> empty','p2',1,'p_p2','drawme_yacc.py',30),
  ('p3 -> functions p3','p3',2,'p_p3','drawme_yacc.py',33),
  ('p3 -> empty','p3',1,'p_p3','drawme_yacc.py',34),
  ('globals -> GL vars','globals',2,'p_globals','drawme_yacc.py',37),
  ('functions -> fun2 DP vars block','functions',4,'p_functions','drawme_yacc.py',43),
  ('fun2 -> FUN ID LP fun3 RP','fun2',5,'p_fun2','drawme_yacc.py',47),
  ('fun3 -> fun5 fun4','fun3',2,'p_fun3','drawme_yacc.py',54),
  ('fun3 -> empty','fun3',1,'p_fun3','drawme_yacc.py',55),
  ('fun4 -> C fun5 fun4','fun4',3,'p_fun4','drawme_yacc.py',59),
  ('fun4 -> empty','fun4',1,'p_fun4','drawme_yacc.py',60),
  ('fun5 -> type ID','fun5',2,'p_fun5','drawme_yacc.py',63),
  ('vars -> V var2 var5','vars',3,'p_vars','drawme_yacc.py',68),
  ('vars -> empty','vars',1,'p_vars','drawme_yacc.py',69),
  ('var2 -> type var3 SC var2','var2',4,'p_var2','drawme_yacc.py',72),
  ('var2 -> empty','var2',1,'p_var2','drawme_yacc.py',73),
  ('var3 -> ID var4 var33','var3',3,'p_var3','drawme_yacc.py',76),
  ('var33 -> C ID var4 var33','var33',4,'p_var33','drawme_yacc.py',83),
  ('var33 -> empty','var33',1,'p_var33','drawme_yacc.py',84),
  ('var4 -> EQ exp','var4',2,'p_var4','drawme_yacc.py',92),
  ('var4 -> empty','var4',1,'p_var4','drawme_yacc.py',93),
  ('var5 -> list var5','var5',2,'p_var5','drawme_yacc.py',96),
  ('var5 -> empty','var5',1,'p_var5','drawme_yacc.py',97),
  ('type -> INT','type',1,'p_type','drawme_yacc.py',100),
  ('type -> FLOAT','type',1,'p_type','drawme_yacc.py',101),
  ('val -> VALI','val',1,'p_val','drawme_yacc.py',106),
  ('val -> VALF','val',1,'p_val','drawme_yacc.py',107),
  ('position -> PENP LP exp C exp RP SC','position',7,'p_position','drawme_yacc.py',110),
  ('colors -> PENC LP exp C exp C exp RP SC','colors',9,'p_colors','drawme_yacc.py',117),
  ('colors -> SETC LP exp C exp C exp RP SC','colors',9,'p_colors','drawme_yacc.py',118),
  ('colors -> BACO LP exp C exp C exp RP SC','colors',9,'p_colors','drawme_yacc.py',119),
  ('p_width -> PENW LP exp RP SC','p_width',5,'p_p_width','drawme_yacc.py',132),
  ('penwrite -> PENU SC','penwrite',2,'p_penwrite','drawme_yacc.py',139),
  ('penwrite -> PEND SC','penwrite',2,'p_penwrite','drawme_yacc.py',140),
  ('move -> F mueve2','move',2,'p_move','drawme_yacc.py',150),
  ('move -> B mueve2','move',2,'p_move','drawme_yacc.py',151),
  ('mueve2 -> LP exp C A exp RP SC','mueve2',7,'p_mueve2','drawme_yacc.py',154),
  ('rect -> REC LP exp C exp p_fill RP SC','rect',8,'p_rect','drawme_yacc.py',157),
  ('p_fill -> C FILL','p_fill',2,'p_p_fill','drawme_yacc.py',164),
  ('p_fill -> empty','p_fill',1,'p_p_fill','drawme_yacc.py',165),
  ('tria -> TRI LP exp C exp C exp p_fill RP SC','tria',10,'p_tria','drawme_yacc.py',175),
  ('one_par -> CIR LP exp p_fill RP SC','one_par',6,'p_one_par','drawme_yacc.py',182),
  ('one_par -> SQ LP exp p_fill RP SC','one_par',6,'p_one_par','drawme_yacc.py',183),
  ('poly -> POL LP idList p_fill RP SC','poly',6,'p_poly','drawme_yacc.py',194),
  ('lstrip -> LS LP idList RP SC','lstrip',5,'p_lstrip','drawme_yacc.py',201),
  ('idList -> ID','idList',1,'p_idList','drawme_yacc.py',208),
  ('p_arc -> ARC LP exp RP SC','p_arc',5,'p_p_arc','drawme_yacc.py',215),
  ('expresion -> exp ex2','expresion',2,'p_expresion','drawme_yacc.py',223),
  ('ex2 -> ex3 exp','ex2',2,'p_ex2','drawme_yacc.py',226),
  ('ex2 -> empty','ex2',1,'p_ex2','drawme_yacc.py',227),
  ('ex3 -> LT','ex3',1,'p_ex3','drawme_yacc.py',243),
  ('ex3 -> MT','ex3',1,'p_ex3','drawme_yacc.py',244),
  ('ex3 -> D','ex3',1,'p_ex3','drawme_yacc.py',245),
  ('ex3 -> SEQ','ex3',1,'p_ex3','drawme_yacc.py',246),
  ('exp -> term exp2','exp',2,'p_exp','drawme_yacc.py',250),
  ('exp2 -> exp3 exp','exp2',2,'p_exp2','drawme_yacc.py',253),
  ('exp2 -> empty','exp2',1,'p_exp2','drawme_yacc.py',254),
  ('exp3 -> ADD','exp3',1,'p_exp3','drawme_yacc.py',271),
  ('exp3 -> SUB','exp3',1,'p_exp3','drawme_yacc.py',272),
  ('term -> fact term2','term',2,'p_term','drawme_yacc.py',277),
  ('term2 -> term3 term','term2',2,'p_term2','drawme_yacc.py',282),
  ('term2 -> empty','term2',1,'p_term2','drawme_yacc.py',283),
  ('term3 -> M','term3',1,'p_term3','drawme_yacc.py',300),
  ('term3 -> DIV','term3',1,'p_term3','drawme_yacc.py',301),
  ('fact -> fact2 exp RP','fact',3,'p_fact','drawme_yacc.py',306),
  ('fact -> fact4','fact',1,'p_fact','drawme_yacc.py',307),
  ('fact2 -> LP','fact2',1,'p_fact2','drawme_yacc.py',312),
  ('fact4 -> valExp','fact4',1,'p_fact4','drawme_yacc.py',316),
  ('fact4 -> ID','fact4',1,'p_fact4','drawme_yacc.py',317),
  ('valExp -> VALI','valExp',1,'p_valExp','drawme_yacc.py',325),
  ('valExp -> VALF','valExp',1,'p_valExp','drawme_yacc.py',326),
  ('rep -> RE exp block','rep',3,'p_rep','drawme_yacc.py',338),
  ('WID -> ID WID2','WID',2,'p_WID','drawme_yacc.py',341),
  ('WID2 -> assigment','WID2',1,'p_WID2','drawme_yacc.py',370),
  ('WID2 -> funCall','WID2',1,'p_WID2','drawme_yacc.py',371),
  ('assigment -> EQ tipeAss','assigment',2,'p_assigment','drawme_yacc.py',374),
  ('tipeAss -> varAss','tipeAss',1,'p_tipeAss','drawme_yacc.py',379),
  ('tipeAss -> listAss','tipeAss',1,'p_tipeAss','drawme_yacc.py',380),
  ('varAss -> exp SC','varAss',2,'p_varAss','drawme_yacc.py',383),
  ('funCall -> LP func2 RP SC','funCall',4,'p_funCall','drawme_yacc.py',386),
  ('func2 -> func4 func3','func2',2,'p_func2','drawme_yacc.py',391),
  ('func2 -> empty','func2',1,'p_func2','drawme_yacc.py',392),
  ('func3 -> C func4 func3','func3',3,'p_func3','drawme_yacc.py',395),
  ('func3 -> empty','func3',1,'p_func3','drawme_yacc.py',396),
  ('func4 -> exp','func4',1,'p_func4','drawme_yacc.py',399),
  ('list -> L type ID prelistAss','list',4,'p_list','drawme_yacc.py',403),
  ('prelistAss -> EQ listAss','prelistAss',2,'p_prelistAss','drawme_yacc.py',410),
  ('prelistAss -> SC','prelistAss',1,'p_prelistAss','drawme_yacc.py',411),
  ('listAss -> LB lista3 RB SC','listAss',4,'p_listAss','drawme_yacc.py',414),
  ('lista2 -> val','lista2',1,'p_lista2','drawme_yacc.py',417),
  ('lista2 -> ID','lista2',1,'p_lista2','drawme_yacc.py',418),
  ('lista3 -> lista2 li4','lista3',2,'p_lista3','drawme_yacc.py',421),
  ('li4 -> C lista2 li4','li4',3,'p_li4','drawme_yacc.py',424),
  ('li4 -> empty','li4',1,'p_li4','drawme_yacc.py',425),
  ('lab -> LA LP stExp lab2 RP SC','lab',6,'p_lab','drawme_yacc.py',428),
  ('lab2 -> ADD stExp lab2','lab2',3,'p_lab2','drawme_yacc.py',435),
  ('lab2 -> empty','lab2',1,'p_lab2','drawme_yacc.py',436),
  ('stExp -> STR','stExp',1,'p_stExp','drawme_yacc.py',439),
  ('stExp -> exp','stExp',1,'p_stExp','drawme_yacc.py',440),
  ('condition -> IF LP expresion RP block con2','condition',6,'p_condition','drawme_yacc.py',443),
  ('con2 -> empty','con2',1,'p_con2','drawme_yacc.py',446),
  ('con2 -> ELSE block','con2',2,'p_con2','drawme_yacc.py',447),
  ('block -> LB block3 RB','block',3,'p_block','drawme_yacc.py',450),
  ('block3 -> block2 block3','block3',2,'p_block3','drawme_yacc.py',453),
  ('block3 -> empty','block3',1,'p_block3','drawme_yacc.py',454),
  ('figure -> rect','figure',1,'p_figure','drawme_yacc.py',457),
  ('figure -> tria','figure',1,'p_figure','drawme_yacc.py',458),
  ('figure -> poly','figure',1,'p_figure','drawme_yacc.py',459),
  ('figure -> lstrip','figure',1,'p_figure','drawme_yacc.py',460),
  ('figure -> one_par','figure',1,'p_figure','drawme_yacc.py',461),
  ('figure -> p_arc','figure',1,'p_figure','drawme_yacc.py',462),
  ('pen -> colors','pen',1,'p_pen','drawme_yacc.py',465),
  ('pen -> p_width','pen',1,'p_pen','drawme_yacc.py',466),
  ('pen -> move','pen',1,'p_pen','drawme_yacc.py',467),
  ('pen -> position','pen',1,'p_pen','drawme_yacc.py',468),
  ('pen -> penwrite','pen',1,'p_pen','drawme_yacc.py',469),
  ('block2 -> figure','block2',1,'p_block2','drawme_yacc.py',472),
  ('block2 -> condition','block2',1,'p_block2','drawme_yacc.py',473),
  ('block2 -> pen','block2',1,'p_block2','drawme_yacc.py',474),
  ('block2 -> lab','block2',1,'p_block2','drawme_yacc.py',475),
  ('block2 -> list','block2',1,'p_block2','drawme_yacc.py',476),
  ('block2 -> WID','block2',1,'p_block2','drawme_yacc.py',477),
  ('block2 -> rep','block2',1,'p_block2','drawme_yacc.py',478),
  ('empty -> <empty>','empty',0,'p_empty','drawme_yacc.py',481),
]
