
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '%\xebB\x15\x0e\xdb\xde\x1a\x13\xc6\xee\x03\xc1\x17\xfc9'
    
_lr_action_items = {'A':([206,],[245,]),'SUB':([102,103,105,106,109,110,111,146,147,149,150,151,188,192,233,],[-135,-76,-78,-79,-77,-135,-74,184,-64,-135,-67,-70,-73,-69,-68,]),'BACO':([38,53,54,55,57,58,59,60,65,68,71,77,78,80,82,83,87,89,90,91,113,118,123,128,129,131,133,134,141,142,161,171,172,174,182,217,237,243,246,252,257,261,263,268,270,273,274,275,277,284,287,290,292,293,295,296,],[56,56,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-40,-42,-41,-83,-84,-82,-95,-97,-80,-87,-86,-85,-96,-88,-38,-51,-89,-135,-53,-104,-50,-98,-109,-111,-48,-49,-34,-112,-44,-43,-37,-35,-36,-47,]),'VALI':([49,67,104,108,112,115,116,117,119,124,126,127,130,132,135,136,137,138,139,170,184,185,186,189,190,191,193,194,195,198,203,205,209,220,221,222,223,225,229,245,250,259,264,265,276,],[105,105,-75,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,211,-66,105,-65,105,-71,-72,105,105,105,105,105,105,105,-59,-60,-58,-57,105,105,105,211,105,105,105,105,]),'ELSE':([113,252,],[-114,272,]),'CIR':([38,53,54,55,57,58,59,60,65,68,71,77,78,80,82,83,87,89,90,91,113,118,123,128,129,131,133,134,141,142,161,171,172,174,182,217,237,243,246,252,257,261,263,268,270,273,274,275,277,284,287,290,292,293,295,296,],[84,84,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-40,-42,-41,-83,-84,-82,-95,-97,-80,-87,-86,-85,-96,-88,-38,-51,-89,-135,-53,-104,-50,-98,-109,-111,-48,-49,-34,-112,-44,-43,-37,-35,-36,-47,]),'FUN':([1,3,4,5,6,7,8,14,15,16,22,26,32,33,35,40,45,47,98,113,141,142,182,268,],[-135,12,-9,-135,-4,-5,12,-8,-135,-20,-135,-22,-19,-135,-29,-10,-28,-135,-21,-114,-95,-97,-96,-98,]),'REC':([38,53,54,55,57,58,59,60,65,68,71,77,78,80,82,83,87,89,90,91,113,118,123,128,129,131,133,134,141,142,161,171,172,174,182,217,237,243,246,252,257,261,263,268,270,273,274,275,277,284,287,290,292,293,295,296,],[61,61,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-40,-42,-41,-83,-84,-82,-95,-97,-80,-87,-86,-85,-96,-88,-38,-51,-89,-135,-53,-104,-50,-98,-109,-111,-48,-49,-34,-112,-44,-43,-37,-35,-36,-47,]),'DIV':([103,105,106,109,110,111,149,151,188,],[-76,-78,-79,-77,-135,-74,191,-70,-73,]),'DP':([10,95,],[20,-12,]),'D':([102,103,105,106,109,110,111,145,146,147,149,150,151,176,187,188,192,232,233,],[-135,-76,-78,-79,-77,-135,-74,-61,-135,-64,-135,-67,-70,220,-63,-73,-69,-62,-68,]),'PR':([0,],[1,]),'PENU':([38,53,54,55,57,58,59,60,65,68,71,77,78,80,82,83,87,89,90,91,113,118,123,128,129,131,133,134,141,142,161,171,172,174,182,217,237,243,246,252,257,261,263,268,270,273,274,275,277,284,287,290,292,293,295,296,],[63,63,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-40,-42,-41,-83,-84,-82,-95,-97,-80,-87,-86,-85,-96,-88,-38,-51,-89,-135,-53,-104,-50,-98,-109,-111,-48,-49,-34,-112,-44,-43,-37,-35,-36,-47,]),'LB':([15,16,18,19,20,22,26,27,28,29,30,32,33,35,45,47,98,102,103,105,106,109,110,111,121,122,132,141,142,143,145,146,147,149,150,151,182,187,188,192,218,219,232,233,268,271,272,],[-135,-20,-2,-135,-135,-135,-22,-3,38,-11,38,-19,-135,-29,-28,-135,-21,-135,-76,-78,-79,-77,-135,-74,38,-81,170,-95,-97,170,-61,-135,-64,-135,-67,-70,-96,-63,-73,-69,-110,38,-62,-68,-98,38,-113,]),'LA':([38,53,54,55,57,58,59,60,65,68,71,77,78,80,82,83,87,89,90,91,113,118,123,128,129,131,133,134,141,142,161,171,172,174,182,217,237,243,246,252,257,261,263,268,270,273,274,275,277,284,287,290,292,293,295,296,],[64,64,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-40,-42,-41,-83,-84,-82,-95,-97,-80,-87,-86,-85,-96,-88,-38,-51,-89,-135,-53,-104,-50,-98,-109,-111,-48,-49,-34,-112,-44,-43,-37,-35,-36,-47,]),'SEQ':([102,103,105,106,109,110,111,145,146,147,149,150,151,176,187,188,192,232,233,],[-135,-76,-78,-79,-77,-135,-74,-61,-135,-64,-135,-67,-70,221,-63,-73,-69,-62,-68,]),'PENP':([38,53,54,55,57,58,59,60,65,68,71,77,78,80,82,83,87,89,90,91,113,118,123,128,129,131,133,134,141,142,161,171,172,174,182,217,237,243,246,252,257,261,263,268,270,273,274,275,277,284,287,290,292,293,295,296,],[51,51,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-40,-42,-41,-83,-84,-82,-95,-97,-80,-87,-86,-85,-96,-88,-38,-51,-89,-135,-53,-104,-50,-98,-109,-111,-48,-49,-34,-112,-44,-43,-37,-35,-36,-47,]),'LT':([102,103,105,106,109,110,111,145,146,147,149,150,151,176,187,188,192,232,233,],[-135,-76,-78,-79,-77,-135,-74,-61,-135,-64,-135,-67,-70,223,-63,-73,-69,-62,-68,]),'RE':([38,53,54,55,57,58,59,60,65,68,71,77,78,80,82,83,87,89,90,91,113,118,123,128,129,131,133,134,141,142,161,171,172,174,182,217,237,243,246,252,257,261,263,268,270,273,274,275,277,284,287,290,292,293,295,296,],[67,67,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-40,-42,-41,-83,-84,-82,-95,-97,-80,-87,-86,-85,-96,-88,-38,-51,-89,-135,-53,-104,-50,-98,-109,-111,-48,-49,-34,-112,-44,-43,-37,-35,-36,-47,]),'POL':([38,53,54,55,57,58,59,60,65,68,71,77,78,80,82,83,87,89,90,91,113,118,123,128,129,131,133,134,141,142,161,171,172,174,182,217,237,243,246,252,257,261,263,268,270,273,274,275,277,284,287,290,292,293,295,296,],[66,66,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-40,-42,-41,-83,-84,-82,-95,-97,-80,-87,-86,-85,-96,-88,-38,-51,-89,-135,-53,-104,-50,-98,-109,-111,-48,-49,-34,-112,-44,-43,-37,-35,-36,-47,]),'PEND':([38,53,54,55,57,58,59,60,65,68,71,77,78,80,82,83,87,89,90,91,113,118,123,128,129,131,133,134,141,142,161,171,172,174,182,217,237,243,246,252,257,261,263,268,270,273,274,275,277,284,287,290,292,293,295,296,],[69,69,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-40,-42,-41,-83,-84,-82,-95,-97,-80,-87,-86,-85,-96,-88,-38,-51,-89,-135,-53,-104,-50,-98,-109,-111,-48,-49,-34,-112,-44,-43,-37,-35,-36,-47,]),'PENC':([38,53,54,55,57,58,59,60,65,68,71,77,78,80,82,83,87,89,90,91,113,118,123,128,129,131,133,134,141,142,161,171,172,174,182,217,237,243,246,252,257,261,263,268,270,273,274,275,277,284,287,290,292,293,295,296,],[70,70,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-40,-42,-41,-83,-84,-82,-95,-97,-80,-87,-86,-85,-96,-88,-38,-51,-89,-135,-53,-104,-50,-98,-109,-111,-48,-49,-34,-112,-44,-43,-37,-35,-36,-47,]),'LS':([38,53,54,55,57,58,59,60,65,68,71,77,78,80,82,83,87,89,90,91,113,118,123,128,129,131,133,134,141,142,161,171,172,174,182,217,237,243,246,252,257,261,263,268,270,273,274,275,277,284,287,290,292,293,295,296,],[73,73,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-40,-42,-41,-83,-84,-82,-95,-97,-80,-87,-86,-85,-96,-88,-38,-51,-89,-135,-53,-104,-50,-98,-109,-111,-48,-49,-34,-112,-44,-43,-37,-35,-36,-47,]),'LP':([21,49,51,56,61,62,64,66,67,70,73,74,75,76,79,81,84,85,86,88,104,108,112,115,116,117,119,124,126,127,130,132,135,136,137,138,139,184,185,186,189,190,191,193,194,195,198,203,205,209,220,221,222,223,225,229,245,259,264,265,276,],[31,104,112,115,116,117,119,120,104,124,125,126,127,127,130,135,136,137,138,139,-75,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-66,104,-65,104,-71,-72,104,104,104,104,104,104,104,-59,-60,-58,-57,104,104,104,104,104,104,104,]),'FILL':([200,],[240,]),'$end':([2,39,113,],[0,-1,-114,]),'TRI':([38,53,54,55,57,58,59,60,65,68,71,77,78,80,82,83,87,89,90,91,113,118,123,128,129,131,133,134,141,142,161,171,172,174,182,217,237,243,246,252,257,261,263,268,270,273,274,275,277,284,287,290,292,293,295,296,],[74,74,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-40,-42,-41,-83,-84,-82,-95,-97,-80,-87,-86,-85,-96,-88,-38,-51,-89,-135,-53,-104,-50,-98,-109,-111,-48,-49,-34,-112,-44,-43,-37,-35,-36,-47,]),'PENW':([38,53,54,55,57,58,59,60,65,68,71,77,78,80,82,83,87,89,90,91,113,118,123,128,129,131,133,134,141,142,161,171,172,174,182,217,237,243,246,252,257,261,263,268,270,273,274,275,277,284,287,290,292,293,295,296,],[62,62,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-40,-42,-41,-83,-84,-82,-95,-97,-80,-87,-86,-85,-96,-88,-38,-51,-89,-135,-53,-104,-50,-98,-109,-111,-48,-49,-34,-112,-44,-43,-37,-35,-36,-47,]),'C':([37,41,48,50,96,102,103,105,106,107,109,110,111,140,144,145,146,147,149,150,151,152,153,154,159,160,162,164,165,167,168,177,178,179,183,187,188,192,211,212,213,214,216,232,233,235,236,242,244,247,256,269,281,],[-135,93,100,-27,-18,-135,-76,-78,-79,-26,-77,-135,-74,93,-135,-61,-135,-64,-135,-67,-70,193,194,195,200,-52,203,205,206,-94,209,200,200,229,100,-63,-73,-69,-32,-99,-33,-100,250,-62,-68,259,200,264,265,209,276,250,200,]),'B':([38,53,54,55,57,58,59,60,65,68,71,77,78,80,82,83,87,89,90,91,113,118,123,128,129,131,133,134,141,142,161,171,172,174,182,217,237,243,246,252,257,261,263,268,270,273,274,275,277,284,287,290,292,293,295,296,],[75,75,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-40,-42,-41,-83,-84,-82,-95,-97,-80,-87,-86,-85,-96,-88,-38,-51,-89,-135,-53,-104,-50,-98,-109,-111,-48,-49,-34,-112,-44,-43,-37,-35,-36,-47,]),'RB':([38,52,53,54,55,57,58,59,60,65,68,71,72,77,78,80,82,83,87,89,90,91,113,114,118,123,128,129,131,133,134,141,142,161,171,172,174,182,211,212,213,214,215,216,217,237,243,246,249,251,252,257,261,263,268,269,270,273,274,275,277,283,284,287,290,292,293,295,296,],[-135,113,-135,-128,-120,-125,-118,-119,-123,-134,-130,-129,-116,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-115,-39,-40,-42,-41,-83,-84,-82,-95,-97,-80,-87,-86,-85,-96,-32,-99,-33,-100,248,-135,-88,-38,-51,-89,-101,-103,-135,-53,-104,-50,-98,-135,-109,-111,-48,-49,-34,-102,-112,-44,-43,-37,-35,-36,-47,]),'F':([38,53,54,55,57,58,59,60,65,68,71,77,78,80,82,83,87,89,90,91,113,118,123,128,129,131,133,134,141,142,161,171,172,174,182,217,237,243,246,252,257,261,263,268,270,273,274,275,277,284,287,290,292,293,295,296,],[76,76,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-40,-42,-41,-83,-84,-82,-95,-97,-80,-87,-86,-85,-96,-88,-38,-51,-89,-135,-53,-104,-50,-98,-109,-111,-48,-49,-34,-112,-44,-43,-37,-35,-36,-47,]),'M':([103,105,106,109,110,111,149,151,188,],[-76,-78,-79,-77,-135,-74,190,-70,-73,]),'L':([15,22,26,33,38,47,53,54,55,57,58,59,60,65,68,71,77,78,80,82,83,87,89,90,91,98,113,118,123,128,129,131,133,134,141,142,161,171,172,174,182,217,237,243,246,252,257,261,263,268,270,273,274,275,277,284,287,290,292,293,295,296,],[-135,34,-22,34,34,-135,34,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-21,-114,-39,-40,-42,-41,-83,-84,-82,-95,-97,-80,-87,-86,-85,-96,-88,-38,-51,-89,-135,-53,-104,-50,-98,-109,-111,-48,-49,-34,-112,-44,-43,-37,-35,-36,-47,]),'VALF':([49,67,104,108,112,115,116,117,119,124,126,127,130,132,135,136,137,138,139,170,184,185,186,189,190,191,193,194,195,198,203,205,209,220,221,222,223,225,229,245,250,259,264,265,276,],[106,106,-75,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,213,-66,106,-65,106,-71,-72,106,106,106,106,106,106,106,-59,-60,-58,-57,106,106,106,213,106,106,106,106,]),'ADD':([102,103,105,106,109,110,111,145,146,147,149,150,151,156,157,158,187,188,192,232,233,239,],[-135,-76,-78,-79,-77,-135,-74,-61,186,-64,-135,-67,-70,-107,198,-108,-63,-73,-69,-62,-68,198,]),'STR':([119,198,],[156,156,]),'V':([4,5,18,19,20,],[-9,15,-2,15,15,]),'RP':([31,41,42,44,92,94,96,102,103,105,106,109,110,111,130,140,145,146,147,148,149,150,151,155,156,157,158,159,160,163,166,167,168,169,175,176,177,178,180,181,187,188,192,197,199,201,202,208,210,224,226,227,228,232,233,234,236,239,240,247,253,260,262,266,267,278,280,281,285,289,],[-135,-135,95,-15,-14,-17,-18,-135,-76,-78,-79,-77,-135,-74,-135,-135,-61,-135,-64,188,-135,-67,-70,196,-107,-135,-108,-135,-52,204,207,-94,-135,-91,218,-135,-135,-135,230,-16,-63,-73,-69,238,-106,241,-46,-90,-93,-54,-56,254,255,-62,-68,258,-135,-135,-45,-135,-55,279,-105,282,-92,286,288,-135,291,294,]),'GL':([1,],[4,]),'EQ':([37,79,97,144,],[49,132,143,49,]),'ID':([12,13,23,24,25,38,43,46,49,53,54,55,57,58,59,60,65,67,68,71,77,78,80,82,83,87,89,90,91,100,104,108,112,113,115,116,117,118,119,120,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,161,170,171,172,174,182,184,185,186,189,190,191,193,194,195,198,203,205,209,217,220,221,222,223,225,229,237,243,245,246,250,252,257,259,261,263,264,265,268,270,273,274,275,276,277,284,287,290,292,293,295,296,],[-13,21,-30,-31,37,79,96,97,109,79,-128,-120,-125,-118,-119,-123,-134,109,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,144,-75,109,109,-114,109,109,109,-39,109,160,-40,109,160,109,109,-42,-41,109,-83,109,-84,-82,109,109,109,109,109,-95,-97,-80,214,-87,-86,-85,-96,-66,109,-65,109,-71,-72,109,109,109,109,109,109,109,-88,-59,-60,-58,-57,109,109,-38,-51,109,-89,214,-135,-53,109,-104,-50,109,109,-98,-109,-111,-48,-49,109,-34,-112,-44,-43,-37,-35,-36,-47,]),'IF':([38,53,54,55,57,58,59,60,65,68,71,77,78,80,82,83,87,89,90,91,113,118,123,128,129,131,133,134,141,142,161,171,172,174,182,217,237,243,246,252,257,261,263,268,270,273,274,275,277,284,287,290,292,293,295,296,],[81,81,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-40,-42,-41,-83,-84,-82,-95,-97,-80,-87,-86,-85,-96,-88,-38,-51,-89,-135,-53,-104,-50,-98,-109,-111,-48,-49,-34,-112,-44,-43,-37,-35,-36,-47,]),'SETC':([38,53,54,55,57,58,59,60,65,68,71,77,78,80,82,83,87,89,90,91,113,118,123,128,129,131,133,134,141,142,161,171,172,174,182,217,237,243,246,252,257,261,263,268,270,273,274,275,277,284,287,290,292,293,295,296,],[86,86,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-40,-42,-41,-83,-84,-82,-95,-97,-80,-87,-86,-85,-96,-88,-38,-51,-89,-135,-53,-104,-50,-98,-109,-111,-48,-49,-34,-112,-44,-43,-37,-35,-36,-47,]),'INT':([15,31,34,47,93,],[23,23,23,23,23,]),'SQ':([38,53,54,55,57,58,59,60,65,68,71,77,78,80,82,83,87,89,90,91,113,118,123,128,129,131,133,134,141,142,161,171,172,174,182,217,237,243,246,252,257,261,263,268,270,273,274,275,277,284,287,290,292,293,295,296,],[85,85,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-40,-42,-41,-83,-84,-82,-95,-97,-80,-87,-86,-85,-96,-88,-38,-51,-89,-135,-53,-104,-50,-98,-109,-111,-48,-49,-34,-112,-44,-43,-37,-35,-36,-47,]),'FLOAT':([15,31,34,47,93,],[24,24,24,24,24,]),'MT':([102,103,105,106,109,110,111,145,146,147,149,150,151,176,187,188,192,232,233,],[-135,-76,-78,-79,-77,-135,-74,-61,-135,-64,-135,-67,-70,222,-63,-73,-69,-62,-68,]),'ARC':([38,53,54,55,57,58,59,60,65,68,71,77,78,80,82,83,87,89,90,91,113,118,123,128,129,131,133,134,141,142,161,171,172,174,182,217,237,243,246,252,257,261,263,268,270,273,274,275,277,284,287,290,292,293,295,296,],[88,88,-128,-120,-125,-118,-119,-123,-134,-130,-129,-131,-121,-117,-133,-122,-132,-126,-124,-127,-114,-39,-40,-42,-41,-83,-84,-82,-95,-97,-80,-87,-86,-85,-96,-88,-38,-51,-89,-135,-53,-104,-50,-98,-109,-111,-48,-49,-34,-112,-44,-43,-37,-35,-36,-47,]),'SC':([36,37,48,50,63,69,97,99,101,102,103,105,106,107,109,110,111,144,145,146,147,149,150,151,173,183,187,188,192,196,204,207,230,231,232,233,238,241,248,254,255,258,279,282,286,288,291,294,],[47,-135,-135,-27,118,123,142,-23,-25,-135,-76,-78,-79,-26,-77,-135,-74,-135,-61,-135,-64,-135,-67,-70,217,-135,-63,-73,-69,237,243,246,257,-24,-62,-68,261,263,268,274,275,277,287,290,292,293,295,296,]),'MAIN':([1,3,4,5,6,7,8,9,11,14,15,16,17,22,26,32,33,35,40,45,47,98,113,141,142,182,268,],[-135,-135,-9,-135,-4,-5,-135,18,-7,-8,-135,-20,-6,-135,-22,-19,-135,-29,-10,-28,-135,-21,-114,-95,-97,-96,-98,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'fun5':([31,93,],[41,140,]),'fun4':([41,140,],[92,181,]),'term4':([110,],[149,]),'block3':([38,53,],[52,114,]),'block2':([38,53,],[53,53,]),'vars':([5,19,20,],[14,27,29,]),'fun2':([3,8,],[10,10,]),'mainVDir':([19,],[28,]),'move':([38,53,],[57,57,]),'tria':([38,53,],[58,58,]),'con2':([252,],[270,]),'poly':([38,53,],[59,59,]),'lab2':([157,239,],[197,262,]),'colors':([38,53,],[60,60,]),'globals':([1,],[6,]),'WID2':([79,],[134,]),'term3':([149,],[189,]),'varAss':([132,],[172,]),'lista3':([170,],[215,]),'term2':([110,],[150,]),'condRP':([175,],[219,]),'functions':([3,8,],[8,8,]),'valExp':([49,67,108,112,115,116,117,119,124,126,127,130,132,135,136,137,138,139,185,189,193,194,195,198,203,205,209,225,229,245,259,264,265,276,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'fun3':([31,],[42,]),'assigment':([79,],[131,]),'exp3':([146,],[185,]),'exp2':([102,],[145,]),'rep':([38,53,],[65,65,]),'func4':([130,209,],[168,247,]),'exp4':([102,],[146,]),'funCall':([79,],[133,]),'lstrip':([38,53,],[55,55,]),'pen':([38,53,],[68,68,]),'ex2':([176,],[224,]),'condition':([38,53,],[71,71,]),'p_fill':([159,177,178,236,281,],[201,227,228,260,289,]),'prog':([0,],[2,]),'figure':([38,53,],[54,54,]),'funBlock':([3,8,],[13,13,]),'main':([9,],[19,]),'type':([15,31,34,47,93,],[25,43,46,25,43,]),'li4':([216,269,],[249,283,]),'empty':([1,3,5,8,15,19,20,22,31,33,37,38,41,47,48,53,102,110,130,140,144,146,149,157,159,168,176,177,178,183,216,236,239,247,252,269,281,],[7,11,16,11,26,16,16,35,44,35,50,72,94,26,101,72,147,151,169,94,50,187,192,199,202,210,226,202,202,101,251,202,199,210,273,251,202,]),'ex3':([176,],[225,]),'var5':([22,33,],[32,45,]),'var4':([37,144,],[48,183,]),'expresion':([135,],[175,]),'con3':([252,],[271,]),'prelistAss':([97,],[141,]),'idList':([120,125,],[159,163,]),'var3':([25,],[36,]),'var2':([15,47,],[22,98,]),'func3':([168,247,],[208,267,]),'rep3':([67,],[121,]),'glob':([1,],[5,]),'mueve2':([75,76,],[128,129,]),'lab':([38,53,],[77,77,]),'stExp':([119,198,],[157,239,]),'one_par':([38,53,],[78,78,]),'fact2':([49,67,108,112,115,116,117,119,124,126,127,130,132,135,136,137,138,139,185,189,193,194,195,198,203,205,209,225,229,245,259,264,265,276,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'funVDir':([20,],[30,]),'rect':([38,53,],[80,80,]),'fact4':([49,67,108,112,115,116,117,119,124,126,127,130,132,135,136,137,138,139,185,189,193,194,195,198,203,205,209,225,229,245,259,264,265,276,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'p2':([1,],[3,]),'p3':([3,8,],[9,17,]),'term':([49,67,108,112,115,116,117,119,124,126,127,130,132,135,136,137,138,139,185,189,193,194,195,198,203,205,209,225,229,245,259,264,265,276,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,233,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'WID':([38,53,],[82,82,]),'p_arc':([38,53,],[83,83,]),'val':([170,250,],[212,212,]),'func2':([130,],[166,]),'tipeAss':([132,],[174,]),'list':([22,33,38,53,],[33,33,87,87,]),'var33':([48,183,],[99,231,]),'fact':([49,67,108,112,115,116,117,119,124,126,127,130,132,135,136,137,138,139,185,189,193,194,195,198,203,205,209,225,229,245,259,264,265,276,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'exp':([49,67,108,112,115,116,117,119,124,126,127,130,132,135,136,137,138,139,185,193,194,195,198,203,205,209,225,229,245,259,264,265,276,],[107,122,148,152,153,154,155,158,162,164,165,167,173,176,177,178,179,180,232,234,235,236,158,242,244,167,253,256,266,278,280,281,285,]),'position':([38,53,],[89,89,]),'p_width':([38,53,],[90,90,]),'listAss':([132,143,],[171,182,]),'penwrite':([38,53,],[91,91,]),'block':([28,30,121,219,271,],[39,40,161,252,284,]),'lista2':([170,250,],[216,269,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> PR p2 p3 main mainVDir block','prog',6,'p_prog','drawme_yacc.py',27),
  ('main -> MAIN','main',1,'p_main','drawme_yacc.py',43),
  ('mainVDir -> vars','mainVDir',1,'p_mainVDir','drawme_yacc.py',48),
  ('p2 -> globals','p2',1,'p_p2','drawme_yacc.py',52),
  ('p2 -> empty','p2',1,'p_p2','drawme_yacc.py',53),
  ('p3 -> functions p3','p3',2,'p_p3','drawme_yacc.py',57),
  ('p3 -> empty','p3',1,'p_p3','drawme_yacc.py',58),
  ('globals -> glob vars','globals',2,'p_globals','drawme_yacc.py',61),
  ('glob -> GL','glob',1,'p_glob','drawme_yacc.py',73),
  ('functions -> fun2 DP funVDir block','functions',4,'p_functions','drawme_yacc.py',78),
  ('funVDir -> vars','funVDir',1,'p_funVDir','drawme_yacc.py',89),
  ('fun2 -> funBlock ID LP fun3 RP','fun2',5,'p_fun2','drawme_yacc.py',99),
  ('funBlock -> FUN','funBlock',1,'p_funBlock','drawme_yacc.py',111),
  ('fun3 -> fun5 fun4','fun3',2,'p_fun3','drawme_yacc.py',115),
  ('fun3 -> empty','fun3',1,'p_fun3','drawme_yacc.py',116),
  ('fun4 -> C fun5 fun4','fun4',3,'p_fun4','drawme_yacc.py',120),
  ('fun4 -> empty','fun4',1,'p_fun4','drawme_yacc.py',121),
  ('fun5 -> type ID','fun5',2,'p_fun5','drawme_yacc.py',124),
  ('vars -> V var2 var5','vars',3,'p_vars','drawme_yacc.py',130),
  ('vars -> empty','vars',1,'p_vars','drawme_yacc.py',131),
  ('var2 -> type var3 SC var2','var2',4,'p_var2','drawme_yacc.py',134),
  ('var2 -> empty','var2',1,'p_var2','drawme_yacc.py',135),
  ('var3 -> ID var4 var33','var3',3,'p_var3','drawme_yacc.py',138),
  ('var33 -> C ID var4 var33','var33',4,'p_var33','drawme_yacc.py',142),
  ('var33 -> empty','var33',1,'p_var33','drawme_yacc.py',143),
  ('var4 -> EQ exp','var4',2,'p_var4','drawme_yacc.py',148),
  ('var4 -> empty','var4',1,'p_var4','drawme_yacc.py',149),
  ('var5 -> list var5','var5',2,'p_var5','drawme_yacc.py',152),
  ('var5 -> empty','var5',1,'p_var5','drawme_yacc.py',153),
  ('type -> INT','type',1,'p_type','drawme_yacc.py',156),
  ('type -> FLOAT','type',1,'p_type','drawme_yacc.py',157),
  ('val -> VALI','val',1,'p_val','drawme_yacc.py',162),
  ('val -> VALF','val',1,'p_val','drawme_yacc.py',163),
  ('position -> PENP LP exp C exp RP SC','position',7,'p_position','drawme_yacc.py',175),
  ('colors -> PENC LP exp C exp C exp RP SC','colors',9,'p_colors','drawme_yacc.py',179),
  ('colors -> SETC LP exp C exp C exp RP SC','colors',9,'p_colors','drawme_yacc.py',180),
  ('colors -> BACO LP exp C exp C exp RP SC','colors',9,'p_colors','drawme_yacc.py',181),
  ('p_width -> PENW LP exp RP SC','p_width',5,'p_p_width','drawme_yacc.py',192),
  ('penwrite -> PENU SC','penwrite',2,'p_penwrite','drawme_yacc.py',196),
  ('penwrite -> PEND SC','penwrite',2,'p_penwrite','drawme_yacc.py',197),
  ('move -> F mueve2','move',2,'p_move','drawme_yacc.py',205),
  ('move -> B mueve2','move',2,'p_move','drawme_yacc.py',206),
  ('mueve2 -> LP exp C A exp RP SC','mueve2',7,'p_mueve2','drawme_yacc.py',209),
  ('rect -> REC LP exp C exp p_fill RP SC','rect',8,'p_rect','drawme_yacc.py',212),
  ('p_fill -> C FILL','p_fill',2,'p_p_fill','drawme_yacc.py',216),
  ('p_fill -> empty','p_fill',1,'p_p_fill','drawme_yacc.py',217),
  ('tria -> TRI LP exp C exp C exp p_fill RP SC','tria',10,'p_tria','drawme_yacc.py',225),
  ('one_par -> CIR LP exp p_fill RP SC','one_par',6,'p_one_par','drawme_yacc.py',229),
  ('one_par -> SQ LP exp p_fill RP SC','one_par',6,'p_one_par','drawme_yacc.py',230),
  ('poly -> POL LP idList p_fill RP SC','poly',6,'p_poly','drawme_yacc.py',238),
  ('lstrip -> LS LP idList RP SC','lstrip',5,'p_lstrip','drawme_yacc.py',242),
  ('idList -> ID','idList',1,'p_idList','drawme_yacc.py',246),
  ('p_arc -> ARC LP exp RP SC','p_arc',5,'p_p_arc','drawme_yacc.py',253),
  ('expresion -> exp ex2','expresion',2,'p_expresion','drawme_yacc.py',257),
  ('ex2 -> ex3 exp','ex2',2,'p_ex2','drawme_yacc.py',260),
  ('ex2 -> empty','ex2',1,'p_ex2','drawme_yacc.py',261),
  ('ex3 -> LT','ex3',1,'p_ex3','drawme_yacc.py',265),
  ('ex3 -> MT','ex3',1,'p_ex3','drawme_yacc.py',266),
  ('ex3 -> D','ex3',1,'p_ex3','drawme_yacc.py',267),
  ('ex3 -> SEQ','ex3',1,'p_ex3','drawme_yacc.py',268),
  ('exp -> term exp2','exp',2,'p_exp','drawme_yacc.py',272),
  ('exp2 -> exp4 exp3 exp','exp2',3,'p_exp2','drawme_yacc.py',275),
  ('exp2 -> exp4 empty','exp2',2,'p_exp2','drawme_yacc.py',276),
  ('exp4 -> empty','exp4',1,'p_exp4','drawme_yacc.py',279),
  ('exp3 -> ADD','exp3',1,'p_exp3','drawme_yacc.py',283),
  ('exp3 -> SUB','exp3',1,'p_exp3','drawme_yacc.py',284),
  ('term -> fact term2','term',2,'p_term','drawme_yacc.py',288),
  ('term2 -> term4 term3 term','term2',3,'p_term2','drawme_yacc.py',291),
  ('term2 -> term4 empty','term2',2,'p_term2','drawme_yacc.py',292),
  ('term4 -> empty','term4',1,'p_term4','drawme_yacc.py',295),
  ('term3 -> M','term3',1,'p_term3','drawme_yacc.py',299),
  ('term3 -> DIV','term3',1,'p_term3','drawme_yacc.py',300),
  ('fact -> fact2 exp RP','fact',3,'p_fact','drawme_yacc.py',304),
  ('fact -> fact4','fact',1,'p_fact','drawme_yacc.py',305),
  ('fact2 -> LP','fact2',1,'p_fact2','drawme_yacc.py',310),
  ('fact4 -> valExp','fact4',1,'p_fact4','drawme_yacc.py',314),
  ('fact4 -> ID','fact4',1,'p_fact4','drawme_yacc.py',315),
  ('valExp -> VALI','valExp',1,'p_valExp','drawme_yacc.py',322),
  ('valExp -> VALF','valExp',1,'p_valExp','drawme_yacc.py',323),
  ('rep -> RE rep3 block','rep',3,'p_rep','drawme_yacc.py',342),
  ('rep3 -> exp','rep3',1,'p_rep3','drawme_yacc.py',346),
  ('WID -> ID WID2','WID',2,'p_WID','drawme_yacc.py',351),
  ('WID2 -> assigment','WID2',1,'p_WID2','drawme_yacc.py',371),
  ('WID2 -> funCall','WID2',1,'p_WID2','drawme_yacc.py',372),
  ('assigment -> EQ tipeAss','assigment',2,'p_assigment','drawme_yacc.py',375),
  ('tipeAss -> varAss','tipeAss',1,'p_tipeAss','drawme_yacc.py',380),
  ('tipeAss -> listAss','tipeAss',1,'p_tipeAss','drawme_yacc.py',381),
  ('varAss -> exp SC','varAss',2,'p_varAss','drawme_yacc.py',384),
  ('funCall -> LP func2 RP SC','funCall',4,'p_funCall','drawme_yacc.py',387),
  ('func2 -> func4 func3','func2',2,'p_func2','drawme_yacc.py',392),
  ('func2 -> empty','func2',1,'p_func2','drawme_yacc.py',393),
  ('func3 -> C func4 func3','func3',3,'p_func3','drawme_yacc.py',398),
  ('func3 -> empty','func3',1,'p_func3','drawme_yacc.py',399),
  ('func4 -> exp','func4',1,'p_func4','drawme_yacc.py',403),
  ('list -> L type ID prelistAss','list',4,'p_list','drawme_yacc.py',408),
  ('prelistAss -> EQ listAss','prelistAss',2,'p_prelistAss','drawme_yacc.py',415),
  ('prelistAss -> SC','prelistAss',1,'p_prelistAss','drawme_yacc.py',416),
  ('listAss -> LB lista3 RB SC','listAss',4,'p_listAss','drawme_yacc.py',419),
  ('lista2 -> val','lista2',1,'p_lista2','drawme_yacc.py',422),
  ('lista2 -> ID','lista2',1,'p_lista2','drawme_yacc.py',423),
  ('lista3 -> lista2 li4','lista3',2,'p_lista3','drawme_yacc.py',426),
  ('li4 -> C lista2 li4','li4',3,'p_li4','drawme_yacc.py',429),
  ('li4 -> empty','li4',1,'p_li4','drawme_yacc.py',430),
  ('lab -> LA LP stExp lab2 RP SC','lab',6,'p_lab','drawme_yacc.py',433),
  ('lab2 -> ADD stExp lab2','lab2',3,'p_lab2','drawme_yacc.py',437),
  ('lab2 -> empty','lab2',1,'p_lab2','drawme_yacc.py',438),
  ('stExp -> STR','stExp',1,'p_stExp','drawme_yacc.py',441),
  ('stExp -> exp','stExp',1,'p_stExp','drawme_yacc.py',442),
  ('condition -> IF LP expresion condRP block con2','condition',6,'p_condition','drawme_yacc.py',445),
  ('condRP -> RP','condRP',1,'p_condRP','drawme_yacc.py',449),
  ('con2 -> empty','con2',1,'p_con2','drawme_yacc.py',454),
  ('con2 -> con3 block','con2',2,'p_con2','drawme_yacc.py',455),
  ('con3 -> ELSE','con3',1,'p_con3','drawme_yacc.py',458),
  ('block -> LB block3 RB','block',3,'p_block','drawme_yacc.py',463),
  ('block3 -> block2 block3','block3',2,'p_block3','drawme_yacc.py',466),
  ('block3 -> empty','block3',1,'p_block3','drawme_yacc.py',467),
  ('figure -> rect','figure',1,'p_figure','drawme_yacc.py',470),
  ('figure -> tria','figure',1,'p_figure','drawme_yacc.py',471),
  ('figure -> poly','figure',1,'p_figure','drawme_yacc.py',472),
  ('figure -> lstrip','figure',1,'p_figure','drawme_yacc.py',473),
  ('figure -> one_par','figure',1,'p_figure','drawme_yacc.py',474),
  ('figure -> p_arc','figure',1,'p_figure','drawme_yacc.py',475),
  ('pen -> colors','pen',1,'p_pen','drawme_yacc.py',478),
  ('pen -> p_width','pen',1,'p_pen','drawme_yacc.py',479),
  ('pen -> move','pen',1,'p_pen','drawme_yacc.py',480),
  ('pen -> position','pen',1,'p_pen','drawme_yacc.py',481),
  ('pen -> penwrite','pen',1,'p_pen','drawme_yacc.py',482),
  ('block2 -> figure','block2',1,'p_block2','drawme_yacc.py',485),
  ('block2 -> condition','block2',1,'p_block2','drawme_yacc.py',486),
  ('block2 -> pen','block2',1,'p_block2','drawme_yacc.py',487),
  ('block2 -> lab','block2',1,'p_block2','drawme_yacc.py',488),
  ('block2 -> list','block2',1,'p_block2','drawme_yacc.py',489),
  ('block2 -> WID','block2',1,'p_block2','drawme_yacc.py',490),
  ('block2 -> rep','block2',1,'p_block2','drawme_yacc.py',491),
  ('empty -> <empty>','empty',0,'p_empty','drawme_yacc.py',494),
]
