Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> PR p2 p3 main mainVDir block
Rule 2     main -> MAIN
Rule 3     mainVDir -> vars
Rule 4     p2 -> globals
Rule 5     p2 -> empty
Rule 6     p3 -> functions p3
Rule 7     p3 -> empty
Rule 8     globals -> GL vars
Rule 9     functions -> fun2 DP funVDir block
Rule 10    funVDir -> vars
Rule 11    fun2 -> FUN ID LP fun3 RP
Rule 12    fun3 -> fun5 fun4
Rule 13    fun3 -> empty
Rule 14    fun4 -> C fun5 fun4
Rule 15    fun4 -> empty
Rule 16    fun5 -> type ID
Rule 17    vars -> V var2 var5
Rule 18    vars -> empty
Rule 19    var2 -> type var3 SC var2
Rule 20    var2 -> empty
Rule 21    var3 -> ID var4 var33
Rule 22    var33 -> C ID var4 var33
Rule 23    var33 -> empty
Rule 24    var4 -> EQ exp
Rule 25    var4 -> empty
Rule 26    var5 -> list var5
Rule 27    var5 -> empty
Rule 28    type -> INT
Rule 29    type -> FLOAT
Rule 30    val -> VALI
Rule 31    val -> VALF
Rule 32    position -> PENP LP exp C exp RP SC
Rule 33    colors -> PENC LP exp C exp C exp RP SC
Rule 34    colors -> SETC LP exp C exp C exp RP SC
Rule 35    colors -> BACO LP exp C exp C exp RP SC
Rule 36    p_width -> PENW LP exp RP SC
Rule 37    penwrite -> PENU SC
Rule 38    penwrite -> PEND SC
Rule 39    move -> F mueve2
Rule 40    move -> B mueve2
Rule 41    mueve2 -> LP exp C A exp RP SC
Rule 42    rect -> REC LP exp C exp p_fill RP SC
Rule 43    p_fill -> C FILL
Rule 44    p_fill -> empty
Rule 45    tria -> TRI LP exp C exp C exp p_fill RP SC
Rule 46    one_par -> CIR LP exp p_fill RP SC
Rule 47    one_par -> SQ LP exp p_fill RP SC
Rule 48    poly -> POL LP idList p_fill RP SC
Rule 49    lstrip -> LS LP idList RP SC
Rule 50    idList -> ID
Rule 51    p_arc -> ARC LP exp RP SC
Rule 52    expresion -> exp ex2
Rule 53    ex2 -> ex3 exp
Rule 54    ex2 -> empty
Rule 55    ex3 -> LT
Rule 56    ex3 -> MT
Rule 57    ex3 -> D
Rule 58    ex3 -> SEQ
Rule 59    exp -> term exp2
Rule 60    exp2 -> exp3 exp
Rule 61    exp2 -> empty
Rule 62    exp3 -> ADD
Rule 63    exp3 -> SUB
Rule 64    term -> fact term2
Rule 65    term2 -> term3 term
Rule 66    term2 -> empty
Rule 67    term3 -> M
Rule 68    term3 -> DIV
Rule 69    fact -> fact2 exp RP
Rule 70    fact -> fact4
Rule 71    fact2 -> LP
Rule 72    fact4 -> valExp
Rule 73    fact4 -> ID
Rule 74    valExp -> VALI
Rule 75    valExp -> VALF
Rule 76    rep -> RE rep3 block
Rule 77    rep3 -> exp
Rule 78    WID -> ID WID2
Rule 79    WID2 -> assigment
Rule 80    WID2 -> funCall
Rule 81    assigment -> EQ tipeAss
Rule 82    tipeAss -> varAss
Rule 83    tipeAss -> listAss
Rule 84    varAss -> exp SC
Rule 85    funCall -> LP func2 RP SC
Rule 86    func2 -> func4 func3
Rule 87    func2 -> empty
Rule 88    func3 -> C func4 func3
Rule 89    func3 -> empty
Rule 90    func4 -> exp
Rule 91    list -> L type ID prelistAss
Rule 92    prelistAss -> EQ listAss
Rule 93    prelistAss -> SC
Rule 94    listAss -> LB lista3 RB SC
Rule 95    lista2 -> val
Rule 96    lista2 -> ID
Rule 97    lista3 -> lista2 li4
Rule 98    li4 -> C lista2 li4
Rule 99    li4 -> empty
Rule 100   lab -> LA LP stExp lab2 RP SC
Rule 101   lab2 -> ADD stExp lab2
Rule 102   lab2 -> empty
Rule 103   stExp -> STR
Rule 104   stExp -> exp
Rule 105   condition -> IF LP expresion condRP block con2
Rule 106   condRP -> RP
Rule 107   con2 -> empty
Rule 108   con2 -> con3 block
Rule 109   con3 -> ELSE
Rule 110   block -> LB block3 RB
Rule 111   block3 -> block2 block3
Rule 112   block3 -> empty
Rule 113   figure -> rect
Rule 114   figure -> tria
Rule 115   figure -> poly
Rule 116   figure -> lstrip
Rule 117   figure -> one_par
Rule 118   figure -> p_arc
Rule 119   pen -> colors
Rule 120   pen -> p_width
Rule 121   pen -> move
Rule 122   pen -> position
Rule 123   pen -> penwrite
Rule 124   block2 -> figure
Rule 125   block2 -> condition
Rule 126   block2 -> pen
Rule 127   block2 -> lab
Rule 128   block2 -> list
Rule 129   block2 -> WID
Rule 130   block2 -> rep
Rule 131   empty -> <empty>

Terminals, with rules where they appear

A                    : 41
ADD                  : 62 101
ARC                  : 51
B                    : 40
BACO                 : 35
C                    : 14 22 32 33 33 34 34 35 35 41 42 43 45 45 88 98
CIR                  : 46
D                    : 57
DIV                  : 68
DP                   : 9
ELSE                 : 109
EQ                   : 24 81 92
F                    : 39
FILL                 : 43
FLOAT                : 29
FUN                  : 11
GL                   : 8
ID                   : 11 16 21 22 50 73 78 91 96
IF                   : 105
INT                  : 28
L                    : 91
LA                   : 100
LB                   : 94 110
LP                   : 11 32 33 34 35 36 41 42 45 46 47 48 49 51 71 85 100 105
LS                   : 49
LT                   : 55
M                    : 67
MAIN                 : 2
MT                   : 56
PENC                 : 33
PEND                 : 38
PENP                 : 32
PENU                 : 37
PENW                 : 36
POL                  : 48
PR                   : 1
RB                   : 94 110
RE                   : 76
REC                  : 42
RP                   : 11 32 33 34 35 36 41 42 45 46 47 48 49 51 69 85 100 106
SC                   : 19 32 33 34 35 36 37 38 41 42 45 46 47 48 49 51 84 85 93 94 100
SEQ                  : 58
SETC                 : 34
SQ                   : 47
STR                  : 103
SUB                  : 63
TRI                  : 45
V                    : 17
VALF                 : 31 75
VALI                 : 30 74
error                : 

Nonterminals, with rules where they appear

WID                  : 129
WID2                 : 78
assigment            : 79
block                : 1 9 76 105 108
block2               : 111
block3               : 110 111
colors               : 119
con2                 : 105
con3                 : 108
condRP               : 105
condition            : 125
empty                : 5 7 13 15 18 20 23 25 27 44 54 61 66 87 89 99 102 107 112
ex2                  : 52
ex3                  : 53
exp                  : 24 32 32 33 33 33 34 34 34 35 35 35 36 41 41 42 42 45 45 45 46 47 51 52 53 60 69 77 84 90 104
exp2                 : 59
exp3                 : 60
expresion            : 105
fact                 : 64
fact2                : 69
fact4                : 70
figure               : 124
fun2                 : 9
fun3                 : 11
fun4                 : 12 14
fun5                 : 12 14
funCall              : 80
funVDir              : 9
func2                : 85
func3                : 86 88
func4                : 86 88
functions            : 6
globals              : 4
idList               : 48 49
lab                  : 127
lab2                 : 100 101
li4                  : 97 98
list                 : 26 128
listAss              : 83 92
lista2               : 97 98
lista3               : 94
lstrip               : 116
main                 : 1
mainVDir             : 1
move                 : 121
mueve2               : 39 40
one_par              : 117
p2                   : 1
p3                   : 1 6
p_arc                : 118
p_fill               : 42 45 46 47 48
p_width              : 120
pen                  : 126
penwrite             : 123
poly                 : 115
position             : 122
prelistAss           : 91
prog                 : 0
rect                 : 113
rep                  : 130
rep3                 : 76
stExp                : 100 101
term                 : 59 65
term2                : 64
term3                : 65
tipeAss              : 81
tria                 : 114
type                 : 16 19 91
val                  : 95
valExp               : 72
var2                 : 17 19
var3                 : 19
var33                : 21 22
var4                 : 21 22
var5                 : 17 26
varAss               : 82
vars                 : 3 8 10

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . PR p2 p3 main mainVDir block

    PR              shift and go to state 1

    prog                           shift and go to state 2

state 1

    (1) prog -> PR . p2 p3 main mainVDir block
    (4) p2 -> . globals
    (5) p2 -> . empty
    (8) globals -> . GL vars
    (131) empty -> .

    GL              shift and go to state 4
    FUN             reduce using rule 131 (empty -> .)
    MAIN            reduce using rule 131 (empty -> .)

    p2                             shift and go to state 3
    globals                        shift and go to state 5
    empty                          shift and go to state 6

state 2

    (0) S' -> prog .



state 3

    (1) prog -> PR p2 . p3 main mainVDir block
    (6) p3 -> . functions p3
    (7) p3 -> . empty
    (9) functions -> . fun2 DP funVDir block
    (131) empty -> .
    (11) fun2 -> . FUN ID LP fun3 RP

    MAIN            reduce using rule 131 (empty -> .)
    FUN             shift and go to state 11

    p3                             shift and go to state 8
    functions                      shift and go to state 7
    fun2                           shift and go to state 9
    empty                          shift and go to state 10

state 4

    (8) globals -> GL . vars
    (17) vars -> . V var2 var5
    (18) vars -> . empty
    (131) empty -> .

    V               shift and go to state 13
    FUN             reduce using rule 131 (empty -> .)
    MAIN            reduce using rule 131 (empty -> .)

    empty                          shift and go to state 14
    vars                           shift and go to state 12

state 5

    (4) p2 -> globals .

    FUN             reduce using rule 4 (p2 -> globals .)
    MAIN            reduce using rule 4 (p2 -> globals .)


state 6

    (5) p2 -> empty .

    FUN             reduce using rule 5 (p2 -> empty .)
    MAIN            reduce using rule 5 (p2 -> empty .)


state 7

    (6) p3 -> functions . p3
    (6) p3 -> . functions p3
    (7) p3 -> . empty
    (9) functions -> . fun2 DP funVDir block
    (131) empty -> .
    (11) fun2 -> . FUN ID LP fun3 RP

    MAIN            reduce using rule 131 (empty -> .)
    FUN             shift and go to state 11

    p3                             shift and go to state 15
    functions                      shift and go to state 7
    fun2                           shift and go to state 9
    empty                          shift and go to state 10

state 8

    (1) prog -> PR p2 p3 . main mainVDir block
    (2) main -> . MAIN

    MAIN            shift and go to state 16

    main                           shift and go to state 17

state 9

    (9) functions -> fun2 . DP funVDir block

    DP              shift and go to state 18


state 10

    (7) p3 -> empty .

    MAIN            reduce using rule 7 (p3 -> empty .)


state 11

    (11) fun2 -> FUN . ID LP fun3 RP

    ID              shift and go to state 19


state 12

    (8) globals -> GL vars .

    FUN             reduce using rule 8 (globals -> GL vars .)
    MAIN            reduce using rule 8 (globals -> GL vars .)


state 13

    (17) vars -> V . var2 var5
    (19) var2 -> . type var3 SC var2
    (20) var2 -> . empty
    (28) type -> . INT
    (29) type -> . FLOAT
    (131) empty -> .

    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    L               reduce using rule 131 (empty -> .)
    FUN             reduce using rule 131 (empty -> .)
    MAIN            reduce using rule 131 (empty -> .)
    LB              reduce using rule 131 (empty -> .)

    type                           shift and go to state 23
    empty                          shift and go to state 24
    var2                           shift and go to state 20

state 14

    (18) vars -> empty .

    FUN             reduce using rule 18 (vars -> empty .)
    MAIN            reduce using rule 18 (vars -> empty .)
    LB              reduce using rule 18 (vars -> empty .)


state 15

    (6) p3 -> functions p3 .

    MAIN            reduce using rule 6 (p3 -> functions p3 .)


state 16

    (2) main -> MAIN .

    V               reduce using rule 2 (main -> MAIN .)
    LB              reduce using rule 2 (main -> MAIN .)


state 17

    (1) prog -> PR p2 p3 main . mainVDir block
    (3) mainVDir -> . vars
    (17) vars -> . V var2 var5
    (18) vars -> . empty
    (131) empty -> .

    V               shift and go to state 13
    LB              reduce using rule 131 (empty -> .)

    vars                           shift and go to state 25
    mainVDir                       shift and go to state 26
    empty                          shift and go to state 14

state 18

    (9) functions -> fun2 DP . funVDir block
    (10) funVDir -> . vars
    (17) vars -> . V var2 var5
    (18) vars -> . empty
    (131) empty -> .

    V               shift and go to state 13
    LB              reduce using rule 131 (empty -> .)

    vars                           shift and go to state 27
    empty                          shift and go to state 14
    funVDir                        shift and go to state 28

state 19

    (11) fun2 -> FUN ID . LP fun3 RP

    LP              shift and go to state 29


state 20

    (17) vars -> V var2 . var5
    (26) var5 -> . list var5
    (27) var5 -> . empty
    (91) list -> . L type ID prelistAss
    (131) empty -> .

    L               shift and go to state 32
    FUN             reduce using rule 131 (empty -> .)
    MAIN            reduce using rule 131 (empty -> .)
    LB              reduce using rule 131 (empty -> .)

    var5                           shift and go to state 30
    list                           shift and go to state 31
    empty                          shift and go to state 33

state 21

    (28) type -> INT .

    ID              reduce using rule 28 (type -> INT .)


state 22

    (29) type -> FLOAT .

    ID              reduce using rule 29 (type -> FLOAT .)


state 23

    (19) var2 -> type . var3 SC var2
    (21) var3 -> . ID var4 var33

    ID              shift and go to state 35

    var3                           shift and go to state 34

state 24

    (20) var2 -> empty .

    L               reduce using rule 20 (var2 -> empty .)
    FUN             reduce using rule 20 (var2 -> empty .)
    MAIN            reduce using rule 20 (var2 -> empty .)
    LB              reduce using rule 20 (var2 -> empty .)


state 25

    (3) mainVDir -> vars .

    LB              reduce using rule 3 (mainVDir -> vars .)


state 26

    (1) prog -> PR p2 p3 main mainVDir . block
    (110) block -> . LB block3 RB

    LB              shift and go to state 36

    block                          shift and go to state 37

state 27

    (10) funVDir -> vars .

    LB              reduce using rule 10 (funVDir -> vars .)


state 28

    (9) functions -> fun2 DP funVDir . block
    (110) block -> . LB block3 RB

    LB              shift and go to state 36

    block                          shift and go to state 38

state 29

    (11) fun2 -> FUN ID LP . fun3 RP
    (12) fun3 -> . fun5 fun4
    (13) fun3 -> . empty
    (16) fun5 -> . type ID
    (131) empty -> .
    (28) type -> . INT
    (29) type -> . FLOAT

    RP              reduce using rule 131 (empty -> .)
    INT             shift and go to state 21
    FLOAT           shift and go to state 22

    fun5                           shift and go to state 39
    type                           shift and go to state 41
    empty                          shift and go to state 42
    fun3                           shift and go to state 40

state 30

    (17) vars -> V var2 var5 .

    FUN             reduce using rule 17 (vars -> V var2 var5 .)
    MAIN            reduce using rule 17 (vars -> V var2 var5 .)
    LB              reduce using rule 17 (vars -> V var2 var5 .)


state 31

    (26) var5 -> list . var5
    (26) var5 -> . list var5
    (27) var5 -> . empty
    (91) list -> . L type ID prelistAss
    (131) empty -> .

    L               shift and go to state 32
    FUN             reduce using rule 131 (empty -> .)
    MAIN            reduce using rule 131 (empty -> .)
    LB              reduce using rule 131 (empty -> .)

    var5                           shift and go to state 43
    list                           shift and go to state 31
    empty                          shift and go to state 33

state 32

    (91) list -> L . type ID prelistAss
    (28) type -> . INT
    (29) type -> . FLOAT

    INT             shift and go to state 21
    FLOAT           shift and go to state 22

    type                           shift and go to state 44

state 33

    (27) var5 -> empty .

    FUN             reduce using rule 27 (var5 -> empty .)
    MAIN            reduce using rule 27 (var5 -> empty .)
    LB              reduce using rule 27 (var5 -> empty .)


state 34

    (19) var2 -> type var3 . SC var2

    SC              shift and go to state 45


state 35

    (21) var3 -> ID . var4 var33
    (24) var4 -> . EQ exp
    (25) var4 -> . empty
    (131) empty -> .

    EQ              shift and go to state 47
    C               reduce using rule 131 (empty -> .)
    SC              reduce using rule 131 (empty -> .)

    var4                           shift and go to state 46
    empty                          shift and go to state 48

state 36

    (110) block -> LB . block3 RB
    (111) block3 -> . block2 block3
    (112) block3 -> . empty
    (124) block2 -> . figure
    (125) block2 -> . condition
    (126) block2 -> . pen
    (127) block2 -> . lab
    (128) block2 -> . list
    (129) block2 -> . WID
    (130) block2 -> . rep
    (131) empty -> .
    (113) figure -> . rect
    (114) figure -> . tria
    (115) figure -> . poly
    (116) figure -> . lstrip
    (117) figure -> . one_par
    (118) figure -> . p_arc
    (105) condition -> . IF LP expresion condRP block con2
    (119) pen -> . colors
    (120) pen -> . p_width
    (121) pen -> . move
    (122) pen -> . position
    (123) pen -> . penwrite
    (100) lab -> . LA LP stExp lab2 RP SC
    (91) list -> . L type ID prelistAss
    (78) WID -> . ID WID2
    (76) rep -> . RE rep3 block
    (42) rect -> . REC LP exp C exp p_fill RP SC
    (45) tria -> . TRI LP exp C exp C exp p_fill RP SC
    (48) poly -> . POL LP idList p_fill RP SC
    (49) lstrip -> . LS LP idList RP SC
    (46) one_par -> . CIR LP exp p_fill RP SC
    (47) one_par -> . SQ LP exp p_fill RP SC
    (51) p_arc -> . ARC LP exp RP SC
    (33) colors -> . PENC LP exp C exp C exp RP SC
    (34) colors -> . SETC LP exp C exp C exp RP SC
    (35) colors -> . BACO LP exp C exp C exp RP SC
    (36) p_width -> . PENW LP exp RP SC
    (39) move -> . F mueve2
    (40) move -> . B mueve2
    (32) position -> . PENP LP exp C exp RP SC
    (37) penwrite -> . PENU SC
    (38) penwrite -> . PEND SC

    RB              reduce using rule 131 (empty -> .)
    IF              shift and go to state 79
    LA              shift and go to state 62
    L               shift and go to state 32
    ID              shift and go to state 77
    RE              shift and go to state 65
    REC             shift and go to state 59
    TRI             shift and go to state 72
    POL             shift and go to state 64
    LS              shift and go to state 71
    CIR             shift and go to state 82
    SQ              shift and go to state 83
    ARC             shift and go to state 86
    PENC            shift and go to state 68
    SETC            shift and go to state 84
    BACO            shift and go to state 54
    PENW            shift and go to state 60
    F               shift and go to state 74
    B               shift and go to state 73
    PENP            shift and go to state 49
    PENU            shift and go to state 61
    PEND            shift and go to state 67

    block3                         shift and go to state 50
    block2                         shift and go to state 51
    figure                         shift and go to state 52
    lstrip                         shift and go to state 53
    move                           shift and go to state 55
    tria                           shift and go to state 56
    poly                           shift and go to state 57
    colors                         shift and go to state 58
    rep                            shift and go to state 63
    pen                            shift and go to state 66
    condition                      shift and go to state 69
    empty                          shift and go to state 70
    lab                            shift and go to state 75
    one_par                        shift and go to state 76
    rect                           shift and go to state 78
    WID                            shift and go to state 80
    p_arc                          shift and go to state 81
    list                           shift and go to state 85
    position                       shift and go to state 87
    p_width                        shift and go to state 88
    penwrite                       shift and go to state 89

state 37

    (1) prog -> PR p2 p3 main mainVDir block .

    $end            reduce using rule 1 (prog -> PR p2 p3 main mainVDir block .)


state 38

    (9) functions -> fun2 DP funVDir block .

    FUN             reduce using rule 9 (functions -> fun2 DP funVDir block .)
    MAIN            reduce using rule 9 (functions -> fun2 DP funVDir block .)


state 39

    (12) fun3 -> fun5 . fun4
    (14) fun4 -> . C fun5 fun4
    (15) fun4 -> . empty
    (131) empty -> .

    C               shift and go to state 91
    RP              reduce using rule 131 (empty -> .)

    fun4                           shift and go to state 90
    empty                          shift and go to state 92

state 40

    (11) fun2 -> FUN ID LP fun3 . RP

    RP              shift and go to state 93


state 41

    (16) fun5 -> type . ID

    ID              shift and go to state 94


state 42

    (13) fun3 -> empty .

    RP              reduce using rule 13 (fun3 -> empty .)


state 43

    (26) var5 -> list var5 .

    FUN             reduce using rule 26 (var5 -> list var5 .)
    MAIN            reduce using rule 26 (var5 -> list var5 .)
    LB              reduce using rule 26 (var5 -> list var5 .)


state 44

    (91) list -> L type . ID prelistAss

    ID              shift and go to state 95


state 45

    (19) var2 -> type var3 SC . var2
    (19) var2 -> . type var3 SC var2
    (20) var2 -> . empty
    (28) type -> . INT
    (29) type -> . FLOAT
    (131) empty -> .

    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    L               reduce using rule 131 (empty -> .)
    FUN             reduce using rule 131 (empty -> .)
    MAIN            reduce using rule 131 (empty -> .)
    LB              reduce using rule 131 (empty -> .)

    type                           shift and go to state 23
    empty                          shift and go to state 24
    var2                           shift and go to state 96

state 46

    (21) var3 -> ID var4 . var33
    (22) var33 -> . C ID var4 var33
    (23) var33 -> . empty
    (131) empty -> .

    C               shift and go to state 98
    SC              reduce using rule 131 (empty -> .)

    var33                          shift and go to state 97
    empty                          shift and go to state 99

state 47

    (24) var4 -> EQ . exp
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    exp                            shift and go to state 105
    fact2                          shift and go to state 106
    fact                           shift and go to state 108
    fact4                          shift and go to state 109

state 48

    (25) var4 -> empty .

    C               reduce using rule 25 (var4 -> empty .)
    SC              reduce using rule 25 (var4 -> empty .)


state 49

    (32) position -> PENP . LP exp C exp RP SC

    LP              shift and go to state 110


state 50

    (110) block -> LB block3 . RB

    RB              shift and go to state 111


state 51

    (111) block3 -> block2 . block3
    (111) block3 -> . block2 block3
    (112) block3 -> . empty
    (124) block2 -> . figure
    (125) block2 -> . condition
    (126) block2 -> . pen
    (127) block2 -> . lab
    (128) block2 -> . list
    (129) block2 -> . WID
    (130) block2 -> . rep
    (131) empty -> .
    (113) figure -> . rect
    (114) figure -> . tria
    (115) figure -> . poly
    (116) figure -> . lstrip
    (117) figure -> . one_par
    (118) figure -> . p_arc
    (105) condition -> . IF LP expresion condRP block con2
    (119) pen -> . colors
    (120) pen -> . p_width
    (121) pen -> . move
    (122) pen -> . position
    (123) pen -> . penwrite
    (100) lab -> . LA LP stExp lab2 RP SC
    (91) list -> . L type ID prelistAss
    (78) WID -> . ID WID2
    (76) rep -> . RE rep3 block
    (42) rect -> . REC LP exp C exp p_fill RP SC
    (45) tria -> . TRI LP exp C exp C exp p_fill RP SC
    (48) poly -> . POL LP idList p_fill RP SC
    (49) lstrip -> . LS LP idList RP SC
    (46) one_par -> . CIR LP exp p_fill RP SC
    (47) one_par -> . SQ LP exp p_fill RP SC
    (51) p_arc -> . ARC LP exp RP SC
    (33) colors -> . PENC LP exp C exp C exp RP SC
    (34) colors -> . SETC LP exp C exp C exp RP SC
    (35) colors -> . BACO LP exp C exp C exp RP SC
    (36) p_width -> . PENW LP exp RP SC
    (39) move -> . F mueve2
    (40) move -> . B mueve2
    (32) position -> . PENP LP exp C exp RP SC
    (37) penwrite -> . PENU SC
    (38) penwrite -> . PEND SC

    RB              reduce using rule 131 (empty -> .)
    IF              shift and go to state 79
    LA              shift and go to state 62
    L               shift and go to state 32
    ID              shift and go to state 77
    RE              shift and go to state 65
    REC             shift and go to state 59
    TRI             shift and go to state 72
    POL             shift and go to state 64
    LS              shift and go to state 71
    CIR             shift and go to state 82
    SQ              shift and go to state 83
    ARC             shift and go to state 86
    PENC            shift and go to state 68
    SETC            shift and go to state 84
    BACO            shift and go to state 54
    PENW            shift and go to state 60
    F               shift and go to state 74
    B               shift and go to state 73
    PENP            shift and go to state 49
    PENU            shift and go to state 61
    PEND            shift and go to state 67

    block3                         shift and go to state 112
    block2                         shift and go to state 51
    figure                         shift and go to state 52
    lstrip                         shift and go to state 53
    move                           shift and go to state 55
    tria                           shift and go to state 56
    poly                           shift and go to state 57
    colors                         shift and go to state 58
    rep                            shift and go to state 63
    pen                            shift and go to state 66
    condition                      shift and go to state 69
    empty                          shift and go to state 70
    lab                            shift and go to state 75
    one_par                        shift and go to state 76
    rect                           shift and go to state 78
    WID                            shift and go to state 80
    p_arc                          shift and go to state 81
    list                           shift and go to state 85
    position                       shift and go to state 87
    p_width                        shift and go to state 88
    penwrite                       shift and go to state 89

state 52

    (124) block2 -> figure .

    IF              reduce using rule 124 (block2 -> figure .)
    LA              reduce using rule 124 (block2 -> figure .)
    L               reduce using rule 124 (block2 -> figure .)
    ID              reduce using rule 124 (block2 -> figure .)
    RE              reduce using rule 124 (block2 -> figure .)
    REC             reduce using rule 124 (block2 -> figure .)
    TRI             reduce using rule 124 (block2 -> figure .)
    POL             reduce using rule 124 (block2 -> figure .)
    LS              reduce using rule 124 (block2 -> figure .)
    CIR             reduce using rule 124 (block2 -> figure .)
    SQ              reduce using rule 124 (block2 -> figure .)
    ARC             reduce using rule 124 (block2 -> figure .)
    PENC            reduce using rule 124 (block2 -> figure .)
    SETC            reduce using rule 124 (block2 -> figure .)
    BACO            reduce using rule 124 (block2 -> figure .)
    PENW            reduce using rule 124 (block2 -> figure .)
    F               reduce using rule 124 (block2 -> figure .)
    B               reduce using rule 124 (block2 -> figure .)
    PENP            reduce using rule 124 (block2 -> figure .)
    PENU            reduce using rule 124 (block2 -> figure .)
    PEND            reduce using rule 124 (block2 -> figure .)
    RB              reduce using rule 124 (block2 -> figure .)


state 53

    (116) figure -> lstrip .

    IF              reduce using rule 116 (figure -> lstrip .)
    LA              reduce using rule 116 (figure -> lstrip .)
    L               reduce using rule 116 (figure -> lstrip .)
    ID              reduce using rule 116 (figure -> lstrip .)
    RE              reduce using rule 116 (figure -> lstrip .)
    REC             reduce using rule 116 (figure -> lstrip .)
    TRI             reduce using rule 116 (figure -> lstrip .)
    POL             reduce using rule 116 (figure -> lstrip .)
    LS              reduce using rule 116 (figure -> lstrip .)
    CIR             reduce using rule 116 (figure -> lstrip .)
    SQ              reduce using rule 116 (figure -> lstrip .)
    ARC             reduce using rule 116 (figure -> lstrip .)
    PENC            reduce using rule 116 (figure -> lstrip .)
    SETC            reduce using rule 116 (figure -> lstrip .)
    BACO            reduce using rule 116 (figure -> lstrip .)
    PENW            reduce using rule 116 (figure -> lstrip .)
    F               reduce using rule 116 (figure -> lstrip .)
    B               reduce using rule 116 (figure -> lstrip .)
    PENP            reduce using rule 116 (figure -> lstrip .)
    PENU            reduce using rule 116 (figure -> lstrip .)
    PEND            reduce using rule 116 (figure -> lstrip .)
    RB              reduce using rule 116 (figure -> lstrip .)


state 54

    (35) colors -> BACO . LP exp C exp C exp RP SC

    LP              shift and go to state 113


state 55

    (121) pen -> move .

    IF              reduce using rule 121 (pen -> move .)
    LA              reduce using rule 121 (pen -> move .)
    L               reduce using rule 121 (pen -> move .)
    ID              reduce using rule 121 (pen -> move .)
    RE              reduce using rule 121 (pen -> move .)
    REC             reduce using rule 121 (pen -> move .)
    TRI             reduce using rule 121 (pen -> move .)
    POL             reduce using rule 121 (pen -> move .)
    LS              reduce using rule 121 (pen -> move .)
    CIR             reduce using rule 121 (pen -> move .)
    SQ              reduce using rule 121 (pen -> move .)
    ARC             reduce using rule 121 (pen -> move .)
    PENC            reduce using rule 121 (pen -> move .)
    SETC            reduce using rule 121 (pen -> move .)
    BACO            reduce using rule 121 (pen -> move .)
    PENW            reduce using rule 121 (pen -> move .)
    F               reduce using rule 121 (pen -> move .)
    B               reduce using rule 121 (pen -> move .)
    PENP            reduce using rule 121 (pen -> move .)
    PENU            reduce using rule 121 (pen -> move .)
    PEND            reduce using rule 121 (pen -> move .)
    RB              reduce using rule 121 (pen -> move .)


state 56

    (114) figure -> tria .

    IF              reduce using rule 114 (figure -> tria .)
    LA              reduce using rule 114 (figure -> tria .)
    L               reduce using rule 114 (figure -> tria .)
    ID              reduce using rule 114 (figure -> tria .)
    RE              reduce using rule 114 (figure -> tria .)
    REC             reduce using rule 114 (figure -> tria .)
    TRI             reduce using rule 114 (figure -> tria .)
    POL             reduce using rule 114 (figure -> tria .)
    LS              reduce using rule 114 (figure -> tria .)
    CIR             reduce using rule 114 (figure -> tria .)
    SQ              reduce using rule 114 (figure -> tria .)
    ARC             reduce using rule 114 (figure -> tria .)
    PENC            reduce using rule 114 (figure -> tria .)
    SETC            reduce using rule 114 (figure -> tria .)
    BACO            reduce using rule 114 (figure -> tria .)
    PENW            reduce using rule 114 (figure -> tria .)
    F               reduce using rule 114 (figure -> tria .)
    B               reduce using rule 114 (figure -> tria .)
    PENP            reduce using rule 114 (figure -> tria .)
    PENU            reduce using rule 114 (figure -> tria .)
    PEND            reduce using rule 114 (figure -> tria .)
    RB              reduce using rule 114 (figure -> tria .)


state 57

    (115) figure -> poly .

    IF              reduce using rule 115 (figure -> poly .)
    LA              reduce using rule 115 (figure -> poly .)
    L               reduce using rule 115 (figure -> poly .)
    ID              reduce using rule 115 (figure -> poly .)
    RE              reduce using rule 115 (figure -> poly .)
    REC             reduce using rule 115 (figure -> poly .)
    TRI             reduce using rule 115 (figure -> poly .)
    POL             reduce using rule 115 (figure -> poly .)
    LS              reduce using rule 115 (figure -> poly .)
    CIR             reduce using rule 115 (figure -> poly .)
    SQ              reduce using rule 115 (figure -> poly .)
    ARC             reduce using rule 115 (figure -> poly .)
    PENC            reduce using rule 115 (figure -> poly .)
    SETC            reduce using rule 115 (figure -> poly .)
    BACO            reduce using rule 115 (figure -> poly .)
    PENW            reduce using rule 115 (figure -> poly .)
    F               reduce using rule 115 (figure -> poly .)
    B               reduce using rule 115 (figure -> poly .)
    PENP            reduce using rule 115 (figure -> poly .)
    PENU            reduce using rule 115 (figure -> poly .)
    PEND            reduce using rule 115 (figure -> poly .)
    RB              reduce using rule 115 (figure -> poly .)


state 58

    (119) pen -> colors .

    IF              reduce using rule 119 (pen -> colors .)
    LA              reduce using rule 119 (pen -> colors .)
    L               reduce using rule 119 (pen -> colors .)
    ID              reduce using rule 119 (pen -> colors .)
    RE              reduce using rule 119 (pen -> colors .)
    REC             reduce using rule 119 (pen -> colors .)
    TRI             reduce using rule 119 (pen -> colors .)
    POL             reduce using rule 119 (pen -> colors .)
    LS              reduce using rule 119 (pen -> colors .)
    CIR             reduce using rule 119 (pen -> colors .)
    SQ              reduce using rule 119 (pen -> colors .)
    ARC             reduce using rule 119 (pen -> colors .)
    PENC            reduce using rule 119 (pen -> colors .)
    SETC            reduce using rule 119 (pen -> colors .)
    BACO            reduce using rule 119 (pen -> colors .)
    PENW            reduce using rule 119 (pen -> colors .)
    F               reduce using rule 119 (pen -> colors .)
    B               reduce using rule 119 (pen -> colors .)
    PENP            reduce using rule 119 (pen -> colors .)
    PENU            reduce using rule 119 (pen -> colors .)
    PEND            reduce using rule 119 (pen -> colors .)
    RB              reduce using rule 119 (pen -> colors .)


state 59

    (42) rect -> REC . LP exp C exp p_fill RP SC

    LP              shift and go to state 114


state 60

    (36) p_width -> PENW . LP exp RP SC

    LP              shift and go to state 115


state 61

    (37) penwrite -> PENU . SC

    SC              shift and go to state 116


state 62

    (100) lab -> LA . LP stExp lab2 RP SC

    LP              shift and go to state 117


state 63

    (130) block2 -> rep .

    IF              reduce using rule 130 (block2 -> rep .)
    LA              reduce using rule 130 (block2 -> rep .)
    L               reduce using rule 130 (block2 -> rep .)
    ID              reduce using rule 130 (block2 -> rep .)
    RE              reduce using rule 130 (block2 -> rep .)
    REC             reduce using rule 130 (block2 -> rep .)
    TRI             reduce using rule 130 (block2 -> rep .)
    POL             reduce using rule 130 (block2 -> rep .)
    LS              reduce using rule 130 (block2 -> rep .)
    CIR             reduce using rule 130 (block2 -> rep .)
    SQ              reduce using rule 130 (block2 -> rep .)
    ARC             reduce using rule 130 (block2 -> rep .)
    PENC            reduce using rule 130 (block2 -> rep .)
    SETC            reduce using rule 130 (block2 -> rep .)
    BACO            reduce using rule 130 (block2 -> rep .)
    PENW            reduce using rule 130 (block2 -> rep .)
    F               reduce using rule 130 (block2 -> rep .)
    B               reduce using rule 130 (block2 -> rep .)
    PENP            reduce using rule 130 (block2 -> rep .)
    PENU            reduce using rule 130 (block2 -> rep .)
    PEND            reduce using rule 130 (block2 -> rep .)
    RB              reduce using rule 130 (block2 -> rep .)


state 64

    (48) poly -> POL . LP idList p_fill RP SC

    LP              shift and go to state 118


state 65

    (76) rep -> RE . rep3 block
    (77) rep3 -> . exp
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    rep3                           shift and go to state 119
    exp                            shift and go to state 120
    fact2                          shift and go to state 106
    fact                           shift and go to state 108
    fact4                          shift and go to state 109

state 66

    (126) block2 -> pen .

    IF              reduce using rule 126 (block2 -> pen .)
    LA              reduce using rule 126 (block2 -> pen .)
    L               reduce using rule 126 (block2 -> pen .)
    ID              reduce using rule 126 (block2 -> pen .)
    RE              reduce using rule 126 (block2 -> pen .)
    REC             reduce using rule 126 (block2 -> pen .)
    TRI             reduce using rule 126 (block2 -> pen .)
    POL             reduce using rule 126 (block2 -> pen .)
    LS              reduce using rule 126 (block2 -> pen .)
    CIR             reduce using rule 126 (block2 -> pen .)
    SQ              reduce using rule 126 (block2 -> pen .)
    ARC             reduce using rule 126 (block2 -> pen .)
    PENC            reduce using rule 126 (block2 -> pen .)
    SETC            reduce using rule 126 (block2 -> pen .)
    BACO            reduce using rule 126 (block2 -> pen .)
    PENW            reduce using rule 126 (block2 -> pen .)
    F               reduce using rule 126 (block2 -> pen .)
    B               reduce using rule 126 (block2 -> pen .)
    PENP            reduce using rule 126 (block2 -> pen .)
    PENU            reduce using rule 126 (block2 -> pen .)
    PEND            reduce using rule 126 (block2 -> pen .)
    RB              reduce using rule 126 (block2 -> pen .)


state 67

    (38) penwrite -> PEND . SC

    SC              shift and go to state 121


state 68

    (33) colors -> PENC . LP exp C exp C exp RP SC

    LP              shift and go to state 122


state 69

    (125) block2 -> condition .

    IF              reduce using rule 125 (block2 -> condition .)
    LA              reduce using rule 125 (block2 -> condition .)
    L               reduce using rule 125 (block2 -> condition .)
    ID              reduce using rule 125 (block2 -> condition .)
    RE              reduce using rule 125 (block2 -> condition .)
    REC             reduce using rule 125 (block2 -> condition .)
    TRI             reduce using rule 125 (block2 -> condition .)
    POL             reduce using rule 125 (block2 -> condition .)
    LS              reduce using rule 125 (block2 -> condition .)
    CIR             reduce using rule 125 (block2 -> condition .)
    SQ              reduce using rule 125 (block2 -> condition .)
    ARC             reduce using rule 125 (block2 -> condition .)
    PENC            reduce using rule 125 (block2 -> condition .)
    SETC            reduce using rule 125 (block2 -> condition .)
    BACO            reduce using rule 125 (block2 -> condition .)
    PENW            reduce using rule 125 (block2 -> condition .)
    F               reduce using rule 125 (block2 -> condition .)
    B               reduce using rule 125 (block2 -> condition .)
    PENP            reduce using rule 125 (block2 -> condition .)
    PENU            reduce using rule 125 (block2 -> condition .)
    PEND            reduce using rule 125 (block2 -> condition .)
    RB              reduce using rule 125 (block2 -> condition .)


state 70

    (112) block3 -> empty .

    RB              reduce using rule 112 (block3 -> empty .)


state 71

    (49) lstrip -> LS . LP idList RP SC

    LP              shift and go to state 123


state 72

    (45) tria -> TRI . LP exp C exp C exp p_fill RP SC

    LP              shift and go to state 124


state 73

    (40) move -> B . mueve2
    (41) mueve2 -> . LP exp C A exp RP SC

    LP              shift and go to state 125

    mueve2                         shift and go to state 126

state 74

    (39) move -> F . mueve2
    (41) mueve2 -> . LP exp C A exp RP SC

    LP              shift and go to state 125

    mueve2                         shift and go to state 127

state 75

    (127) block2 -> lab .

    IF              reduce using rule 127 (block2 -> lab .)
    LA              reduce using rule 127 (block2 -> lab .)
    L               reduce using rule 127 (block2 -> lab .)
    ID              reduce using rule 127 (block2 -> lab .)
    RE              reduce using rule 127 (block2 -> lab .)
    REC             reduce using rule 127 (block2 -> lab .)
    TRI             reduce using rule 127 (block2 -> lab .)
    POL             reduce using rule 127 (block2 -> lab .)
    LS              reduce using rule 127 (block2 -> lab .)
    CIR             reduce using rule 127 (block2 -> lab .)
    SQ              reduce using rule 127 (block2 -> lab .)
    ARC             reduce using rule 127 (block2 -> lab .)
    PENC            reduce using rule 127 (block2 -> lab .)
    SETC            reduce using rule 127 (block2 -> lab .)
    BACO            reduce using rule 127 (block2 -> lab .)
    PENW            reduce using rule 127 (block2 -> lab .)
    F               reduce using rule 127 (block2 -> lab .)
    B               reduce using rule 127 (block2 -> lab .)
    PENP            reduce using rule 127 (block2 -> lab .)
    PENU            reduce using rule 127 (block2 -> lab .)
    PEND            reduce using rule 127 (block2 -> lab .)
    RB              reduce using rule 127 (block2 -> lab .)


state 76

    (117) figure -> one_par .

    IF              reduce using rule 117 (figure -> one_par .)
    LA              reduce using rule 117 (figure -> one_par .)
    L               reduce using rule 117 (figure -> one_par .)
    ID              reduce using rule 117 (figure -> one_par .)
    RE              reduce using rule 117 (figure -> one_par .)
    REC             reduce using rule 117 (figure -> one_par .)
    TRI             reduce using rule 117 (figure -> one_par .)
    POL             reduce using rule 117 (figure -> one_par .)
    LS              reduce using rule 117 (figure -> one_par .)
    CIR             reduce using rule 117 (figure -> one_par .)
    SQ              reduce using rule 117 (figure -> one_par .)
    ARC             reduce using rule 117 (figure -> one_par .)
    PENC            reduce using rule 117 (figure -> one_par .)
    SETC            reduce using rule 117 (figure -> one_par .)
    BACO            reduce using rule 117 (figure -> one_par .)
    PENW            reduce using rule 117 (figure -> one_par .)
    F               reduce using rule 117 (figure -> one_par .)
    B               reduce using rule 117 (figure -> one_par .)
    PENP            reduce using rule 117 (figure -> one_par .)
    PENU            reduce using rule 117 (figure -> one_par .)
    PEND            reduce using rule 117 (figure -> one_par .)
    RB              reduce using rule 117 (figure -> one_par .)


state 77

    (78) WID -> ID . WID2
    (79) WID2 -> . assigment
    (80) WID2 -> . funCall
    (81) assigment -> . EQ tipeAss
    (85) funCall -> . LP func2 RP SC

    EQ              shift and go to state 130
    LP              shift and go to state 128

    funCall                        shift and go to state 131
    assigment                      shift and go to state 129
    WID2                           shift and go to state 132

state 78

    (113) figure -> rect .

    IF              reduce using rule 113 (figure -> rect .)
    LA              reduce using rule 113 (figure -> rect .)
    L               reduce using rule 113 (figure -> rect .)
    ID              reduce using rule 113 (figure -> rect .)
    RE              reduce using rule 113 (figure -> rect .)
    REC             reduce using rule 113 (figure -> rect .)
    TRI             reduce using rule 113 (figure -> rect .)
    POL             reduce using rule 113 (figure -> rect .)
    LS              reduce using rule 113 (figure -> rect .)
    CIR             reduce using rule 113 (figure -> rect .)
    SQ              reduce using rule 113 (figure -> rect .)
    ARC             reduce using rule 113 (figure -> rect .)
    PENC            reduce using rule 113 (figure -> rect .)
    SETC            reduce using rule 113 (figure -> rect .)
    BACO            reduce using rule 113 (figure -> rect .)
    PENW            reduce using rule 113 (figure -> rect .)
    F               reduce using rule 113 (figure -> rect .)
    B               reduce using rule 113 (figure -> rect .)
    PENP            reduce using rule 113 (figure -> rect .)
    PENU            reduce using rule 113 (figure -> rect .)
    PEND            reduce using rule 113 (figure -> rect .)
    RB              reduce using rule 113 (figure -> rect .)


state 79

    (105) condition -> IF . LP expresion condRP block con2

    LP              shift and go to state 133


state 80

    (129) block2 -> WID .

    IF              reduce using rule 129 (block2 -> WID .)
    LA              reduce using rule 129 (block2 -> WID .)
    L               reduce using rule 129 (block2 -> WID .)
    ID              reduce using rule 129 (block2 -> WID .)
    RE              reduce using rule 129 (block2 -> WID .)
    REC             reduce using rule 129 (block2 -> WID .)
    TRI             reduce using rule 129 (block2 -> WID .)
    POL             reduce using rule 129 (block2 -> WID .)
    LS              reduce using rule 129 (block2 -> WID .)
    CIR             reduce using rule 129 (block2 -> WID .)
    SQ              reduce using rule 129 (block2 -> WID .)
    ARC             reduce using rule 129 (block2 -> WID .)
    PENC            reduce using rule 129 (block2 -> WID .)
    SETC            reduce using rule 129 (block2 -> WID .)
    BACO            reduce using rule 129 (block2 -> WID .)
    PENW            reduce using rule 129 (block2 -> WID .)
    F               reduce using rule 129 (block2 -> WID .)
    B               reduce using rule 129 (block2 -> WID .)
    PENP            reduce using rule 129 (block2 -> WID .)
    PENU            reduce using rule 129 (block2 -> WID .)
    PEND            reduce using rule 129 (block2 -> WID .)
    RB              reduce using rule 129 (block2 -> WID .)


state 81

    (118) figure -> p_arc .

    IF              reduce using rule 118 (figure -> p_arc .)
    LA              reduce using rule 118 (figure -> p_arc .)
    L               reduce using rule 118 (figure -> p_arc .)
    ID              reduce using rule 118 (figure -> p_arc .)
    RE              reduce using rule 118 (figure -> p_arc .)
    REC             reduce using rule 118 (figure -> p_arc .)
    TRI             reduce using rule 118 (figure -> p_arc .)
    POL             reduce using rule 118 (figure -> p_arc .)
    LS              reduce using rule 118 (figure -> p_arc .)
    CIR             reduce using rule 118 (figure -> p_arc .)
    SQ              reduce using rule 118 (figure -> p_arc .)
    ARC             reduce using rule 118 (figure -> p_arc .)
    PENC            reduce using rule 118 (figure -> p_arc .)
    SETC            reduce using rule 118 (figure -> p_arc .)
    BACO            reduce using rule 118 (figure -> p_arc .)
    PENW            reduce using rule 118 (figure -> p_arc .)
    F               reduce using rule 118 (figure -> p_arc .)
    B               reduce using rule 118 (figure -> p_arc .)
    PENP            reduce using rule 118 (figure -> p_arc .)
    PENU            reduce using rule 118 (figure -> p_arc .)
    PEND            reduce using rule 118 (figure -> p_arc .)
    RB              reduce using rule 118 (figure -> p_arc .)


state 82

    (46) one_par -> CIR . LP exp p_fill RP SC

    LP              shift and go to state 134


state 83

    (47) one_par -> SQ . LP exp p_fill RP SC

    LP              shift and go to state 135


state 84

    (34) colors -> SETC . LP exp C exp C exp RP SC

    LP              shift and go to state 136


state 85

    (128) block2 -> list .

    IF              reduce using rule 128 (block2 -> list .)
    LA              reduce using rule 128 (block2 -> list .)
    L               reduce using rule 128 (block2 -> list .)
    ID              reduce using rule 128 (block2 -> list .)
    RE              reduce using rule 128 (block2 -> list .)
    REC             reduce using rule 128 (block2 -> list .)
    TRI             reduce using rule 128 (block2 -> list .)
    POL             reduce using rule 128 (block2 -> list .)
    LS              reduce using rule 128 (block2 -> list .)
    CIR             reduce using rule 128 (block2 -> list .)
    SQ              reduce using rule 128 (block2 -> list .)
    ARC             reduce using rule 128 (block2 -> list .)
    PENC            reduce using rule 128 (block2 -> list .)
    SETC            reduce using rule 128 (block2 -> list .)
    BACO            reduce using rule 128 (block2 -> list .)
    PENW            reduce using rule 128 (block2 -> list .)
    F               reduce using rule 128 (block2 -> list .)
    B               reduce using rule 128 (block2 -> list .)
    PENP            reduce using rule 128 (block2 -> list .)
    PENU            reduce using rule 128 (block2 -> list .)
    PEND            reduce using rule 128 (block2 -> list .)
    RB              reduce using rule 128 (block2 -> list .)


state 86

    (51) p_arc -> ARC . LP exp RP SC

    LP              shift and go to state 137


state 87

    (122) pen -> position .

    IF              reduce using rule 122 (pen -> position .)
    LA              reduce using rule 122 (pen -> position .)
    L               reduce using rule 122 (pen -> position .)
    ID              reduce using rule 122 (pen -> position .)
    RE              reduce using rule 122 (pen -> position .)
    REC             reduce using rule 122 (pen -> position .)
    TRI             reduce using rule 122 (pen -> position .)
    POL             reduce using rule 122 (pen -> position .)
    LS              reduce using rule 122 (pen -> position .)
    CIR             reduce using rule 122 (pen -> position .)
    SQ              reduce using rule 122 (pen -> position .)
    ARC             reduce using rule 122 (pen -> position .)
    PENC            reduce using rule 122 (pen -> position .)
    SETC            reduce using rule 122 (pen -> position .)
    BACO            reduce using rule 122 (pen -> position .)
    PENW            reduce using rule 122 (pen -> position .)
    F               reduce using rule 122 (pen -> position .)
    B               reduce using rule 122 (pen -> position .)
    PENP            reduce using rule 122 (pen -> position .)
    PENU            reduce using rule 122 (pen -> position .)
    PEND            reduce using rule 122 (pen -> position .)
    RB              reduce using rule 122 (pen -> position .)


state 88

    (120) pen -> p_width .

    IF              reduce using rule 120 (pen -> p_width .)
    LA              reduce using rule 120 (pen -> p_width .)
    L               reduce using rule 120 (pen -> p_width .)
    ID              reduce using rule 120 (pen -> p_width .)
    RE              reduce using rule 120 (pen -> p_width .)
    REC             reduce using rule 120 (pen -> p_width .)
    TRI             reduce using rule 120 (pen -> p_width .)
    POL             reduce using rule 120 (pen -> p_width .)
    LS              reduce using rule 120 (pen -> p_width .)
    CIR             reduce using rule 120 (pen -> p_width .)
    SQ              reduce using rule 120 (pen -> p_width .)
    ARC             reduce using rule 120 (pen -> p_width .)
    PENC            reduce using rule 120 (pen -> p_width .)
    SETC            reduce using rule 120 (pen -> p_width .)
    BACO            reduce using rule 120 (pen -> p_width .)
    PENW            reduce using rule 120 (pen -> p_width .)
    F               reduce using rule 120 (pen -> p_width .)
    B               reduce using rule 120 (pen -> p_width .)
    PENP            reduce using rule 120 (pen -> p_width .)
    PENU            reduce using rule 120 (pen -> p_width .)
    PEND            reduce using rule 120 (pen -> p_width .)
    RB              reduce using rule 120 (pen -> p_width .)


state 89

    (123) pen -> penwrite .

    IF              reduce using rule 123 (pen -> penwrite .)
    LA              reduce using rule 123 (pen -> penwrite .)
    L               reduce using rule 123 (pen -> penwrite .)
    ID              reduce using rule 123 (pen -> penwrite .)
    RE              reduce using rule 123 (pen -> penwrite .)
    REC             reduce using rule 123 (pen -> penwrite .)
    TRI             reduce using rule 123 (pen -> penwrite .)
    POL             reduce using rule 123 (pen -> penwrite .)
    LS              reduce using rule 123 (pen -> penwrite .)
    CIR             reduce using rule 123 (pen -> penwrite .)
    SQ              reduce using rule 123 (pen -> penwrite .)
    ARC             reduce using rule 123 (pen -> penwrite .)
    PENC            reduce using rule 123 (pen -> penwrite .)
    SETC            reduce using rule 123 (pen -> penwrite .)
    BACO            reduce using rule 123 (pen -> penwrite .)
    PENW            reduce using rule 123 (pen -> penwrite .)
    F               reduce using rule 123 (pen -> penwrite .)
    B               reduce using rule 123 (pen -> penwrite .)
    PENP            reduce using rule 123 (pen -> penwrite .)
    PENU            reduce using rule 123 (pen -> penwrite .)
    PEND            reduce using rule 123 (pen -> penwrite .)
    RB              reduce using rule 123 (pen -> penwrite .)


state 90

    (12) fun3 -> fun5 fun4 .

    RP              reduce using rule 12 (fun3 -> fun5 fun4 .)


state 91

    (14) fun4 -> C . fun5 fun4
    (16) fun5 -> . type ID
    (28) type -> . INT
    (29) type -> . FLOAT

    INT             shift and go to state 21
    FLOAT           shift and go to state 22

    fun5                           shift and go to state 138
    type                           shift and go to state 41

state 92

    (15) fun4 -> empty .

    RP              reduce using rule 15 (fun4 -> empty .)


state 93

    (11) fun2 -> FUN ID LP fun3 RP .

    DP              reduce using rule 11 (fun2 -> FUN ID LP fun3 RP .)


state 94

    (16) fun5 -> type ID .

    C               reduce using rule 16 (fun5 -> type ID .)
    RP              reduce using rule 16 (fun5 -> type ID .)


state 95

    (91) list -> L type ID . prelistAss
    (92) prelistAss -> . EQ listAss
    (93) prelistAss -> . SC

    EQ              shift and go to state 141
    SC              shift and go to state 140

    prelistAss                     shift and go to state 139

state 96

    (19) var2 -> type var3 SC var2 .

    L               reduce using rule 19 (var2 -> type var3 SC var2 .)
    FUN             reduce using rule 19 (var2 -> type var3 SC var2 .)
    MAIN            reduce using rule 19 (var2 -> type var3 SC var2 .)
    LB              reduce using rule 19 (var2 -> type var3 SC var2 .)


state 97

    (21) var3 -> ID var4 var33 .

    SC              reduce using rule 21 (var3 -> ID var4 var33 .)


state 98

    (22) var33 -> C . ID var4 var33

    ID              shift and go to state 142


state 99

    (23) var33 -> empty .

    SC              reduce using rule 23 (var33 -> empty .)


state 100

    (59) exp -> term . exp2
    (60) exp2 -> . exp3 exp
    (61) exp2 -> . empty
    (62) exp3 -> . ADD
    (63) exp3 -> . SUB
    (131) empty -> .

  ! shift/reduce conflict for ADD resolved as shift
    ADD             shift and go to state 146
    SUB             shift and go to state 143
    C               reduce using rule 131 (empty -> .)
    SC              reduce using rule 131 (empty -> .)
    LB              reduce using rule 131 (empty -> .)
    RP              reduce using rule 131 (empty -> .)
    LT              reduce using rule 131 (empty -> .)
    MT              reduce using rule 131 (empty -> .)
    D               reduce using rule 131 (empty -> .)
    SEQ             reduce using rule 131 (empty -> .)

  ! ADD             [ reduce using rule 131 (empty -> .) ]

    exp3                           shift and go to state 144
    exp2                           shift and go to state 145
    empty                          shift and go to state 147

state 101

    (72) fact4 -> valExp .

    M               reduce using rule 72 (fact4 -> valExp .)
    DIV             reduce using rule 72 (fact4 -> valExp .)
    ADD             reduce using rule 72 (fact4 -> valExp .)
    SUB             reduce using rule 72 (fact4 -> valExp .)
    C               reduce using rule 72 (fact4 -> valExp .)
    RP              reduce using rule 72 (fact4 -> valExp .)
    SC              reduce using rule 72 (fact4 -> valExp .)
    LT              reduce using rule 72 (fact4 -> valExp .)
    MT              reduce using rule 72 (fact4 -> valExp .)
    D               reduce using rule 72 (fact4 -> valExp .)
    SEQ             reduce using rule 72 (fact4 -> valExp .)
    LB              reduce using rule 72 (fact4 -> valExp .)


state 102

    (71) fact2 -> LP .

    LP              reduce using rule 71 (fact2 -> LP .)
    ID              reduce using rule 71 (fact2 -> LP .)
    VALI            reduce using rule 71 (fact2 -> LP .)
    VALF            reduce using rule 71 (fact2 -> LP .)


state 103

    (74) valExp -> VALI .

    M               reduce using rule 74 (valExp -> VALI .)
    DIV             reduce using rule 74 (valExp -> VALI .)
    ADD             reduce using rule 74 (valExp -> VALI .)
    SUB             reduce using rule 74 (valExp -> VALI .)
    RP              reduce using rule 74 (valExp -> VALI .)
    SC              reduce using rule 74 (valExp -> VALI .)
    C               reduce using rule 74 (valExp -> VALI .)
    LB              reduce using rule 74 (valExp -> VALI .)
    LT              reduce using rule 74 (valExp -> VALI .)
    MT              reduce using rule 74 (valExp -> VALI .)
    D               reduce using rule 74 (valExp -> VALI .)
    SEQ             reduce using rule 74 (valExp -> VALI .)


state 104

    (75) valExp -> VALF .

    M               reduce using rule 75 (valExp -> VALF .)
    DIV             reduce using rule 75 (valExp -> VALF .)
    ADD             reduce using rule 75 (valExp -> VALF .)
    SUB             reduce using rule 75 (valExp -> VALF .)
    RP              reduce using rule 75 (valExp -> VALF .)
    SC              reduce using rule 75 (valExp -> VALF .)
    C               reduce using rule 75 (valExp -> VALF .)
    LB              reduce using rule 75 (valExp -> VALF .)
    LT              reduce using rule 75 (valExp -> VALF .)
    MT              reduce using rule 75 (valExp -> VALF .)
    D               reduce using rule 75 (valExp -> VALF .)
    SEQ             reduce using rule 75 (valExp -> VALF .)


state 105

    (24) var4 -> EQ exp .

    C               reduce using rule 24 (var4 -> EQ exp .)
    SC              reduce using rule 24 (var4 -> EQ exp .)


state 106

    (69) fact -> fact2 . exp RP
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    exp                            shift and go to state 148
    fact2                          shift and go to state 106
    fact                           shift and go to state 108
    fact4                          shift and go to state 109

state 107

    (73) fact4 -> ID .

    M               reduce using rule 73 (fact4 -> ID .)
    DIV             reduce using rule 73 (fact4 -> ID .)
    ADD             reduce using rule 73 (fact4 -> ID .)
    SUB             reduce using rule 73 (fact4 -> ID .)
    C               reduce using rule 73 (fact4 -> ID .)
    RP              reduce using rule 73 (fact4 -> ID .)
    SC              reduce using rule 73 (fact4 -> ID .)
    LT              reduce using rule 73 (fact4 -> ID .)
    MT              reduce using rule 73 (fact4 -> ID .)
    D               reduce using rule 73 (fact4 -> ID .)
    SEQ             reduce using rule 73 (fact4 -> ID .)
    LB              reduce using rule 73 (fact4 -> ID .)


state 108

    (64) term -> fact . term2
    (65) term2 -> . term3 term
    (66) term2 -> . empty
    (67) term3 -> . M
    (68) term3 -> . DIV
    (131) empty -> .

    M               shift and go to state 151
    DIV             shift and go to state 152
    ADD             reduce using rule 131 (empty -> .)
    SUB             reduce using rule 131 (empty -> .)
    C               reduce using rule 131 (empty -> .)
    SC              reduce using rule 131 (empty -> .)
    LB              reduce using rule 131 (empty -> .)
    RP              reduce using rule 131 (empty -> .)
    LT              reduce using rule 131 (empty -> .)
    MT              reduce using rule 131 (empty -> .)
    D               reduce using rule 131 (empty -> .)
    SEQ             reduce using rule 131 (empty -> .)

    empty                          shift and go to state 153
    term3                          shift and go to state 149
    term2                          shift and go to state 150

state 109

    (70) fact -> fact4 .

    M               reduce using rule 70 (fact -> fact4 .)
    DIV             reduce using rule 70 (fact -> fact4 .)
    ADD             reduce using rule 70 (fact -> fact4 .)
    SUB             reduce using rule 70 (fact -> fact4 .)
    RP              reduce using rule 70 (fact -> fact4 .)
    C               reduce using rule 70 (fact -> fact4 .)
    SC              reduce using rule 70 (fact -> fact4 .)
    LB              reduce using rule 70 (fact -> fact4 .)
    LT              reduce using rule 70 (fact -> fact4 .)
    MT              reduce using rule 70 (fact -> fact4 .)
    D               reduce using rule 70 (fact -> fact4 .)
    SEQ             reduce using rule 70 (fact -> fact4 .)


state 110

    (32) position -> PENP LP . exp C exp RP SC
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    exp                            shift and go to state 154
    fact2                          shift and go to state 106
    fact                           shift and go to state 108
    fact4                          shift and go to state 109

state 111

    (110) block -> LB block3 RB .

    IF              reduce using rule 110 (block -> LB block3 RB .)
    LA              reduce using rule 110 (block -> LB block3 RB .)
    L               reduce using rule 110 (block -> LB block3 RB .)
    ID              reduce using rule 110 (block -> LB block3 RB .)
    RE              reduce using rule 110 (block -> LB block3 RB .)
    REC             reduce using rule 110 (block -> LB block3 RB .)
    TRI             reduce using rule 110 (block -> LB block3 RB .)
    POL             reduce using rule 110 (block -> LB block3 RB .)
    LS              reduce using rule 110 (block -> LB block3 RB .)
    CIR             reduce using rule 110 (block -> LB block3 RB .)
    SQ              reduce using rule 110 (block -> LB block3 RB .)
    ARC             reduce using rule 110 (block -> LB block3 RB .)
    PENC            reduce using rule 110 (block -> LB block3 RB .)
    SETC            reduce using rule 110 (block -> LB block3 RB .)
    BACO            reduce using rule 110 (block -> LB block3 RB .)
    PENW            reduce using rule 110 (block -> LB block3 RB .)
    F               reduce using rule 110 (block -> LB block3 RB .)
    B               reduce using rule 110 (block -> LB block3 RB .)
    PENP            reduce using rule 110 (block -> LB block3 RB .)
    PENU            reduce using rule 110 (block -> LB block3 RB .)
    PEND            reduce using rule 110 (block -> LB block3 RB .)
    RB              reduce using rule 110 (block -> LB block3 RB .)
    ELSE            reduce using rule 110 (block -> LB block3 RB .)
    FUN             reduce using rule 110 (block -> LB block3 RB .)
    MAIN            reduce using rule 110 (block -> LB block3 RB .)
    $end            reduce using rule 110 (block -> LB block3 RB .)


state 112

    (111) block3 -> block2 block3 .

    RB              reduce using rule 111 (block3 -> block2 block3 .)


state 113

    (35) colors -> BACO LP . exp C exp C exp RP SC
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    exp                            shift and go to state 155
    fact2                          shift and go to state 106
    fact                           shift and go to state 108
    fact4                          shift and go to state 109

state 114

    (42) rect -> REC LP . exp C exp p_fill RP SC
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    exp                            shift and go to state 156
    fact2                          shift and go to state 106
    fact4                          shift and go to state 109
    fact                           shift and go to state 108

state 115

    (36) p_width -> PENW LP . exp RP SC
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    exp                            shift and go to state 157
    fact2                          shift and go to state 106
    fact                           shift and go to state 108
    fact4                          shift and go to state 109

state 116

    (37) penwrite -> PENU SC .

    IF              reduce using rule 37 (penwrite -> PENU SC .)
    LA              reduce using rule 37 (penwrite -> PENU SC .)
    L               reduce using rule 37 (penwrite -> PENU SC .)
    ID              reduce using rule 37 (penwrite -> PENU SC .)
    RE              reduce using rule 37 (penwrite -> PENU SC .)
    REC             reduce using rule 37 (penwrite -> PENU SC .)
    TRI             reduce using rule 37 (penwrite -> PENU SC .)
    POL             reduce using rule 37 (penwrite -> PENU SC .)
    LS              reduce using rule 37 (penwrite -> PENU SC .)
    CIR             reduce using rule 37 (penwrite -> PENU SC .)
    SQ              reduce using rule 37 (penwrite -> PENU SC .)
    ARC             reduce using rule 37 (penwrite -> PENU SC .)
    PENC            reduce using rule 37 (penwrite -> PENU SC .)
    SETC            reduce using rule 37 (penwrite -> PENU SC .)
    BACO            reduce using rule 37 (penwrite -> PENU SC .)
    PENW            reduce using rule 37 (penwrite -> PENU SC .)
    F               reduce using rule 37 (penwrite -> PENU SC .)
    B               reduce using rule 37 (penwrite -> PENU SC .)
    PENP            reduce using rule 37 (penwrite -> PENU SC .)
    PENU            reduce using rule 37 (penwrite -> PENU SC .)
    PEND            reduce using rule 37 (penwrite -> PENU SC .)
    RB              reduce using rule 37 (penwrite -> PENU SC .)


state 117

    (100) lab -> LA LP . stExp lab2 RP SC
    (103) stExp -> . STR
    (104) stExp -> . exp
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    STR             shift and go to state 158
    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    stExp                          shift and go to state 159
    exp                            shift and go to state 160
    fact2                          shift and go to state 106
    fact                           shift and go to state 108
    fact4                          shift and go to state 109

state 118

    (48) poly -> POL LP . idList p_fill RP SC
    (50) idList -> . ID

    ID              shift and go to state 162

    idList                         shift and go to state 161

state 119

    (76) rep -> RE rep3 . block
    (110) block -> . LB block3 RB

    LB              shift and go to state 36

    block                          shift and go to state 163

state 120

    (77) rep3 -> exp .

    LB              reduce using rule 77 (rep3 -> exp .)


state 121

    (38) penwrite -> PEND SC .

    IF              reduce using rule 38 (penwrite -> PEND SC .)
    LA              reduce using rule 38 (penwrite -> PEND SC .)
    L               reduce using rule 38 (penwrite -> PEND SC .)
    ID              reduce using rule 38 (penwrite -> PEND SC .)
    RE              reduce using rule 38 (penwrite -> PEND SC .)
    REC             reduce using rule 38 (penwrite -> PEND SC .)
    TRI             reduce using rule 38 (penwrite -> PEND SC .)
    POL             reduce using rule 38 (penwrite -> PEND SC .)
    LS              reduce using rule 38 (penwrite -> PEND SC .)
    CIR             reduce using rule 38 (penwrite -> PEND SC .)
    SQ              reduce using rule 38 (penwrite -> PEND SC .)
    ARC             reduce using rule 38 (penwrite -> PEND SC .)
    PENC            reduce using rule 38 (penwrite -> PEND SC .)
    SETC            reduce using rule 38 (penwrite -> PEND SC .)
    BACO            reduce using rule 38 (penwrite -> PEND SC .)
    PENW            reduce using rule 38 (penwrite -> PEND SC .)
    F               reduce using rule 38 (penwrite -> PEND SC .)
    B               reduce using rule 38 (penwrite -> PEND SC .)
    PENP            reduce using rule 38 (penwrite -> PEND SC .)
    PENU            reduce using rule 38 (penwrite -> PEND SC .)
    PEND            reduce using rule 38 (penwrite -> PEND SC .)
    RB              reduce using rule 38 (penwrite -> PEND SC .)


state 122

    (33) colors -> PENC LP . exp C exp C exp RP SC
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    exp                            shift and go to state 164
    fact2                          shift and go to state 106
    fact                           shift and go to state 108
    fact4                          shift and go to state 109

state 123

    (49) lstrip -> LS LP . idList RP SC
    (50) idList -> . ID

    ID              shift and go to state 162

    idList                         shift and go to state 165

state 124

    (45) tria -> TRI LP . exp C exp C exp p_fill RP SC
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    exp                            shift and go to state 166
    fact2                          shift and go to state 106
    fact4                          shift and go to state 109
    fact                           shift and go to state 108

state 125

    (41) mueve2 -> LP . exp C A exp RP SC
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    exp                            shift and go to state 167
    fact2                          shift and go to state 106
    fact                           shift and go to state 108
    fact4                          shift and go to state 109

state 126

    (40) move -> B mueve2 .

    IF              reduce using rule 40 (move -> B mueve2 .)
    LA              reduce using rule 40 (move -> B mueve2 .)
    L               reduce using rule 40 (move -> B mueve2 .)
    ID              reduce using rule 40 (move -> B mueve2 .)
    RE              reduce using rule 40 (move -> B mueve2 .)
    REC             reduce using rule 40 (move -> B mueve2 .)
    TRI             reduce using rule 40 (move -> B mueve2 .)
    POL             reduce using rule 40 (move -> B mueve2 .)
    LS              reduce using rule 40 (move -> B mueve2 .)
    CIR             reduce using rule 40 (move -> B mueve2 .)
    SQ              reduce using rule 40 (move -> B mueve2 .)
    ARC             reduce using rule 40 (move -> B mueve2 .)
    PENC            reduce using rule 40 (move -> B mueve2 .)
    SETC            reduce using rule 40 (move -> B mueve2 .)
    BACO            reduce using rule 40 (move -> B mueve2 .)
    PENW            reduce using rule 40 (move -> B mueve2 .)
    F               reduce using rule 40 (move -> B mueve2 .)
    B               reduce using rule 40 (move -> B mueve2 .)
    PENP            reduce using rule 40 (move -> B mueve2 .)
    PENU            reduce using rule 40 (move -> B mueve2 .)
    PEND            reduce using rule 40 (move -> B mueve2 .)
    RB              reduce using rule 40 (move -> B mueve2 .)


state 127

    (39) move -> F mueve2 .

    IF              reduce using rule 39 (move -> F mueve2 .)
    LA              reduce using rule 39 (move -> F mueve2 .)
    L               reduce using rule 39 (move -> F mueve2 .)
    ID              reduce using rule 39 (move -> F mueve2 .)
    RE              reduce using rule 39 (move -> F mueve2 .)
    REC             reduce using rule 39 (move -> F mueve2 .)
    TRI             reduce using rule 39 (move -> F mueve2 .)
    POL             reduce using rule 39 (move -> F mueve2 .)
    LS              reduce using rule 39 (move -> F mueve2 .)
    CIR             reduce using rule 39 (move -> F mueve2 .)
    SQ              reduce using rule 39 (move -> F mueve2 .)
    ARC             reduce using rule 39 (move -> F mueve2 .)
    PENC            reduce using rule 39 (move -> F mueve2 .)
    SETC            reduce using rule 39 (move -> F mueve2 .)
    BACO            reduce using rule 39 (move -> F mueve2 .)
    PENW            reduce using rule 39 (move -> F mueve2 .)
    F               reduce using rule 39 (move -> F mueve2 .)
    B               reduce using rule 39 (move -> F mueve2 .)
    PENP            reduce using rule 39 (move -> F mueve2 .)
    PENU            reduce using rule 39 (move -> F mueve2 .)
    PEND            reduce using rule 39 (move -> F mueve2 .)
    RB              reduce using rule 39 (move -> F mueve2 .)


state 128

    (85) funCall -> LP . func2 RP SC
    (86) func2 -> . func4 func3
    (87) func2 -> . empty
    (90) func4 -> . exp
    (131) empty -> .
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    RP              reduce using rule 131 (empty -> .)
    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    func2                          shift and go to state 168
    term                           shift and go to state 100
    valExp                         shift and go to state 101
    func4                          shift and go to state 170
    fact                           shift and go to state 108
    exp                            shift and go to state 169
    fact2                          shift and go to state 106
    empty                          shift and go to state 171
    fact4                          shift and go to state 109

state 129

    (79) WID2 -> assigment .

    IF              reduce using rule 79 (WID2 -> assigment .)
    LA              reduce using rule 79 (WID2 -> assigment .)
    L               reduce using rule 79 (WID2 -> assigment .)
    ID              reduce using rule 79 (WID2 -> assigment .)
    RE              reduce using rule 79 (WID2 -> assigment .)
    REC             reduce using rule 79 (WID2 -> assigment .)
    TRI             reduce using rule 79 (WID2 -> assigment .)
    POL             reduce using rule 79 (WID2 -> assigment .)
    LS              reduce using rule 79 (WID2 -> assigment .)
    CIR             reduce using rule 79 (WID2 -> assigment .)
    SQ              reduce using rule 79 (WID2 -> assigment .)
    ARC             reduce using rule 79 (WID2 -> assigment .)
    PENC            reduce using rule 79 (WID2 -> assigment .)
    SETC            reduce using rule 79 (WID2 -> assigment .)
    BACO            reduce using rule 79 (WID2 -> assigment .)
    PENW            reduce using rule 79 (WID2 -> assigment .)
    F               reduce using rule 79 (WID2 -> assigment .)
    B               reduce using rule 79 (WID2 -> assigment .)
    PENP            reduce using rule 79 (WID2 -> assigment .)
    PENU            reduce using rule 79 (WID2 -> assigment .)
    PEND            reduce using rule 79 (WID2 -> assigment .)
    RB              reduce using rule 79 (WID2 -> assigment .)


state 130

    (81) assigment -> EQ . tipeAss
    (82) tipeAss -> . varAss
    (83) tipeAss -> . listAss
    (84) varAss -> . exp SC
    (94) listAss -> . LB lista3 RB SC
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LB              shift and go to state 172
    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    listAss                        shift and go to state 173
    tipeAss                        shift and go to state 176
    fact                           shift and go to state 108
    exp                            shift and go to state 175
    fact2                          shift and go to state 106
    fact4                          shift and go to state 109
    varAss                         shift and go to state 174

state 131

    (80) WID2 -> funCall .

    IF              reduce using rule 80 (WID2 -> funCall .)
    LA              reduce using rule 80 (WID2 -> funCall .)
    L               reduce using rule 80 (WID2 -> funCall .)
    ID              reduce using rule 80 (WID2 -> funCall .)
    RE              reduce using rule 80 (WID2 -> funCall .)
    REC             reduce using rule 80 (WID2 -> funCall .)
    TRI             reduce using rule 80 (WID2 -> funCall .)
    POL             reduce using rule 80 (WID2 -> funCall .)
    LS              reduce using rule 80 (WID2 -> funCall .)
    CIR             reduce using rule 80 (WID2 -> funCall .)
    SQ              reduce using rule 80 (WID2 -> funCall .)
    ARC             reduce using rule 80 (WID2 -> funCall .)
    PENC            reduce using rule 80 (WID2 -> funCall .)
    SETC            reduce using rule 80 (WID2 -> funCall .)
    BACO            reduce using rule 80 (WID2 -> funCall .)
    PENW            reduce using rule 80 (WID2 -> funCall .)
    F               reduce using rule 80 (WID2 -> funCall .)
    B               reduce using rule 80 (WID2 -> funCall .)
    PENP            reduce using rule 80 (WID2 -> funCall .)
    PENU            reduce using rule 80 (WID2 -> funCall .)
    PEND            reduce using rule 80 (WID2 -> funCall .)
    RB              reduce using rule 80 (WID2 -> funCall .)


state 132

    (78) WID -> ID WID2 .

    IF              reduce using rule 78 (WID -> ID WID2 .)
    LA              reduce using rule 78 (WID -> ID WID2 .)
    L               reduce using rule 78 (WID -> ID WID2 .)
    ID              reduce using rule 78 (WID -> ID WID2 .)
    RE              reduce using rule 78 (WID -> ID WID2 .)
    REC             reduce using rule 78 (WID -> ID WID2 .)
    TRI             reduce using rule 78 (WID -> ID WID2 .)
    POL             reduce using rule 78 (WID -> ID WID2 .)
    LS              reduce using rule 78 (WID -> ID WID2 .)
    CIR             reduce using rule 78 (WID -> ID WID2 .)
    SQ              reduce using rule 78 (WID -> ID WID2 .)
    ARC             reduce using rule 78 (WID -> ID WID2 .)
    PENC            reduce using rule 78 (WID -> ID WID2 .)
    SETC            reduce using rule 78 (WID -> ID WID2 .)
    BACO            reduce using rule 78 (WID -> ID WID2 .)
    PENW            reduce using rule 78 (WID -> ID WID2 .)
    F               reduce using rule 78 (WID -> ID WID2 .)
    B               reduce using rule 78 (WID -> ID WID2 .)
    PENP            reduce using rule 78 (WID -> ID WID2 .)
    PENU            reduce using rule 78 (WID -> ID WID2 .)
    PEND            reduce using rule 78 (WID -> ID WID2 .)
    RB              reduce using rule 78 (WID -> ID WID2 .)


state 133

    (105) condition -> IF LP . expresion condRP block con2
    (52) expresion -> . exp ex2
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    expresion                      shift and go to state 177
    valExp                         shift and go to state 101
    term                           shift and go to state 100
    fact                           shift and go to state 108
    exp                            shift and go to state 178
    fact2                          shift and go to state 106
    fact4                          shift and go to state 109

state 134

    (46) one_par -> CIR LP . exp p_fill RP SC
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    exp                            shift and go to state 179
    fact2                          shift and go to state 106
    fact4                          shift and go to state 109
    fact                           shift and go to state 108

state 135

    (47) one_par -> SQ LP . exp p_fill RP SC
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    exp                            shift and go to state 180
    fact2                          shift and go to state 106
    fact4                          shift and go to state 109
    fact                           shift and go to state 108

state 136

    (34) colors -> SETC LP . exp C exp C exp RP SC
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    exp                            shift and go to state 181
    fact2                          shift and go to state 106
    fact                           shift and go to state 108
    fact4                          shift and go to state 109

state 137

    (51) p_arc -> ARC LP . exp RP SC
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    exp                            shift and go to state 182
    fact2                          shift and go to state 106
    fact                           shift and go to state 108
    fact4                          shift and go to state 109

state 138

    (14) fun4 -> C fun5 . fun4
    (14) fun4 -> . C fun5 fun4
    (15) fun4 -> . empty
    (131) empty -> .

    C               shift and go to state 91
    RP              reduce using rule 131 (empty -> .)

    fun4                           shift and go to state 183
    empty                          shift and go to state 92

state 139

    (91) list -> L type ID prelistAss .

    IF              reduce using rule 91 (list -> L type ID prelistAss .)
    LA              reduce using rule 91 (list -> L type ID prelistAss .)
    L               reduce using rule 91 (list -> L type ID prelistAss .)
    ID              reduce using rule 91 (list -> L type ID prelistAss .)
    RE              reduce using rule 91 (list -> L type ID prelistAss .)
    REC             reduce using rule 91 (list -> L type ID prelistAss .)
    TRI             reduce using rule 91 (list -> L type ID prelistAss .)
    POL             reduce using rule 91 (list -> L type ID prelistAss .)
    LS              reduce using rule 91 (list -> L type ID prelistAss .)
    CIR             reduce using rule 91 (list -> L type ID prelistAss .)
    SQ              reduce using rule 91 (list -> L type ID prelistAss .)
    ARC             reduce using rule 91 (list -> L type ID prelistAss .)
    PENC            reduce using rule 91 (list -> L type ID prelistAss .)
    SETC            reduce using rule 91 (list -> L type ID prelistAss .)
    BACO            reduce using rule 91 (list -> L type ID prelistAss .)
    PENW            reduce using rule 91 (list -> L type ID prelistAss .)
    F               reduce using rule 91 (list -> L type ID prelistAss .)
    B               reduce using rule 91 (list -> L type ID prelistAss .)
    PENP            reduce using rule 91 (list -> L type ID prelistAss .)
    PENU            reduce using rule 91 (list -> L type ID prelistAss .)
    PEND            reduce using rule 91 (list -> L type ID prelistAss .)
    RB              reduce using rule 91 (list -> L type ID prelistAss .)
    FUN             reduce using rule 91 (list -> L type ID prelistAss .)
    MAIN            reduce using rule 91 (list -> L type ID prelistAss .)
    LB              reduce using rule 91 (list -> L type ID prelistAss .)


state 140

    (93) prelistAss -> SC .

    L               reduce using rule 93 (prelistAss -> SC .)
    FUN             reduce using rule 93 (prelistAss -> SC .)
    MAIN            reduce using rule 93 (prelistAss -> SC .)
    LB              reduce using rule 93 (prelistAss -> SC .)
    IF              reduce using rule 93 (prelistAss -> SC .)
    LA              reduce using rule 93 (prelistAss -> SC .)
    ID              reduce using rule 93 (prelistAss -> SC .)
    RE              reduce using rule 93 (prelistAss -> SC .)
    REC             reduce using rule 93 (prelistAss -> SC .)
    TRI             reduce using rule 93 (prelistAss -> SC .)
    POL             reduce using rule 93 (prelistAss -> SC .)
    LS              reduce using rule 93 (prelistAss -> SC .)
    CIR             reduce using rule 93 (prelistAss -> SC .)
    SQ              reduce using rule 93 (prelistAss -> SC .)
    ARC             reduce using rule 93 (prelistAss -> SC .)
    PENC            reduce using rule 93 (prelistAss -> SC .)
    SETC            reduce using rule 93 (prelistAss -> SC .)
    BACO            reduce using rule 93 (prelistAss -> SC .)
    PENW            reduce using rule 93 (prelistAss -> SC .)
    F               reduce using rule 93 (prelistAss -> SC .)
    B               reduce using rule 93 (prelistAss -> SC .)
    PENP            reduce using rule 93 (prelistAss -> SC .)
    PENU            reduce using rule 93 (prelistAss -> SC .)
    PEND            reduce using rule 93 (prelistAss -> SC .)
    RB              reduce using rule 93 (prelistAss -> SC .)


state 141

    (92) prelistAss -> EQ . listAss
    (94) listAss -> . LB lista3 RB SC

    LB              shift and go to state 172

    listAss                        shift and go to state 184

state 142

    (22) var33 -> C ID . var4 var33
    (24) var4 -> . EQ exp
    (25) var4 -> . empty
    (131) empty -> .

    EQ              shift and go to state 47
    C               reduce using rule 131 (empty -> .)
    SC              reduce using rule 131 (empty -> .)

    var4                           shift and go to state 185
    empty                          shift and go to state 48

state 143

    (63) exp3 -> SUB .

    LP              reduce using rule 63 (exp3 -> SUB .)
    ID              reduce using rule 63 (exp3 -> SUB .)
    VALI            reduce using rule 63 (exp3 -> SUB .)
    VALF            reduce using rule 63 (exp3 -> SUB .)


state 144

    (60) exp2 -> exp3 . exp
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    exp                            shift and go to state 186
    fact2                          shift and go to state 106
    fact                           shift and go to state 108
    fact4                          shift and go to state 109

state 145

    (59) exp -> term exp2 .

    RP              reduce using rule 59 (exp -> term exp2 .)
    LT              reduce using rule 59 (exp -> term exp2 .)
    MT              reduce using rule 59 (exp -> term exp2 .)
    D               reduce using rule 59 (exp -> term exp2 .)
    SEQ             reduce using rule 59 (exp -> term exp2 .)
    C               reduce using rule 59 (exp -> term exp2 .)
    SC              reduce using rule 59 (exp -> term exp2 .)
    ADD             reduce using rule 59 (exp -> term exp2 .)
    LB              reduce using rule 59 (exp -> term exp2 .)


state 146

    (62) exp3 -> ADD .

    LP              reduce using rule 62 (exp3 -> ADD .)
    ID              reduce using rule 62 (exp3 -> ADD .)
    VALI            reduce using rule 62 (exp3 -> ADD .)
    VALF            reduce using rule 62 (exp3 -> ADD .)


state 147

    (61) exp2 -> empty .

    C               reduce using rule 61 (exp2 -> empty .)
    SC              reduce using rule 61 (exp2 -> empty .)
    LB              reduce using rule 61 (exp2 -> empty .)
    RP              reduce using rule 61 (exp2 -> empty .)
    ADD             reduce using rule 61 (exp2 -> empty .)
    LT              reduce using rule 61 (exp2 -> empty .)
    MT              reduce using rule 61 (exp2 -> empty .)
    D               reduce using rule 61 (exp2 -> empty .)
    SEQ             reduce using rule 61 (exp2 -> empty .)


state 148

    (69) fact -> fact2 exp . RP

    RP              shift and go to state 187


state 149

    (65) term2 -> term3 . term
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 188
    valExp                         shift and go to state 101
    fact2                          shift and go to state 106
    fact                           shift and go to state 108
    fact4                          shift and go to state 109

state 150

    (64) term -> fact term2 .

    ADD             reduce using rule 64 (term -> fact term2 .)
    SUB             reduce using rule 64 (term -> fact term2 .)
    C               reduce using rule 64 (term -> fact term2 .)
    RP              reduce using rule 64 (term -> fact term2 .)
    LT              reduce using rule 64 (term -> fact term2 .)
    MT              reduce using rule 64 (term -> fact term2 .)
    D               reduce using rule 64 (term -> fact term2 .)
    SEQ             reduce using rule 64 (term -> fact term2 .)
    SC              reduce using rule 64 (term -> fact term2 .)
    LB              reduce using rule 64 (term -> fact term2 .)


state 151

    (67) term3 -> M .

    LP              reduce using rule 67 (term3 -> M .)
    ID              reduce using rule 67 (term3 -> M .)
    VALI            reduce using rule 67 (term3 -> M .)
    VALF            reduce using rule 67 (term3 -> M .)


state 152

    (68) term3 -> DIV .

    LP              reduce using rule 68 (term3 -> DIV .)
    ID              reduce using rule 68 (term3 -> DIV .)
    VALI            reduce using rule 68 (term3 -> DIV .)
    VALF            reduce using rule 68 (term3 -> DIV .)


state 153

    (66) term2 -> empty .

    ADD             reduce using rule 66 (term2 -> empty .)
    SUB             reduce using rule 66 (term2 -> empty .)
    C               reduce using rule 66 (term2 -> empty .)
    SC              reduce using rule 66 (term2 -> empty .)
    LB              reduce using rule 66 (term2 -> empty .)
    RP              reduce using rule 66 (term2 -> empty .)
    LT              reduce using rule 66 (term2 -> empty .)
    MT              reduce using rule 66 (term2 -> empty .)
    D               reduce using rule 66 (term2 -> empty .)
    SEQ             reduce using rule 66 (term2 -> empty .)


state 154

    (32) position -> PENP LP exp . C exp RP SC

    C               shift and go to state 189


state 155

    (35) colors -> BACO LP exp . C exp C exp RP SC

    C               shift and go to state 190


state 156

    (42) rect -> REC LP exp . C exp p_fill RP SC

    C               shift and go to state 191


state 157

    (36) p_width -> PENW LP exp . RP SC

    RP              shift and go to state 192


state 158

    (103) stExp -> STR .

    ADD             reduce using rule 103 (stExp -> STR .)
    RP              reduce using rule 103 (stExp -> STR .)


state 159

    (100) lab -> LA LP stExp . lab2 RP SC
    (101) lab2 -> . ADD stExp lab2
    (102) lab2 -> . empty
    (131) empty -> .

    ADD             shift and go to state 194
    RP              reduce using rule 131 (empty -> .)

    lab2                           shift and go to state 193
    empty                          shift and go to state 195

state 160

    (104) stExp -> exp .

    ADD             reduce using rule 104 (stExp -> exp .)
    RP              reduce using rule 104 (stExp -> exp .)


state 161

    (48) poly -> POL LP idList . p_fill RP SC
    (43) p_fill -> . C FILL
    (44) p_fill -> . empty
    (131) empty -> .

    C               shift and go to state 196
    RP              reduce using rule 131 (empty -> .)

    empty                          shift and go to state 198
    p_fill                         shift and go to state 197

state 162

    (50) idList -> ID .

    RP              reduce using rule 50 (idList -> ID .)
    C               reduce using rule 50 (idList -> ID .)


state 163

    (76) rep -> RE rep3 block .

    IF              reduce using rule 76 (rep -> RE rep3 block .)
    LA              reduce using rule 76 (rep -> RE rep3 block .)
    L               reduce using rule 76 (rep -> RE rep3 block .)
    ID              reduce using rule 76 (rep -> RE rep3 block .)
    RE              reduce using rule 76 (rep -> RE rep3 block .)
    REC             reduce using rule 76 (rep -> RE rep3 block .)
    TRI             reduce using rule 76 (rep -> RE rep3 block .)
    POL             reduce using rule 76 (rep -> RE rep3 block .)
    LS              reduce using rule 76 (rep -> RE rep3 block .)
    CIR             reduce using rule 76 (rep -> RE rep3 block .)
    SQ              reduce using rule 76 (rep -> RE rep3 block .)
    ARC             reduce using rule 76 (rep -> RE rep3 block .)
    PENC            reduce using rule 76 (rep -> RE rep3 block .)
    SETC            reduce using rule 76 (rep -> RE rep3 block .)
    BACO            reduce using rule 76 (rep -> RE rep3 block .)
    PENW            reduce using rule 76 (rep -> RE rep3 block .)
    F               reduce using rule 76 (rep -> RE rep3 block .)
    B               reduce using rule 76 (rep -> RE rep3 block .)
    PENP            reduce using rule 76 (rep -> RE rep3 block .)
    PENU            reduce using rule 76 (rep -> RE rep3 block .)
    PEND            reduce using rule 76 (rep -> RE rep3 block .)
    RB              reduce using rule 76 (rep -> RE rep3 block .)


state 164

    (33) colors -> PENC LP exp . C exp C exp RP SC

    C               shift and go to state 199


state 165

    (49) lstrip -> LS LP idList . RP SC

    RP              shift and go to state 200


state 166

    (45) tria -> TRI LP exp . C exp C exp p_fill RP SC

    C               shift and go to state 201


state 167

    (41) mueve2 -> LP exp . C A exp RP SC

    C               shift and go to state 202


state 168

    (85) funCall -> LP func2 . RP SC

    RP              shift and go to state 203


state 169

    (90) func4 -> exp .

    C               reduce using rule 90 (func4 -> exp .)
    RP              reduce using rule 90 (func4 -> exp .)


state 170

    (86) func2 -> func4 . func3
    (88) func3 -> . C func4 func3
    (89) func3 -> . empty
    (131) empty -> .

    C               shift and go to state 205
    RP              reduce using rule 131 (empty -> .)

    func3                          shift and go to state 204
    empty                          shift and go to state 206

state 171

    (87) func2 -> empty .

    RP              reduce using rule 87 (func2 -> empty .)


state 172

    (94) listAss -> LB . lista3 RB SC
    (97) lista3 -> . lista2 li4
    (95) lista2 -> . val
    (96) lista2 -> . ID
    (30) val -> . VALI
    (31) val -> . VALF

    ID              shift and go to state 210
    VALI            shift and go to state 207
    VALF            shift and go to state 209

    val                            shift and go to state 208
    lista3                         shift and go to state 211
    lista2                         shift and go to state 212

state 173

    (83) tipeAss -> listAss .

    IF              reduce using rule 83 (tipeAss -> listAss .)
    LA              reduce using rule 83 (tipeAss -> listAss .)
    L               reduce using rule 83 (tipeAss -> listAss .)
    ID              reduce using rule 83 (tipeAss -> listAss .)
    RE              reduce using rule 83 (tipeAss -> listAss .)
    REC             reduce using rule 83 (tipeAss -> listAss .)
    TRI             reduce using rule 83 (tipeAss -> listAss .)
    POL             reduce using rule 83 (tipeAss -> listAss .)
    LS              reduce using rule 83 (tipeAss -> listAss .)
    CIR             reduce using rule 83 (tipeAss -> listAss .)
    SQ              reduce using rule 83 (tipeAss -> listAss .)
    ARC             reduce using rule 83 (tipeAss -> listAss .)
    PENC            reduce using rule 83 (tipeAss -> listAss .)
    SETC            reduce using rule 83 (tipeAss -> listAss .)
    BACO            reduce using rule 83 (tipeAss -> listAss .)
    PENW            reduce using rule 83 (tipeAss -> listAss .)
    F               reduce using rule 83 (tipeAss -> listAss .)
    B               reduce using rule 83 (tipeAss -> listAss .)
    PENP            reduce using rule 83 (tipeAss -> listAss .)
    PENU            reduce using rule 83 (tipeAss -> listAss .)
    PEND            reduce using rule 83 (tipeAss -> listAss .)
    RB              reduce using rule 83 (tipeAss -> listAss .)


state 174

    (82) tipeAss -> varAss .

    IF              reduce using rule 82 (tipeAss -> varAss .)
    LA              reduce using rule 82 (tipeAss -> varAss .)
    L               reduce using rule 82 (tipeAss -> varAss .)
    ID              reduce using rule 82 (tipeAss -> varAss .)
    RE              reduce using rule 82 (tipeAss -> varAss .)
    REC             reduce using rule 82 (tipeAss -> varAss .)
    TRI             reduce using rule 82 (tipeAss -> varAss .)
    POL             reduce using rule 82 (tipeAss -> varAss .)
    LS              reduce using rule 82 (tipeAss -> varAss .)
    CIR             reduce using rule 82 (tipeAss -> varAss .)
    SQ              reduce using rule 82 (tipeAss -> varAss .)
    ARC             reduce using rule 82 (tipeAss -> varAss .)
    PENC            reduce using rule 82 (tipeAss -> varAss .)
    SETC            reduce using rule 82 (tipeAss -> varAss .)
    BACO            reduce using rule 82 (tipeAss -> varAss .)
    PENW            reduce using rule 82 (tipeAss -> varAss .)
    F               reduce using rule 82 (tipeAss -> varAss .)
    B               reduce using rule 82 (tipeAss -> varAss .)
    PENP            reduce using rule 82 (tipeAss -> varAss .)
    PENU            reduce using rule 82 (tipeAss -> varAss .)
    PEND            reduce using rule 82 (tipeAss -> varAss .)
    RB              reduce using rule 82 (tipeAss -> varAss .)


state 175

    (84) varAss -> exp . SC

    SC              shift and go to state 213


state 176

    (81) assigment -> EQ tipeAss .

    IF              reduce using rule 81 (assigment -> EQ tipeAss .)
    LA              reduce using rule 81 (assigment -> EQ tipeAss .)
    L               reduce using rule 81 (assigment -> EQ tipeAss .)
    ID              reduce using rule 81 (assigment -> EQ tipeAss .)
    RE              reduce using rule 81 (assigment -> EQ tipeAss .)
    REC             reduce using rule 81 (assigment -> EQ tipeAss .)
    TRI             reduce using rule 81 (assigment -> EQ tipeAss .)
    POL             reduce using rule 81 (assigment -> EQ tipeAss .)
    LS              reduce using rule 81 (assigment -> EQ tipeAss .)
    CIR             reduce using rule 81 (assigment -> EQ tipeAss .)
    SQ              reduce using rule 81 (assigment -> EQ tipeAss .)
    ARC             reduce using rule 81 (assigment -> EQ tipeAss .)
    PENC            reduce using rule 81 (assigment -> EQ tipeAss .)
    SETC            reduce using rule 81 (assigment -> EQ tipeAss .)
    BACO            reduce using rule 81 (assigment -> EQ tipeAss .)
    PENW            reduce using rule 81 (assigment -> EQ tipeAss .)
    F               reduce using rule 81 (assigment -> EQ tipeAss .)
    B               reduce using rule 81 (assigment -> EQ tipeAss .)
    PENP            reduce using rule 81 (assigment -> EQ tipeAss .)
    PENU            reduce using rule 81 (assigment -> EQ tipeAss .)
    PEND            reduce using rule 81 (assigment -> EQ tipeAss .)
    RB              reduce using rule 81 (assigment -> EQ tipeAss .)


state 177

    (105) condition -> IF LP expresion . condRP block con2
    (106) condRP -> . RP

    RP              shift and go to state 214

    condRP                         shift and go to state 215

state 178

    (52) expresion -> exp . ex2
    (53) ex2 -> . ex3 exp
    (54) ex2 -> . empty
    (55) ex3 -> . LT
    (56) ex3 -> . MT
    (57) ex3 -> . D
    (58) ex3 -> . SEQ
    (131) empty -> .

    LT              shift and go to state 219
    MT              shift and go to state 218
    D               shift and go to state 216
    SEQ             shift and go to state 217
    RP              reduce using rule 131 (empty -> .)

    empty                          shift and go to state 222
    ex2                            shift and go to state 220
    ex3                            shift and go to state 221

state 179

    (46) one_par -> CIR LP exp . p_fill RP SC
    (43) p_fill -> . C FILL
    (44) p_fill -> . empty
    (131) empty -> .

    C               shift and go to state 196
    RP              reduce using rule 131 (empty -> .)

    empty                          shift and go to state 198
    p_fill                         shift and go to state 223

state 180

    (47) one_par -> SQ LP exp . p_fill RP SC
    (43) p_fill -> . C FILL
    (44) p_fill -> . empty
    (131) empty -> .

    C               shift and go to state 196
    RP              reduce using rule 131 (empty -> .)

    empty                          shift and go to state 198
    p_fill                         shift and go to state 224

state 181

    (34) colors -> SETC LP exp . C exp C exp RP SC

    C               shift and go to state 225


state 182

    (51) p_arc -> ARC LP exp . RP SC

    RP              shift and go to state 226


state 183

    (14) fun4 -> C fun5 fun4 .

    RP              reduce using rule 14 (fun4 -> C fun5 fun4 .)


state 184

    (92) prelistAss -> EQ listAss .

    L               reduce using rule 92 (prelistAss -> EQ listAss .)
    FUN             reduce using rule 92 (prelistAss -> EQ listAss .)
    MAIN            reduce using rule 92 (prelistAss -> EQ listAss .)
    LB              reduce using rule 92 (prelistAss -> EQ listAss .)
    IF              reduce using rule 92 (prelistAss -> EQ listAss .)
    LA              reduce using rule 92 (prelistAss -> EQ listAss .)
    ID              reduce using rule 92 (prelistAss -> EQ listAss .)
    RE              reduce using rule 92 (prelistAss -> EQ listAss .)
    REC             reduce using rule 92 (prelistAss -> EQ listAss .)
    TRI             reduce using rule 92 (prelistAss -> EQ listAss .)
    POL             reduce using rule 92 (prelistAss -> EQ listAss .)
    LS              reduce using rule 92 (prelistAss -> EQ listAss .)
    CIR             reduce using rule 92 (prelistAss -> EQ listAss .)
    SQ              reduce using rule 92 (prelistAss -> EQ listAss .)
    ARC             reduce using rule 92 (prelistAss -> EQ listAss .)
    PENC            reduce using rule 92 (prelistAss -> EQ listAss .)
    SETC            reduce using rule 92 (prelistAss -> EQ listAss .)
    BACO            reduce using rule 92 (prelistAss -> EQ listAss .)
    PENW            reduce using rule 92 (prelistAss -> EQ listAss .)
    F               reduce using rule 92 (prelistAss -> EQ listAss .)
    B               reduce using rule 92 (prelistAss -> EQ listAss .)
    PENP            reduce using rule 92 (prelistAss -> EQ listAss .)
    PENU            reduce using rule 92 (prelistAss -> EQ listAss .)
    PEND            reduce using rule 92 (prelistAss -> EQ listAss .)
    RB              reduce using rule 92 (prelistAss -> EQ listAss .)


state 185

    (22) var33 -> C ID var4 . var33
    (22) var33 -> . C ID var4 var33
    (23) var33 -> . empty
    (131) empty -> .

    C               shift and go to state 98
    SC              reduce using rule 131 (empty -> .)

    var33                          shift and go to state 227
    empty                          shift and go to state 99

state 186

    (60) exp2 -> exp3 exp .

    C               reduce using rule 60 (exp2 -> exp3 exp .)
    SC              reduce using rule 60 (exp2 -> exp3 exp .)
    LB              reduce using rule 60 (exp2 -> exp3 exp .)
    RP              reduce using rule 60 (exp2 -> exp3 exp .)
    ADD             reduce using rule 60 (exp2 -> exp3 exp .)
    LT              reduce using rule 60 (exp2 -> exp3 exp .)
    MT              reduce using rule 60 (exp2 -> exp3 exp .)
    D               reduce using rule 60 (exp2 -> exp3 exp .)
    SEQ             reduce using rule 60 (exp2 -> exp3 exp .)


state 187

    (69) fact -> fact2 exp RP .

    M               reduce using rule 69 (fact -> fact2 exp RP .)
    DIV             reduce using rule 69 (fact -> fact2 exp RP .)
    ADD             reduce using rule 69 (fact -> fact2 exp RP .)
    SUB             reduce using rule 69 (fact -> fact2 exp RP .)
    RP              reduce using rule 69 (fact -> fact2 exp RP .)
    C               reduce using rule 69 (fact -> fact2 exp RP .)
    SC              reduce using rule 69 (fact -> fact2 exp RP .)
    LB              reduce using rule 69 (fact -> fact2 exp RP .)
    LT              reduce using rule 69 (fact -> fact2 exp RP .)
    MT              reduce using rule 69 (fact -> fact2 exp RP .)
    D               reduce using rule 69 (fact -> fact2 exp RP .)
    SEQ             reduce using rule 69 (fact -> fact2 exp RP .)


state 188

    (65) term2 -> term3 term .

    ADD             reduce using rule 65 (term2 -> term3 term .)
    SUB             reduce using rule 65 (term2 -> term3 term .)
    C               reduce using rule 65 (term2 -> term3 term .)
    SC              reduce using rule 65 (term2 -> term3 term .)
    LB              reduce using rule 65 (term2 -> term3 term .)
    RP              reduce using rule 65 (term2 -> term3 term .)
    LT              reduce using rule 65 (term2 -> term3 term .)
    MT              reduce using rule 65 (term2 -> term3 term .)
    D               reduce using rule 65 (term2 -> term3 term .)
    SEQ             reduce using rule 65 (term2 -> term3 term .)


state 189

    (32) position -> PENP LP exp C . exp RP SC
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    exp                            shift and go to state 228
    fact2                          shift and go to state 106
    fact                           shift and go to state 108
    fact4                          shift and go to state 109

state 190

    (35) colors -> BACO LP exp C . exp C exp RP SC
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    exp                            shift and go to state 229
    fact2                          shift and go to state 106
    fact                           shift and go to state 108
    fact4                          shift and go to state 109

state 191

    (42) rect -> REC LP exp C . exp p_fill RP SC
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    exp                            shift and go to state 230
    fact2                          shift and go to state 106
    fact4                          shift and go to state 109
    fact                           shift and go to state 108

state 192

    (36) p_width -> PENW LP exp RP . SC

    SC              shift and go to state 231


state 193

    (100) lab -> LA LP stExp lab2 . RP SC

    RP              shift and go to state 232


state 194

    (101) lab2 -> ADD . stExp lab2
    (103) stExp -> . STR
    (104) stExp -> . exp
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    STR             shift and go to state 158
    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    stExp                          shift and go to state 233
    exp                            shift and go to state 160
    fact2                          shift and go to state 106
    fact                           shift and go to state 108
    fact4                          shift and go to state 109

state 195

    (102) lab2 -> empty .

    RP              reduce using rule 102 (lab2 -> empty .)


state 196

    (43) p_fill -> C . FILL

    FILL            shift and go to state 234


state 197

    (48) poly -> POL LP idList p_fill . RP SC

    RP              shift and go to state 235


state 198

    (44) p_fill -> empty .

    RP              reduce using rule 44 (p_fill -> empty .)


state 199

    (33) colors -> PENC LP exp C . exp C exp RP SC
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    exp                            shift and go to state 236
    fact2                          shift and go to state 106
    fact                           shift and go to state 108
    fact4                          shift and go to state 109

state 200

    (49) lstrip -> LS LP idList RP . SC

    SC              shift and go to state 237


state 201

    (45) tria -> TRI LP exp C . exp C exp p_fill RP SC
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    exp                            shift and go to state 238
    fact2                          shift and go to state 106
    fact4                          shift and go to state 109
    fact                           shift and go to state 108

state 202

    (41) mueve2 -> LP exp C . A exp RP SC

    A               shift and go to state 239


state 203

    (85) funCall -> LP func2 RP . SC

    SC              shift and go to state 240


state 204

    (86) func2 -> func4 func3 .

    RP              reduce using rule 86 (func2 -> func4 func3 .)


state 205

    (88) func3 -> C . func4 func3
    (90) func4 -> . exp
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    func4                          shift and go to state 241
    exp                            shift and go to state 169
    fact2                          shift and go to state 106
    fact                           shift and go to state 108
    fact4                          shift and go to state 109

state 206

    (89) func3 -> empty .

    RP              reduce using rule 89 (func3 -> empty .)


state 207

    (30) val -> VALI .

    C               reduce using rule 30 (val -> VALI .)
    RB              reduce using rule 30 (val -> VALI .)


state 208

    (95) lista2 -> val .

    C               reduce using rule 95 (lista2 -> val .)
    RB              reduce using rule 95 (lista2 -> val .)


state 209

    (31) val -> VALF .

    C               reduce using rule 31 (val -> VALF .)
    RB              reduce using rule 31 (val -> VALF .)


state 210

    (96) lista2 -> ID .

    C               reduce using rule 96 (lista2 -> ID .)
    RB              reduce using rule 96 (lista2 -> ID .)


state 211

    (94) listAss -> LB lista3 . RB SC

    RB              shift and go to state 242


state 212

    (97) lista3 -> lista2 . li4
    (98) li4 -> . C lista2 li4
    (99) li4 -> . empty
    (131) empty -> .

    C               shift and go to state 244
    RB              reduce using rule 131 (empty -> .)

    li4                            shift and go to state 243
    empty                          shift and go to state 245

state 213

    (84) varAss -> exp SC .

    IF              reduce using rule 84 (varAss -> exp SC .)
    LA              reduce using rule 84 (varAss -> exp SC .)
    L               reduce using rule 84 (varAss -> exp SC .)
    ID              reduce using rule 84 (varAss -> exp SC .)
    RE              reduce using rule 84 (varAss -> exp SC .)
    REC             reduce using rule 84 (varAss -> exp SC .)
    TRI             reduce using rule 84 (varAss -> exp SC .)
    POL             reduce using rule 84 (varAss -> exp SC .)
    LS              reduce using rule 84 (varAss -> exp SC .)
    CIR             reduce using rule 84 (varAss -> exp SC .)
    SQ              reduce using rule 84 (varAss -> exp SC .)
    ARC             reduce using rule 84 (varAss -> exp SC .)
    PENC            reduce using rule 84 (varAss -> exp SC .)
    SETC            reduce using rule 84 (varAss -> exp SC .)
    BACO            reduce using rule 84 (varAss -> exp SC .)
    PENW            reduce using rule 84 (varAss -> exp SC .)
    F               reduce using rule 84 (varAss -> exp SC .)
    B               reduce using rule 84 (varAss -> exp SC .)
    PENP            reduce using rule 84 (varAss -> exp SC .)
    PENU            reduce using rule 84 (varAss -> exp SC .)
    PEND            reduce using rule 84 (varAss -> exp SC .)
    RB              reduce using rule 84 (varAss -> exp SC .)


state 214

    (106) condRP -> RP .

    LB              reduce using rule 106 (condRP -> RP .)


state 215

    (105) condition -> IF LP expresion condRP . block con2
    (110) block -> . LB block3 RB

    LB              shift and go to state 36

    block                          shift and go to state 246

state 216

    (57) ex3 -> D .

    LP              reduce using rule 57 (ex3 -> D .)
    ID              reduce using rule 57 (ex3 -> D .)
    VALI            reduce using rule 57 (ex3 -> D .)
    VALF            reduce using rule 57 (ex3 -> D .)


state 217

    (58) ex3 -> SEQ .

    LP              reduce using rule 58 (ex3 -> SEQ .)
    ID              reduce using rule 58 (ex3 -> SEQ .)
    VALI            reduce using rule 58 (ex3 -> SEQ .)
    VALF            reduce using rule 58 (ex3 -> SEQ .)


state 218

    (56) ex3 -> MT .

    LP              reduce using rule 56 (ex3 -> MT .)
    ID              reduce using rule 56 (ex3 -> MT .)
    VALI            reduce using rule 56 (ex3 -> MT .)
    VALF            reduce using rule 56 (ex3 -> MT .)


state 219

    (55) ex3 -> LT .

    LP              reduce using rule 55 (ex3 -> LT .)
    ID              reduce using rule 55 (ex3 -> LT .)
    VALI            reduce using rule 55 (ex3 -> LT .)
    VALF            reduce using rule 55 (ex3 -> LT .)


state 220

    (52) expresion -> exp ex2 .

    RP              reduce using rule 52 (expresion -> exp ex2 .)


state 221

    (53) ex2 -> ex3 . exp
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    exp                            shift and go to state 247
    fact2                          shift and go to state 106
    fact                           shift and go to state 108
    fact4                          shift and go to state 109

state 222

    (54) ex2 -> empty .

    RP              reduce using rule 54 (ex2 -> empty .)


state 223

    (46) one_par -> CIR LP exp p_fill . RP SC

    RP              shift and go to state 248


state 224

    (47) one_par -> SQ LP exp p_fill . RP SC

    RP              shift and go to state 249


state 225

    (34) colors -> SETC LP exp C . exp C exp RP SC
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    exp                            shift and go to state 250
    fact2                          shift and go to state 106
    fact                           shift and go to state 108
    fact4                          shift and go to state 109

state 226

    (51) p_arc -> ARC LP exp RP . SC

    SC              shift and go to state 251


state 227

    (22) var33 -> C ID var4 var33 .

    SC              reduce using rule 22 (var33 -> C ID var4 var33 .)


state 228

    (32) position -> PENP LP exp C exp . RP SC

    RP              shift and go to state 252


state 229

    (35) colors -> BACO LP exp C exp . C exp RP SC

    C               shift and go to state 253


state 230

    (42) rect -> REC LP exp C exp . p_fill RP SC
    (43) p_fill -> . C FILL
    (44) p_fill -> . empty
    (131) empty -> .

    C               shift and go to state 196
    RP              reduce using rule 131 (empty -> .)

    empty                          shift and go to state 198
    p_fill                         shift and go to state 254

state 231

    (36) p_width -> PENW LP exp RP SC .

    IF              reduce using rule 36 (p_width -> PENW LP exp RP SC .)
    LA              reduce using rule 36 (p_width -> PENW LP exp RP SC .)
    L               reduce using rule 36 (p_width -> PENW LP exp RP SC .)
    ID              reduce using rule 36 (p_width -> PENW LP exp RP SC .)
    RE              reduce using rule 36 (p_width -> PENW LP exp RP SC .)
    REC             reduce using rule 36 (p_width -> PENW LP exp RP SC .)
    TRI             reduce using rule 36 (p_width -> PENW LP exp RP SC .)
    POL             reduce using rule 36 (p_width -> PENW LP exp RP SC .)
    LS              reduce using rule 36 (p_width -> PENW LP exp RP SC .)
    CIR             reduce using rule 36 (p_width -> PENW LP exp RP SC .)
    SQ              reduce using rule 36 (p_width -> PENW LP exp RP SC .)
    ARC             reduce using rule 36 (p_width -> PENW LP exp RP SC .)
    PENC            reduce using rule 36 (p_width -> PENW LP exp RP SC .)
    SETC            reduce using rule 36 (p_width -> PENW LP exp RP SC .)
    BACO            reduce using rule 36 (p_width -> PENW LP exp RP SC .)
    PENW            reduce using rule 36 (p_width -> PENW LP exp RP SC .)
    F               reduce using rule 36 (p_width -> PENW LP exp RP SC .)
    B               reduce using rule 36 (p_width -> PENW LP exp RP SC .)
    PENP            reduce using rule 36 (p_width -> PENW LP exp RP SC .)
    PENU            reduce using rule 36 (p_width -> PENW LP exp RP SC .)
    PEND            reduce using rule 36 (p_width -> PENW LP exp RP SC .)
    RB              reduce using rule 36 (p_width -> PENW LP exp RP SC .)


state 232

    (100) lab -> LA LP stExp lab2 RP . SC

    SC              shift and go to state 255


state 233

    (101) lab2 -> ADD stExp . lab2
    (101) lab2 -> . ADD stExp lab2
    (102) lab2 -> . empty
    (131) empty -> .

    ADD             shift and go to state 194
    RP              reduce using rule 131 (empty -> .)

    lab2                           shift and go to state 256
    empty                          shift and go to state 195

state 234

    (43) p_fill -> C FILL .

    RP              reduce using rule 43 (p_fill -> C FILL .)


state 235

    (48) poly -> POL LP idList p_fill RP . SC

    SC              shift and go to state 257


state 236

    (33) colors -> PENC LP exp C exp . C exp RP SC

    C               shift and go to state 258


state 237

    (49) lstrip -> LS LP idList RP SC .

    IF              reduce using rule 49 (lstrip -> LS LP idList RP SC .)
    LA              reduce using rule 49 (lstrip -> LS LP idList RP SC .)
    L               reduce using rule 49 (lstrip -> LS LP idList RP SC .)
    ID              reduce using rule 49 (lstrip -> LS LP idList RP SC .)
    RE              reduce using rule 49 (lstrip -> LS LP idList RP SC .)
    REC             reduce using rule 49 (lstrip -> LS LP idList RP SC .)
    TRI             reduce using rule 49 (lstrip -> LS LP idList RP SC .)
    POL             reduce using rule 49 (lstrip -> LS LP idList RP SC .)
    LS              reduce using rule 49 (lstrip -> LS LP idList RP SC .)
    CIR             reduce using rule 49 (lstrip -> LS LP idList RP SC .)
    SQ              reduce using rule 49 (lstrip -> LS LP idList RP SC .)
    ARC             reduce using rule 49 (lstrip -> LS LP idList RP SC .)
    PENC            reduce using rule 49 (lstrip -> LS LP idList RP SC .)
    SETC            reduce using rule 49 (lstrip -> LS LP idList RP SC .)
    BACO            reduce using rule 49 (lstrip -> LS LP idList RP SC .)
    PENW            reduce using rule 49 (lstrip -> LS LP idList RP SC .)
    F               reduce using rule 49 (lstrip -> LS LP idList RP SC .)
    B               reduce using rule 49 (lstrip -> LS LP idList RP SC .)
    PENP            reduce using rule 49 (lstrip -> LS LP idList RP SC .)
    PENU            reduce using rule 49 (lstrip -> LS LP idList RP SC .)
    PEND            reduce using rule 49 (lstrip -> LS LP idList RP SC .)
    RB              reduce using rule 49 (lstrip -> LS LP idList RP SC .)


state 238

    (45) tria -> TRI LP exp C exp . C exp p_fill RP SC

    C               shift and go to state 259


state 239

    (41) mueve2 -> LP exp C A . exp RP SC
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    exp                            shift and go to state 260
    fact2                          shift and go to state 106
    fact                           shift and go to state 108
    fact4                          shift and go to state 109

state 240

    (85) funCall -> LP func2 RP SC .

    IF              reduce using rule 85 (funCall -> LP func2 RP SC .)
    LA              reduce using rule 85 (funCall -> LP func2 RP SC .)
    L               reduce using rule 85 (funCall -> LP func2 RP SC .)
    ID              reduce using rule 85 (funCall -> LP func2 RP SC .)
    RE              reduce using rule 85 (funCall -> LP func2 RP SC .)
    REC             reduce using rule 85 (funCall -> LP func2 RP SC .)
    TRI             reduce using rule 85 (funCall -> LP func2 RP SC .)
    POL             reduce using rule 85 (funCall -> LP func2 RP SC .)
    LS              reduce using rule 85 (funCall -> LP func2 RP SC .)
    CIR             reduce using rule 85 (funCall -> LP func2 RP SC .)
    SQ              reduce using rule 85 (funCall -> LP func2 RP SC .)
    ARC             reduce using rule 85 (funCall -> LP func2 RP SC .)
    PENC            reduce using rule 85 (funCall -> LP func2 RP SC .)
    SETC            reduce using rule 85 (funCall -> LP func2 RP SC .)
    BACO            reduce using rule 85 (funCall -> LP func2 RP SC .)
    PENW            reduce using rule 85 (funCall -> LP func2 RP SC .)
    F               reduce using rule 85 (funCall -> LP func2 RP SC .)
    B               reduce using rule 85 (funCall -> LP func2 RP SC .)
    PENP            reduce using rule 85 (funCall -> LP func2 RP SC .)
    PENU            reduce using rule 85 (funCall -> LP func2 RP SC .)
    PEND            reduce using rule 85 (funCall -> LP func2 RP SC .)
    RB              reduce using rule 85 (funCall -> LP func2 RP SC .)


state 241

    (88) func3 -> C func4 . func3
    (88) func3 -> . C func4 func3
    (89) func3 -> . empty
    (131) empty -> .

    C               shift and go to state 205
    RP              reduce using rule 131 (empty -> .)

    func3                          shift and go to state 261
    empty                          shift and go to state 206

state 242

    (94) listAss -> LB lista3 RB . SC

    SC              shift and go to state 262


state 243

    (97) lista3 -> lista2 li4 .

    RB              reduce using rule 97 (lista3 -> lista2 li4 .)


state 244

    (98) li4 -> C . lista2 li4
    (95) lista2 -> . val
    (96) lista2 -> . ID
    (30) val -> . VALI
    (31) val -> . VALF

    ID              shift and go to state 210
    VALI            shift and go to state 207
    VALF            shift and go to state 209

    val                            shift and go to state 208
    lista2                         shift and go to state 263

state 245

    (99) li4 -> empty .

    RB              reduce using rule 99 (li4 -> empty .)


state 246

    (105) condition -> IF LP expresion condRP block . con2
    (107) con2 -> . empty
    (108) con2 -> . con3 block
    (131) empty -> .
    (109) con3 -> . ELSE

    IF              reduce using rule 131 (empty -> .)
    LA              reduce using rule 131 (empty -> .)
    L               reduce using rule 131 (empty -> .)
    ID              reduce using rule 131 (empty -> .)
    RE              reduce using rule 131 (empty -> .)
    REC             reduce using rule 131 (empty -> .)
    TRI             reduce using rule 131 (empty -> .)
    POL             reduce using rule 131 (empty -> .)
    LS              reduce using rule 131 (empty -> .)
    CIR             reduce using rule 131 (empty -> .)
    SQ              reduce using rule 131 (empty -> .)
    ARC             reduce using rule 131 (empty -> .)
    PENC            reduce using rule 131 (empty -> .)
    SETC            reduce using rule 131 (empty -> .)
    BACO            reduce using rule 131 (empty -> .)
    PENW            reduce using rule 131 (empty -> .)
    F               reduce using rule 131 (empty -> .)
    B               reduce using rule 131 (empty -> .)
    PENP            reduce using rule 131 (empty -> .)
    PENU            reduce using rule 131 (empty -> .)
    PEND            reduce using rule 131 (empty -> .)
    RB              reduce using rule 131 (empty -> .)
    ELSE            shift and go to state 266

    con2                           shift and go to state 264
    con3                           shift and go to state 265
    empty                          shift and go to state 267

state 247

    (53) ex2 -> ex3 exp .

    RP              reduce using rule 53 (ex2 -> ex3 exp .)


state 248

    (46) one_par -> CIR LP exp p_fill RP . SC

    SC              shift and go to state 268


state 249

    (47) one_par -> SQ LP exp p_fill RP . SC

    SC              shift and go to state 269


state 250

    (34) colors -> SETC LP exp C exp . C exp RP SC

    C               shift and go to state 270


state 251

    (51) p_arc -> ARC LP exp RP SC .

    IF              reduce using rule 51 (p_arc -> ARC LP exp RP SC .)
    LA              reduce using rule 51 (p_arc -> ARC LP exp RP SC .)
    L               reduce using rule 51 (p_arc -> ARC LP exp RP SC .)
    ID              reduce using rule 51 (p_arc -> ARC LP exp RP SC .)
    RE              reduce using rule 51 (p_arc -> ARC LP exp RP SC .)
    REC             reduce using rule 51 (p_arc -> ARC LP exp RP SC .)
    TRI             reduce using rule 51 (p_arc -> ARC LP exp RP SC .)
    POL             reduce using rule 51 (p_arc -> ARC LP exp RP SC .)
    LS              reduce using rule 51 (p_arc -> ARC LP exp RP SC .)
    CIR             reduce using rule 51 (p_arc -> ARC LP exp RP SC .)
    SQ              reduce using rule 51 (p_arc -> ARC LP exp RP SC .)
    ARC             reduce using rule 51 (p_arc -> ARC LP exp RP SC .)
    PENC            reduce using rule 51 (p_arc -> ARC LP exp RP SC .)
    SETC            reduce using rule 51 (p_arc -> ARC LP exp RP SC .)
    BACO            reduce using rule 51 (p_arc -> ARC LP exp RP SC .)
    PENW            reduce using rule 51 (p_arc -> ARC LP exp RP SC .)
    F               reduce using rule 51 (p_arc -> ARC LP exp RP SC .)
    B               reduce using rule 51 (p_arc -> ARC LP exp RP SC .)
    PENP            reduce using rule 51 (p_arc -> ARC LP exp RP SC .)
    PENU            reduce using rule 51 (p_arc -> ARC LP exp RP SC .)
    PEND            reduce using rule 51 (p_arc -> ARC LP exp RP SC .)
    RB              reduce using rule 51 (p_arc -> ARC LP exp RP SC .)


state 252

    (32) position -> PENP LP exp C exp RP . SC

    SC              shift and go to state 271


state 253

    (35) colors -> BACO LP exp C exp C . exp RP SC
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    exp                            shift and go to state 272
    fact2                          shift and go to state 106
    fact                           shift and go to state 108
    fact4                          shift and go to state 109

state 254

    (42) rect -> REC LP exp C exp p_fill . RP SC

    RP              shift and go to state 273


state 255

    (100) lab -> LA LP stExp lab2 RP SC .

    IF              reduce using rule 100 (lab -> LA LP stExp lab2 RP SC .)
    LA              reduce using rule 100 (lab -> LA LP stExp lab2 RP SC .)
    L               reduce using rule 100 (lab -> LA LP stExp lab2 RP SC .)
    ID              reduce using rule 100 (lab -> LA LP stExp lab2 RP SC .)
    RE              reduce using rule 100 (lab -> LA LP stExp lab2 RP SC .)
    REC             reduce using rule 100 (lab -> LA LP stExp lab2 RP SC .)
    TRI             reduce using rule 100 (lab -> LA LP stExp lab2 RP SC .)
    POL             reduce using rule 100 (lab -> LA LP stExp lab2 RP SC .)
    LS              reduce using rule 100 (lab -> LA LP stExp lab2 RP SC .)
    CIR             reduce using rule 100 (lab -> LA LP stExp lab2 RP SC .)
    SQ              reduce using rule 100 (lab -> LA LP stExp lab2 RP SC .)
    ARC             reduce using rule 100 (lab -> LA LP stExp lab2 RP SC .)
    PENC            reduce using rule 100 (lab -> LA LP stExp lab2 RP SC .)
    SETC            reduce using rule 100 (lab -> LA LP stExp lab2 RP SC .)
    BACO            reduce using rule 100 (lab -> LA LP stExp lab2 RP SC .)
    PENW            reduce using rule 100 (lab -> LA LP stExp lab2 RP SC .)
    F               reduce using rule 100 (lab -> LA LP stExp lab2 RP SC .)
    B               reduce using rule 100 (lab -> LA LP stExp lab2 RP SC .)
    PENP            reduce using rule 100 (lab -> LA LP stExp lab2 RP SC .)
    PENU            reduce using rule 100 (lab -> LA LP stExp lab2 RP SC .)
    PEND            reduce using rule 100 (lab -> LA LP stExp lab2 RP SC .)
    RB              reduce using rule 100 (lab -> LA LP stExp lab2 RP SC .)


state 256

    (101) lab2 -> ADD stExp lab2 .

    RP              reduce using rule 101 (lab2 -> ADD stExp lab2 .)


state 257

    (48) poly -> POL LP idList p_fill RP SC .

    IF              reduce using rule 48 (poly -> POL LP idList p_fill RP SC .)
    LA              reduce using rule 48 (poly -> POL LP idList p_fill RP SC .)
    L               reduce using rule 48 (poly -> POL LP idList p_fill RP SC .)
    ID              reduce using rule 48 (poly -> POL LP idList p_fill RP SC .)
    RE              reduce using rule 48 (poly -> POL LP idList p_fill RP SC .)
    REC             reduce using rule 48 (poly -> POL LP idList p_fill RP SC .)
    TRI             reduce using rule 48 (poly -> POL LP idList p_fill RP SC .)
    POL             reduce using rule 48 (poly -> POL LP idList p_fill RP SC .)
    LS              reduce using rule 48 (poly -> POL LP idList p_fill RP SC .)
    CIR             reduce using rule 48 (poly -> POL LP idList p_fill RP SC .)
    SQ              reduce using rule 48 (poly -> POL LP idList p_fill RP SC .)
    ARC             reduce using rule 48 (poly -> POL LP idList p_fill RP SC .)
    PENC            reduce using rule 48 (poly -> POL LP idList p_fill RP SC .)
    SETC            reduce using rule 48 (poly -> POL LP idList p_fill RP SC .)
    BACO            reduce using rule 48 (poly -> POL LP idList p_fill RP SC .)
    PENW            reduce using rule 48 (poly -> POL LP idList p_fill RP SC .)
    F               reduce using rule 48 (poly -> POL LP idList p_fill RP SC .)
    B               reduce using rule 48 (poly -> POL LP idList p_fill RP SC .)
    PENP            reduce using rule 48 (poly -> POL LP idList p_fill RP SC .)
    PENU            reduce using rule 48 (poly -> POL LP idList p_fill RP SC .)
    PEND            reduce using rule 48 (poly -> POL LP idList p_fill RP SC .)
    RB              reduce using rule 48 (poly -> POL LP idList p_fill RP SC .)


state 258

    (33) colors -> PENC LP exp C exp C . exp RP SC
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    exp                            shift and go to state 274
    fact2                          shift and go to state 106
    fact                           shift and go to state 108
    fact4                          shift and go to state 109

state 259

    (45) tria -> TRI LP exp C exp C . exp p_fill RP SC
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    exp                            shift and go to state 275
    fact2                          shift and go to state 106
    fact4                          shift and go to state 109
    fact                           shift and go to state 108

state 260

    (41) mueve2 -> LP exp C A exp . RP SC

    RP              shift and go to state 276


state 261

    (88) func3 -> C func4 func3 .

    RP              reduce using rule 88 (func3 -> C func4 func3 .)


state 262

    (94) listAss -> LB lista3 RB SC .

    IF              reduce using rule 94 (listAss -> LB lista3 RB SC .)
    LA              reduce using rule 94 (listAss -> LB lista3 RB SC .)
    L               reduce using rule 94 (listAss -> LB lista3 RB SC .)
    ID              reduce using rule 94 (listAss -> LB lista3 RB SC .)
    RE              reduce using rule 94 (listAss -> LB lista3 RB SC .)
    REC             reduce using rule 94 (listAss -> LB lista3 RB SC .)
    TRI             reduce using rule 94 (listAss -> LB lista3 RB SC .)
    POL             reduce using rule 94 (listAss -> LB lista3 RB SC .)
    LS              reduce using rule 94 (listAss -> LB lista3 RB SC .)
    CIR             reduce using rule 94 (listAss -> LB lista3 RB SC .)
    SQ              reduce using rule 94 (listAss -> LB lista3 RB SC .)
    ARC             reduce using rule 94 (listAss -> LB lista3 RB SC .)
    PENC            reduce using rule 94 (listAss -> LB lista3 RB SC .)
    SETC            reduce using rule 94 (listAss -> LB lista3 RB SC .)
    BACO            reduce using rule 94 (listAss -> LB lista3 RB SC .)
    PENW            reduce using rule 94 (listAss -> LB lista3 RB SC .)
    F               reduce using rule 94 (listAss -> LB lista3 RB SC .)
    B               reduce using rule 94 (listAss -> LB lista3 RB SC .)
    PENP            reduce using rule 94 (listAss -> LB lista3 RB SC .)
    PENU            reduce using rule 94 (listAss -> LB lista3 RB SC .)
    PEND            reduce using rule 94 (listAss -> LB lista3 RB SC .)
    RB              reduce using rule 94 (listAss -> LB lista3 RB SC .)
    FUN             reduce using rule 94 (listAss -> LB lista3 RB SC .)
    MAIN            reduce using rule 94 (listAss -> LB lista3 RB SC .)
    LB              reduce using rule 94 (listAss -> LB lista3 RB SC .)


state 263

    (98) li4 -> C lista2 . li4
    (98) li4 -> . C lista2 li4
    (99) li4 -> . empty
    (131) empty -> .

    C               shift and go to state 244
    RB              reduce using rule 131 (empty -> .)

    li4                            shift and go to state 277
    empty                          shift and go to state 245

state 264

    (105) condition -> IF LP expresion condRP block con2 .

    IF              reduce using rule 105 (condition -> IF LP expresion condRP block con2 .)
    LA              reduce using rule 105 (condition -> IF LP expresion condRP block con2 .)
    L               reduce using rule 105 (condition -> IF LP expresion condRP block con2 .)
    ID              reduce using rule 105 (condition -> IF LP expresion condRP block con2 .)
    RE              reduce using rule 105 (condition -> IF LP expresion condRP block con2 .)
    REC             reduce using rule 105 (condition -> IF LP expresion condRP block con2 .)
    TRI             reduce using rule 105 (condition -> IF LP expresion condRP block con2 .)
    POL             reduce using rule 105 (condition -> IF LP expresion condRP block con2 .)
    LS              reduce using rule 105 (condition -> IF LP expresion condRP block con2 .)
    CIR             reduce using rule 105 (condition -> IF LP expresion condRP block con2 .)
    SQ              reduce using rule 105 (condition -> IF LP expresion condRP block con2 .)
    ARC             reduce using rule 105 (condition -> IF LP expresion condRP block con2 .)
    PENC            reduce using rule 105 (condition -> IF LP expresion condRP block con2 .)
    SETC            reduce using rule 105 (condition -> IF LP expresion condRP block con2 .)
    BACO            reduce using rule 105 (condition -> IF LP expresion condRP block con2 .)
    PENW            reduce using rule 105 (condition -> IF LP expresion condRP block con2 .)
    F               reduce using rule 105 (condition -> IF LP expresion condRP block con2 .)
    B               reduce using rule 105 (condition -> IF LP expresion condRP block con2 .)
    PENP            reduce using rule 105 (condition -> IF LP expresion condRP block con2 .)
    PENU            reduce using rule 105 (condition -> IF LP expresion condRP block con2 .)
    PEND            reduce using rule 105 (condition -> IF LP expresion condRP block con2 .)
    RB              reduce using rule 105 (condition -> IF LP expresion condRP block con2 .)


state 265

    (108) con2 -> con3 . block
    (110) block -> . LB block3 RB

    LB              shift and go to state 36

    block                          shift and go to state 278

state 266

    (109) con3 -> ELSE .

    LB              reduce using rule 109 (con3 -> ELSE .)


state 267

    (107) con2 -> empty .

    IF              reduce using rule 107 (con2 -> empty .)
    LA              reduce using rule 107 (con2 -> empty .)
    L               reduce using rule 107 (con2 -> empty .)
    ID              reduce using rule 107 (con2 -> empty .)
    RE              reduce using rule 107 (con2 -> empty .)
    REC             reduce using rule 107 (con2 -> empty .)
    TRI             reduce using rule 107 (con2 -> empty .)
    POL             reduce using rule 107 (con2 -> empty .)
    LS              reduce using rule 107 (con2 -> empty .)
    CIR             reduce using rule 107 (con2 -> empty .)
    SQ              reduce using rule 107 (con2 -> empty .)
    ARC             reduce using rule 107 (con2 -> empty .)
    PENC            reduce using rule 107 (con2 -> empty .)
    SETC            reduce using rule 107 (con2 -> empty .)
    BACO            reduce using rule 107 (con2 -> empty .)
    PENW            reduce using rule 107 (con2 -> empty .)
    F               reduce using rule 107 (con2 -> empty .)
    B               reduce using rule 107 (con2 -> empty .)
    PENP            reduce using rule 107 (con2 -> empty .)
    PENU            reduce using rule 107 (con2 -> empty .)
    PEND            reduce using rule 107 (con2 -> empty .)
    RB              reduce using rule 107 (con2 -> empty .)


state 268

    (46) one_par -> CIR LP exp p_fill RP SC .

    IF              reduce using rule 46 (one_par -> CIR LP exp p_fill RP SC .)
    LA              reduce using rule 46 (one_par -> CIR LP exp p_fill RP SC .)
    L               reduce using rule 46 (one_par -> CIR LP exp p_fill RP SC .)
    ID              reduce using rule 46 (one_par -> CIR LP exp p_fill RP SC .)
    RE              reduce using rule 46 (one_par -> CIR LP exp p_fill RP SC .)
    REC             reduce using rule 46 (one_par -> CIR LP exp p_fill RP SC .)
    TRI             reduce using rule 46 (one_par -> CIR LP exp p_fill RP SC .)
    POL             reduce using rule 46 (one_par -> CIR LP exp p_fill RP SC .)
    LS              reduce using rule 46 (one_par -> CIR LP exp p_fill RP SC .)
    CIR             reduce using rule 46 (one_par -> CIR LP exp p_fill RP SC .)
    SQ              reduce using rule 46 (one_par -> CIR LP exp p_fill RP SC .)
    ARC             reduce using rule 46 (one_par -> CIR LP exp p_fill RP SC .)
    PENC            reduce using rule 46 (one_par -> CIR LP exp p_fill RP SC .)
    SETC            reduce using rule 46 (one_par -> CIR LP exp p_fill RP SC .)
    BACO            reduce using rule 46 (one_par -> CIR LP exp p_fill RP SC .)
    PENW            reduce using rule 46 (one_par -> CIR LP exp p_fill RP SC .)
    F               reduce using rule 46 (one_par -> CIR LP exp p_fill RP SC .)
    B               reduce using rule 46 (one_par -> CIR LP exp p_fill RP SC .)
    PENP            reduce using rule 46 (one_par -> CIR LP exp p_fill RP SC .)
    PENU            reduce using rule 46 (one_par -> CIR LP exp p_fill RP SC .)
    PEND            reduce using rule 46 (one_par -> CIR LP exp p_fill RP SC .)
    RB              reduce using rule 46 (one_par -> CIR LP exp p_fill RP SC .)


state 269

    (47) one_par -> SQ LP exp p_fill RP SC .

    IF              reduce using rule 47 (one_par -> SQ LP exp p_fill RP SC .)
    LA              reduce using rule 47 (one_par -> SQ LP exp p_fill RP SC .)
    L               reduce using rule 47 (one_par -> SQ LP exp p_fill RP SC .)
    ID              reduce using rule 47 (one_par -> SQ LP exp p_fill RP SC .)
    RE              reduce using rule 47 (one_par -> SQ LP exp p_fill RP SC .)
    REC             reduce using rule 47 (one_par -> SQ LP exp p_fill RP SC .)
    TRI             reduce using rule 47 (one_par -> SQ LP exp p_fill RP SC .)
    POL             reduce using rule 47 (one_par -> SQ LP exp p_fill RP SC .)
    LS              reduce using rule 47 (one_par -> SQ LP exp p_fill RP SC .)
    CIR             reduce using rule 47 (one_par -> SQ LP exp p_fill RP SC .)
    SQ              reduce using rule 47 (one_par -> SQ LP exp p_fill RP SC .)
    ARC             reduce using rule 47 (one_par -> SQ LP exp p_fill RP SC .)
    PENC            reduce using rule 47 (one_par -> SQ LP exp p_fill RP SC .)
    SETC            reduce using rule 47 (one_par -> SQ LP exp p_fill RP SC .)
    BACO            reduce using rule 47 (one_par -> SQ LP exp p_fill RP SC .)
    PENW            reduce using rule 47 (one_par -> SQ LP exp p_fill RP SC .)
    F               reduce using rule 47 (one_par -> SQ LP exp p_fill RP SC .)
    B               reduce using rule 47 (one_par -> SQ LP exp p_fill RP SC .)
    PENP            reduce using rule 47 (one_par -> SQ LP exp p_fill RP SC .)
    PENU            reduce using rule 47 (one_par -> SQ LP exp p_fill RP SC .)
    PEND            reduce using rule 47 (one_par -> SQ LP exp p_fill RP SC .)
    RB              reduce using rule 47 (one_par -> SQ LP exp p_fill RP SC .)


state 270

    (34) colors -> SETC LP exp C exp C . exp RP SC
    (59) exp -> . term exp2
    (64) term -> . fact term2
    (69) fact -> . fact2 exp RP
    (70) fact -> . fact4
    (71) fact2 -> . LP
    (72) fact4 -> . valExp
    (73) fact4 -> . ID
    (74) valExp -> . VALI
    (75) valExp -> . VALF

    LP              shift and go to state 102
    ID              shift and go to state 107
    VALI            shift and go to state 103
    VALF            shift and go to state 104

    term                           shift and go to state 100
    valExp                         shift and go to state 101
    exp                            shift and go to state 279
    fact2                          shift and go to state 106
    fact                           shift and go to state 108
    fact4                          shift and go to state 109

state 271

    (32) position -> PENP LP exp C exp RP SC .

    IF              reduce using rule 32 (position -> PENP LP exp C exp RP SC .)
    LA              reduce using rule 32 (position -> PENP LP exp C exp RP SC .)
    L               reduce using rule 32 (position -> PENP LP exp C exp RP SC .)
    ID              reduce using rule 32 (position -> PENP LP exp C exp RP SC .)
    RE              reduce using rule 32 (position -> PENP LP exp C exp RP SC .)
    REC             reduce using rule 32 (position -> PENP LP exp C exp RP SC .)
    TRI             reduce using rule 32 (position -> PENP LP exp C exp RP SC .)
    POL             reduce using rule 32 (position -> PENP LP exp C exp RP SC .)
    LS              reduce using rule 32 (position -> PENP LP exp C exp RP SC .)
    CIR             reduce using rule 32 (position -> PENP LP exp C exp RP SC .)
    SQ              reduce using rule 32 (position -> PENP LP exp C exp RP SC .)
    ARC             reduce using rule 32 (position -> PENP LP exp C exp RP SC .)
    PENC            reduce using rule 32 (position -> PENP LP exp C exp RP SC .)
    SETC            reduce using rule 32 (position -> PENP LP exp C exp RP SC .)
    BACO            reduce using rule 32 (position -> PENP LP exp C exp RP SC .)
    PENW            reduce using rule 32 (position -> PENP LP exp C exp RP SC .)
    F               reduce using rule 32 (position -> PENP LP exp C exp RP SC .)
    B               reduce using rule 32 (position -> PENP LP exp C exp RP SC .)
    PENP            reduce using rule 32 (position -> PENP LP exp C exp RP SC .)
    PENU            reduce using rule 32 (position -> PENP LP exp C exp RP SC .)
    PEND            reduce using rule 32 (position -> PENP LP exp C exp RP SC .)
    RB              reduce using rule 32 (position -> PENP LP exp C exp RP SC .)


state 272

    (35) colors -> BACO LP exp C exp C exp . RP SC

    RP              shift and go to state 280


state 273

    (42) rect -> REC LP exp C exp p_fill RP . SC

    SC              shift and go to state 281


state 274

    (33) colors -> PENC LP exp C exp C exp . RP SC

    RP              shift and go to state 282


state 275

    (45) tria -> TRI LP exp C exp C exp . p_fill RP SC
    (43) p_fill -> . C FILL
    (44) p_fill -> . empty
    (131) empty -> .

    C               shift and go to state 196
    RP              reduce using rule 131 (empty -> .)

    empty                          shift and go to state 198
    p_fill                         shift and go to state 283

state 276

    (41) mueve2 -> LP exp C A exp RP . SC

    SC              shift and go to state 284


state 277

    (98) li4 -> C lista2 li4 .

    RB              reduce using rule 98 (li4 -> C lista2 li4 .)


state 278

    (108) con2 -> con3 block .

    IF              reduce using rule 108 (con2 -> con3 block .)
    LA              reduce using rule 108 (con2 -> con3 block .)
    L               reduce using rule 108 (con2 -> con3 block .)
    ID              reduce using rule 108 (con2 -> con3 block .)
    RE              reduce using rule 108 (con2 -> con3 block .)
    REC             reduce using rule 108 (con2 -> con3 block .)
    TRI             reduce using rule 108 (con2 -> con3 block .)
    POL             reduce using rule 108 (con2 -> con3 block .)
    LS              reduce using rule 108 (con2 -> con3 block .)
    CIR             reduce using rule 108 (con2 -> con3 block .)
    SQ              reduce using rule 108 (con2 -> con3 block .)
    ARC             reduce using rule 108 (con2 -> con3 block .)
    PENC            reduce using rule 108 (con2 -> con3 block .)
    SETC            reduce using rule 108 (con2 -> con3 block .)
    BACO            reduce using rule 108 (con2 -> con3 block .)
    PENW            reduce using rule 108 (con2 -> con3 block .)
    F               reduce using rule 108 (con2 -> con3 block .)
    B               reduce using rule 108 (con2 -> con3 block .)
    PENP            reduce using rule 108 (con2 -> con3 block .)
    PENU            reduce using rule 108 (con2 -> con3 block .)
    PEND            reduce using rule 108 (con2 -> con3 block .)
    RB              reduce using rule 108 (con2 -> con3 block .)


state 279

    (34) colors -> SETC LP exp C exp C exp . RP SC

    RP              shift and go to state 285


state 280

    (35) colors -> BACO LP exp C exp C exp RP . SC

    SC              shift and go to state 286


state 281

    (42) rect -> REC LP exp C exp p_fill RP SC .

    IF              reduce using rule 42 (rect -> REC LP exp C exp p_fill RP SC .)
    LA              reduce using rule 42 (rect -> REC LP exp C exp p_fill RP SC .)
    L               reduce using rule 42 (rect -> REC LP exp C exp p_fill RP SC .)
    ID              reduce using rule 42 (rect -> REC LP exp C exp p_fill RP SC .)
    RE              reduce using rule 42 (rect -> REC LP exp C exp p_fill RP SC .)
    REC             reduce using rule 42 (rect -> REC LP exp C exp p_fill RP SC .)
    TRI             reduce using rule 42 (rect -> REC LP exp C exp p_fill RP SC .)
    POL             reduce using rule 42 (rect -> REC LP exp C exp p_fill RP SC .)
    LS              reduce using rule 42 (rect -> REC LP exp C exp p_fill RP SC .)
    CIR             reduce using rule 42 (rect -> REC LP exp C exp p_fill RP SC .)
    SQ              reduce using rule 42 (rect -> REC LP exp C exp p_fill RP SC .)
    ARC             reduce using rule 42 (rect -> REC LP exp C exp p_fill RP SC .)
    PENC            reduce using rule 42 (rect -> REC LP exp C exp p_fill RP SC .)
    SETC            reduce using rule 42 (rect -> REC LP exp C exp p_fill RP SC .)
    BACO            reduce using rule 42 (rect -> REC LP exp C exp p_fill RP SC .)
    PENW            reduce using rule 42 (rect -> REC LP exp C exp p_fill RP SC .)
    F               reduce using rule 42 (rect -> REC LP exp C exp p_fill RP SC .)
    B               reduce using rule 42 (rect -> REC LP exp C exp p_fill RP SC .)
    PENP            reduce using rule 42 (rect -> REC LP exp C exp p_fill RP SC .)
    PENU            reduce using rule 42 (rect -> REC LP exp C exp p_fill RP SC .)
    PEND            reduce using rule 42 (rect -> REC LP exp C exp p_fill RP SC .)
    RB              reduce using rule 42 (rect -> REC LP exp C exp p_fill RP SC .)


state 282

    (33) colors -> PENC LP exp C exp C exp RP . SC

    SC              shift and go to state 287


state 283

    (45) tria -> TRI LP exp C exp C exp p_fill . RP SC

    RP              shift and go to state 288


state 284

    (41) mueve2 -> LP exp C A exp RP SC .

    IF              reduce using rule 41 (mueve2 -> LP exp C A exp RP SC .)
    LA              reduce using rule 41 (mueve2 -> LP exp C A exp RP SC .)
    L               reduce using rule 41 (mueve2 -> LP exp C A exp RP SC .)
    ID              reduce using rule 41 (mueve2 -> LP exp C A exp RP SC .)
    RE              reduce using rule 41 (mueve2 -> LP exp C A exp RP SC .)
    REC             reduce using rule 41 (mueve2 -> LP exp C A exp RP SC .)
    TRI             reduce using rule 41 (mueve2 -> LP exp C A exp RP SC .)
    POL             reduce using rule 41 (mueve2 -> LP exp C A exp RP SC .)
    LS              reduce using rule 41 (mueve2 -> LP exp C A exp RP SC .)
    CIR             reduce using rule 41 (mueve2 -> LP exp C A exp RP SC .)
    SQ              reduce using rule 41 (mueve2 -> LP exp C A exp RP SC .)
    ARC             reduce using rule 41 (mueve2 -> LP exp C A exp RP SC .)
    PENC            reduce using rule 41 (mueve2 -> LP exp C A exp RP SC .)
    SETC            reduce using rule 41 (mueve2 -> LP exp C A exp RP SC .)
    BACO            reduce using rule 41 (mueve2 -> LP exp C A exp RP SC .)
    PENW            reduce using rule 41 (mueve2 -> LP exp C A exp RP SC .)
    F               reduce using rule 41 (mueve2 -> LP exp C A exp RP SC .)
    B               reduce using rule 41 (mueve2 -> LP exp C A exp RP SC .)
    PENP            reduce using rule 41 (mueve2 -> LP exp C A exp RP SC .)
    PENU            reduce using rule 41 (mueve2 -> LP exp C A exp RP SC .)
    PEND            reduce using rule 41 (mueve2 -> LP exp C A exp RP SC .)
    RB              reduce using rule 41 (mueve2 -> LP exp C A exp RP SC .)


state 285

    (34) colors -> SETC LP exp C exp C exp RP . SC

    SC              shift and go to state 289


state 286

    (35) colors -> BACO LP exp C exp C exp RP SC .

    IF              reduce using rule 35 (colors -> BACO LP exp C exp C exp RP SC .)
    LA              reduce using rule 35 (colors -> BACO LP exp C exp C exp RP SC .)
    L               reduce using rule 35 (colors -> BACO LP exp C exp C exp RP SC .)
    ID              reduce using rule 35 (colors -> BACO LP exp C exp C exp RP SC .)
    RE              reduce using rule 35 (colors -> BACO LP exp C exp C exp RP SC .)
    REC             reduce using rule 35 (colors -> BACO LP exp C exp C exp RP SC .)
    TRI             reduce using rule 35 (colors -> BACO LP exp C exp C exp RP SC .)
    POL             reduce using rule 35 (colors -> BACO LP exp C exp C exp RP SC .)
    LS              reduce using rule 35 (colors -> BACO LP exp C exp C exp RP SC .)
    CIR             reduce using rule 35 (colors -> BACO LP exp C exp C exp RP SC .)
    SQ              reduce using rule 35 (colors -> BACO LP exp C exp C exp RP SC .)
    ARC             reduce using rule 35 (colors -> BACO LP exp C exp C exp RP SC .)
    PENC            reduce using rule 35 (colors -> BACO LP exp C exp C exp RP SC .)
    SETC            reduce using rule 35 (colors -> BACO LP exp C exp C exp RP SC .)
    BACO            reduce using rule 35 (colors -> BACO LP exp C exp C exp RP SC .)
    PENW            reduce using rule 35 (colors -> BACO LP exp C exp C exp RP SC .)
    F               reduce using rule 35 (colors -> BACO LP exp C exp C exp RP SC .)
    B               reduce using rule 35 (colors -> BACO LP exp C exp C exp RP SC .)
    PENP            reduce using rule 35 (colors -> BACO LP exp C exp C exp RP SC .)
    PENU            reduce using rule 35 (colors -> BACO LP exp C exp C exp RP SC .)
    PEND            reduce using rule 35 (colors -> BACO LP exp C exp C exp RP SC .)
    RB              reduce using rule 35 (colors -> BACO LP exp C exp C exp RP SC .)


state 287

    (33) colors -> PENC LP exp C exp C exp RP SC .

    IF              reduce using rule 33 (colors -> PENC LP exp C exp C exp RP SC .)
    LA              reduce using rule 33 (colors -> PENC LP exp C exp C exp RP SC .)
    L               reduce using rule 33 (colors -> PENC LP exp C exp C exp RP SC .)
    ID              reduce using rule 33 (colors -> PENC LP exp C exp C exp RP SC .)
    RE              reduce using rule 33 (colors -> PENC LP exp C exp C exp RP SC .)
    REC             reduce using rule 33 (colors -> PENC LP exp C exp C exp RP SC .)
    TRI             reduce using rule 33 (colors -> PENC LP exp C exp C exp RP SC .)
    POL             reduce using rule 33 (colors -> PENC LP exp C exp C exp RP SC .)
    LS              reduce using rule 33 (colors -> PENC LP exp C exp C exp RP SC .)
    CIR             reduce using rule 33 (colors -> PENC LP exp C exp C exp RP SC .)
    SQ              reduce using rule 33 (colors -> PENC LP exp C exp C exp RP SC .)
    ARC             reduce using rule 33 (colors -> PENC LP exp C exp C exp RP SC .)
    PENC            reduce using rule 33 (colors -> PENC LP exp C exp C exp RP SC .)
    SETC            reduce using rule 33 (colors -> PENC LP exp C exp C exp RP SC .)
    BACO            reduce using rule 33 (colors -> PENC LP exp C exp C exp RP SC .)
    PENW            reduce using rule 33 (colors -> PENC LP exp C exp C exp RP SC .)
    F               reduce using rule 33 (colors -> PENC LP exp C exp C exp RP SC .)
    B               reduce using rule 33 (colors -> PENC LP exp C exp C exp RP SC .)
    PENP            reduce using rule 33 (colors -> PENC LP exp C exp C exp RP SC .)
    PENU            reduce using rule 33 (colors -> PENC LP exp C exp C exp RP SC .)
    PEND            reduce using rule 33 (colors -> PENC LP exp C exp C exp RP SC .)
    RB              reduce using rule 33 (colors -> PENC LP exp C exp C exp RP SC .)


state 288

    (45) tria -> TRI LP exp C exp C exp p_fill RP . SC

    SC              shift and go to state 290


state 289

    (34) colors -> SETC LP exp C exp C exp RP SC .

    IF              reduce using rule 34 (colors -> SETC LP exp C exp C exp RP SC .)
    LA              reduce using rule 34 (colors -> SETC LP exp C exp C exp RP SC .)
    L               reduce using rule 34 (colors -> SETC LP exp C exp C exp RP SC .)
    ID              reduce using rule 34 (colors -> SETC LP exp C exp C exp RP SC .)
    RE              reduce using rule 34 (colors -> SETC LP exp C exp C exp RP SC .)
    REC             reduce using rule 34 (colors -> SETC LP exp C exp C exp RP SC .)
    TRI             reduce using rule 34 (colors -> SETC LP exp C exp C exp RP SC .)
    POL             reduce using rule 34 (colors -> SETC LP exp C exp C exp RP SC .)
    LS              reduce using rule 34 (colors -> SETC LP exp C exp C exp RP SC .)
    CIR             reduce using rule 34 (colors -> SETC LP exp C exp C exp RP SC .)
    SQ              reduce using rule 34 (colors -> SETC LP exp C exp C exp RP SC .)
    ARC             reduce using rule 34 (colors -> SETC LP exp C exp C exp RP SC .)
    PENC            reduce using rule 34 (colors -> SETC LP exp C exp C exp RP SC .)
    SETC            reduce using rule 34 (colors -> SETC LP exp C exp C exp RP SC .)
    BACO            reduce using rule 34 (colors -> SETC LP exp C exp C exp RP SC .)
    PENW            reduce using rule 34 (colors -> SETC LP exp C exp C exp RP SC .)
    F               reduce using rule 34 (colors -> SETC LP exp C exp C exp RP SC .)
    B               reduce using rule 34 (colors -> SETC LP exp C exp C exp RP SC .)
    PENP            reduce using rule 34 (colors -> SETC LP exp C exp C exp RP SC .)
    PENU            reduce using rule 34 (colors -> SETC LP exp C exp C exp RP SC .)
    PEND            reduce using rule 34 (colors -> SETC LP exp C exp C exp RP SC .)
    RB              reduce using rule 34 (colors -> SETC LP exp C exp C exp RP SC .)


state 290

    (45) tria -> TRI LP exp C exp C exp p_fill RP SC .

    IF              reduce using rule 45 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    LA              reduce using rule 45 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    L               reduce using rule 45 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    ID              reduce using rule 45 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    RE              reduce using rule 45 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    REC             reduce using rule 45 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    TRI             reduce using rule 45 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    POL             reduce using rule 45 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    LS              reduce using rule 45 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    CIR             reduce using rule 45 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    SQ              reduce using rule 45 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    ARC             reduce using rule 45 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    PENC            reduce using rule 45 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    SETC            reduce using rule 45 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    BACO            reduce using rule 45 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    PENW            reduce using rule 45 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    F               reduce using rule 45 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    B               reduce using rule 45 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    PENP            reduce using rule 45 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    PENU            reduce using rule 45 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    PEND            reduce using rule 45 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    RB              reduce using rule 45 (tria -> TRI LP exp C exp C exp p_fill RP SC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ADD in state 100 resolved as shift
