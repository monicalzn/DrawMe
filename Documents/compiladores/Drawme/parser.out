Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> PR p2 p3 MAIN mainVDir block
Rule 2     mainVDir -> vars
Rule 3     p2 -> globals
Rule 4     p2 -> empty
Rule 5     p3 -> functions p3
Rule 6     p3 -> empty
Rule 7     globals -> GL vars
Rule 8     functions -> fun2 DP funVDir block
Rule 9     funVDir -> vars
Rule 10    fun2 -> FUN ID LP fun3 RP
Rule 11    fun3 -> fun5 fun4
Rule 12    fun3 -> empty
Rule 13    fun4 -> C fun5 fun4
Rule 14    fun4 -> empty
Rule 15    fun5 -> type ID
Rule 16    vars -> V var2 var5
Rule 17    vars -> empty
Rule 18    var2 -> type var3 SC var2
Rule 19    var2 -> empty
Rule 20    var3 -> ID var4 var33
Rule 21    var33 -> C ID var4 var33
Rule 22    var33 -> empty
Rule 23    var4 -> EQ exp
Rule 24    var4 -> empty
Rule 25    var5 -> list var5
Rule 26    var5 -> empty
Rule 27    type -> INT
Rule 28    type -> FLOAT
Rule 29    val -> VALI
Rule 30    val -> VALF
Rule 31    position -> PENP LP exp C exp RP SC
Rule 32    colors -> PENC LP exp C exp C exp RP SC
Rule 33    colors -> SETC LP exp C exp C exp RP SC
Rule 34    colors -> BACO LP exp C exp C exp RP SC
Rule 35    p_width -> PENW LP exp RP SC
Rule 36    penwrite -> PENU SC
Rule 37    penwrite -> PEND SC
Rule 38    move -> F mueve2
Rule 39    move -> B mueve2
Rule 40    mueve2 -> LP exp C A exp RP SC
Rule 41    rect -> REC LP exp C exp p_fill RP SC
Rule 42    p_fill -> C FILL
Rule 43    p_fill -> empty
Rule 44    tria -> TRI LP exp C exp C exp p_fill RP SC
Rule 45    one_par -> CIR LP exp p_fill RP SC
Rule 46    one_par -> SQ LP exp p_fill RP SC
Rule 47    poly -> POL LP idList p_fill RP SC
Rule 48    lstrip -> LS LP idList RP SC
Rule 49    idList -> ID
Rule 50    p_arc -> ARC LP exp RP SC
Rule 51    expresion -> exp ex2
Rule 52    ex2 -> ex3 exp
Rule 53    ex2 -> empty
Rule 54    ex3 -> LT
Rule 55    ex3 -> MT
Rule 56    ex3 -> D
Rule 57    ex3 -> SEQ
Rule 58    exp -> term exp2
Rule 59    exp2 -> exp3 exp
Rule 60    exp2 -> empty
Rule 61    exp3 -> ADD
Rule 62    exp3 -> SUB
Rule 63    term -> fact term2
Rule 64    term2 -> term3 term
Rule 65    term2 -> empty
Rule 66    term3 -> M
Rule 67    term3 -> DIV
Rule 68    fact -> fact2 exp RP
Rule 69    fact -> fact4
Rule 70    fact2 -> LP
Rule 71    fact4 -> valExp
Rule 72    fact4 -> ID
Rule 73    valExp -> VALI
Rule 74    valExp -> VALF
Rule 75    rep -> RE rep3 block
Rule 76    rep3 -> exp
Rule 77    WID -> ID WID2
Rule 78    WID2 -> assigment
Rule 79    WID2 -> funCall
Rule 80    assigment -> EQ tipeAss
Rule 81    tipeAss -> varAss
Rule 82    tipeAss -> listAss
Rule 83    varAss -> exp SC
Rule 84    funCall -> LP func2 RP SC
Rule 85    func2 -> func4 func3
Rule 86    func2 -> empty
Rule 87    func3 -> C func4 func3
Rule 88    func3 -> empty
Rule 89    func4 -> exp
Rule 90    list -> L type ID prelistAss
Rule 91    prelistAss -> EQ listAss
Rule 92    prelistAss -> SC
Rule 93    listAss -> LB lista3 RB SC
Rule 94    lista2 -> val
Rule 95    lista2 -> ID
Rule 96    lista3 -> lista2 li4
Rule 97    li4 -> C lista2 li4
Rule 98    li4 -> empty
Rule 99    lab -> LA LP stExp lab2 RP SC
Rule 100   lab2 -> ADD stExp lab2
Rule 101   lab2 -> empty
Rule 102   stExp -> STR
Rule 103   stExp -> exp
Rule 104   condition -> IF LP expresion condRP block con2
Rule 105   condRP -> RP
Rule 106   con2 -> empty
Rule 107   con2 -> con3 block
Rule 108   con3 -> ELSE
Rule 109   block -> LB block3 RB
Rule 110   block3 -> block2 block3
Rule 111   block3 -> empty
Rule 112   figure -> rect
Rule 113   figure -> tria
Rule 114   figure -> poly
Rule 115   figure -> lstrip
Rule 116   figure -> one_par
Rule 117   figure -> p_arc
Rule 118   pen -> colors
Rule 119   pen -> p_width
Rule 120   pen -> move
Rule 121   pen -> position
Rule 122   pen -> penwrite
Rule 123   block2 -> figure
Rule 124   block2 -> condition
Rule 125   block2 -> pen
Rule 126   block2 -> lab
Rule 127   block2 -> list
Rule 128   block2 -> WID
Rule 129   block2 -> rep
Rule 130   empty -> <empty>

Terminals, with rules where they appear

A                    : 40
ADD                  : 61 100
ARC                  : 50
B                    : 39
BACO                 : 34
C                    : 13 21 31 32 32 33 33 34 34 40 41 42 44 44 87 97
CIR                  : 45
D                    : 56
DIV                  : 67
DP                   : 8
ELSE                 : 108
EQ                   : 23 80 91
F                    : 38
FILL                 : 42
FLOAT                : 28
FUN                  : 10
GL                   : 7
ID                   : 10 15 20 21 49 72 77 90 95
IF                   : 104
INT                  : 27
L                    : 90
LA                   : 99
LB                   : 93 109
LP                   : 10 31 32 33 34 35 40 41 44 45 46 47 48 50 70 84 99 104
LS                   : 48
LT                   : 54
M                    : 66
MAIN                 : 1
MT                   : 55
PENC                 : 32
PEND                 : 37
PENP                 : 31
PENU                 : 36
PENW                 : 35
POL                  : 47
PR                   : 1
RB                   : 93 109
RE                   : 75
REC                  : 41
RP                   : 10 31 32 33 34 35 40 41 44 45 46 47 48 50 68 84 99 105
SC                   : 18 31 32 33 34 35 36 37 40 41 44 45 46 47 48 50 83 84 92 93 99
SEQ                  : 57
SETC                 : 33
SQ                   : 46
STR                  : 102
SUB                  : 62
TRI                  : 44
V                    : 16
VALF                 : 30 74
VALI                 : 29 73
error                : 

Nonterminals, with rules where they appear

WID                  : 128
WID2                 : 77
assigment            : 78
block                : 1 8 75 104 107
block2               : 110
block3               : 109 110
colors               : 118
con2                 : 104
con3                 : 107
condRP               : 104
condition            : 124
empty                : 4 6 12 14 17 19 22 24 26 43 53 60 65 86 88 98 101 106 111
ex2                  : 51
ex3                  : 52
exp                  : 23 31 31 32 32 32 33 33 33 34 34 34 35 40 40 41 41 44 44 44 45 46 50 51 52 59 68 76 83 89 103
exp2                 : 58
exp3                 : 59
expresion            : 104
fact                 : 63
fact2                : 68
fact4                : 69
figure               : 123
fun2                 : 8
fun3                 : 10
fun4                 : 11 13
fun5                 : 11 13
funCall              : 79
funVDir              : 8
func2                : 84
func3                : 85 87
func4                : 85 87
functions            : 5
globals              : 3
idList               : 47 48
lab                  : 126
lab2                 : 99 100
li4                  : 96 97
list                 : 25 127
listAss              : 82 91
lista2               : 96 97
lista3               : 93
lstrip               : 115
mainVDir             : 1
move                 : 120
mueve2               : 38 39
one_par              : 116
p2                   : 1
p3                   : 1 5
p_arc                : 117
p_fill               : 41 44 45 46 47
p_width              : 119
pen                  : 125
penwrite             : 122
poly                 : 114
position             : 121
prelistAss           : 90
prog                 : 0
rect                 : 112
rep                  : 129
rep3                 : 75
stExp                : 99 100
term                 : 58 64
term2                : 63
term3                : 64
tipeAss              : 80
tria                 : 113
type                 : 15 18 90
val                  : 94
valExp               : 71
var2                 : 16 18
var3                 : 18
var33                : 20 21
var4                 : 20 21
var5                 : 16 25
varAss               : 81
vars                 : 2 7 9

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . PR p2 p3 MAIN mainVDir block

    PR              shift and go to state 1

    prog                           shift and go to state 2

state 1

    (1) prog -> PR . p2 p3 MAIN mainVDir block
    (3) p2 -> . globals
    (4) p2 -> . empty
    (7) globals -> . GL vars
    (130) empty -> .

    GL              shift and go to state 4
    FUN             reduce using rule 130 (empty -> .)
    MAIN            reduce using rule 130 (empty -> .)

    p2                             shift and go to state 3
    globals                        shift and go to state 5
    empty                          shift and go to state 6

state 2

    (0) S' -> prog .



state 3

    (1) prog -> PR p2 . p3 MAIN mainVDir block
    (5) p3 -> . functions p3
    (6) p3 -> . empty
    (8) functions -> . fun2 DP funVDir block
    (130) empty -> .
    (10) fun2 -> . FUN ID LP fun3 RP

    MAIN            reduce using rule 130 (empty -> .)
    FUN             shift and go to state 11

    p3                             shift and go to state 8
    functions                      shift and go to state 7
    fun2                           shift and go to state 9
    empty                          shift and go to state 10

state 4

    (7) globals -> GL . vars
    (16) vars -> . V var2 var5
    (17) vars -> . empty
    (130) empty -> .

    V               shift and go to state 13
    FUN             reduce using rule 130 (empty -> .)
    MAIN            reduce using rule 130 (empty -> .)

    empty                          shift and go to state 14
    vars                           shift and go to state 12

state 5

    (3) p2 -> globals .

    FUN             reduce using rule 3 (p2 -> globals .)
    MAIN            reduce using rule 3 (p2 -> globals .)


state 6

    (4) p2 -> empty .

    FUN             reduce using rule 4 (p2 -> empty .)
    MAIN            reduce using rule 4 (p2 -> empty .)


state 7

    (5) p3 -> functions . p3
    (5) p3 -> . functions p3
    (6) p3 -> . empty
    (8) functions -> . fun2 DP funVDir block
    (130) empty -> .
    (10) fun2 -> . FUN ID LP fun3 RP

    MAIN            reduce using rule 130 (empty -> .)
    FUN             shift and go to state 11

    p3                             shift and go to state 15
    functions                      shift and go to state 7
    fun2                           shift and go to state 9
    empty                          shift and go to state 10

state 8

    (1) prog -> PR p2 p3 . MAIN mainVDir block

    MAIN            shift and go to state 16


state 9

    (8) functions -> fun2 . DP funVDir block

    DP              shift and go to state 17


state 10

    (6) p3 -> empty .

    MAIN            reduce using rule 6 (p3 -> empty .)


state 11

    (10) fun2 -> FUN . ID LP fun3 RP

    ID              shift and go to state 18


state 12

    (7) globals -> GL vars .

    FUN             reduce using rule 7 (globals -> GL vars .)
    MAIN            reduce using rule 7 (globals -> GL vars .)


state 13

    (16) vars -> V . var2 var5
    (18) var2 -> . type var3 SC var2
    (19) var2 -> . empty
    (27) type -> . INT
    (28) type -> . FLOAT
    (130) empty -> .

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    L               reduce using rule 130 (empty -> .)
    FUN             reduce using rule 130 (empty -> .)
    MAIN            reduce using rule 130 (empty -> .)
    LB              reduce using rule 130 (empty -> .)

    type                           shift and go to state 22
    empty                          shift and go to state 23
    var2                           shift and go to state 19

state 14

    (17) vars -> empty .

    FUN             reduce using rule 17 (vars -> empty .)
    MAIN            reduce using rule 17 (vars -> empty .)
    LB              reduce using rule 17 (vars -> empty .)


state 15

    (5) p3 -> functions p3 .

    MAIN            reduce using rule 5 (p3 -> functions p3 .)


state 16

    (1) prog -> PR p2 p3 MAIN . mainVDir block
    (2) mainVDir -> . vars
    (16) vars -> . V var2 var5
    (17) vars -> . empty
    (130) empty -> .

    V               shift and go to state 13
    LB              reduce using rule 130 (empty -> .)

    vars                           shift and go to state 24
    mainVDir                       shift and go to state 25
    empty                          shift and go to state 14

state 17

    (8) functions -> fun2 DP . funVDir block
    (9) funVDir -> . vars
    (16) vars -> . V var2 var5
    (17) vars -> . empty
    (130) empty -> .

    V               shift and go to state 13
    LB              reduce using rule 130 (empty -> .)

    vars                           shift and go to state 26
    empty                          shift and go to state 14
    funVDir                        shift and go to state 27

state 18

    (10) fun2 -> FUN ID . LP fun3 RP

    LP              shift and go to state 28


state 19

    (16) vars -> V var2 . var5
    (25) var5 -> . list var5
    (26) var5 -> . empty
    (90) list -> . L type ID prelistAss
    (130) empty -> .

    L               shift and go to state 31
    FUN             reduce using rule 130 (empty -> .)
    MAIN            reduce using rule 130 (empty -> .)
    LB              reduce using rule 130 (empty -> .)

    var5                           shift and go to state 29
    list                           shift and go to state 30
    empty                          shift and go to state 32

state 20

    (27) type -> INT .

    ID              reduce using rule 27 (type -> INT .)


state 21

    (28) type -> FLOAT .

    ID              reduce using rule 28 (type -> FLOAT .)


state 22

    (18) var2 -> type . var3 SC var2
    (20) var3 -> . ID var4 var33

    ID              shift and go to state 34

    var3                           shift and go to state 33

state 23

    (19) var2 -> empty .

    L               reduce using rule 19 (var2 -> empty .)
    FUN             reduce using rule 19 (var2 -> empty .)
    MAIN            reduce using rule 19 (var2 -> empty .)
    LB              reduce using rule 19 (var2 -> empty .)


state 24

    (2) mainVDir -> vars .

    LB              reduce using rule 2 (mainVDir -> vars .)


state 25

    (1) prog -> PR p2 p3 MAIN mainVDir . block
    (109) block -> . LB block3 RB

    LB              shift and go to state 35

    block                          shift and go to state 36

state 26

    (9) funVDir -> vars .

    LB              reduce using rule 9 (funVDir -> vars .)


state 27

    (8) functions -> fun2 DP funVDir . block
    (109) block -> . LB block3 RB

    LB              shift and go to state 35

    block                          shift and go to state 37

state 28

    (10) fun2 -> FUN ID LP . fun3 RP
    (11) fun3 -> . fun5 fun4
    (12) fun3 -> . empty
    (15) fun5 -> . type ID
    (130) empty -> .
    (27) type -> . INT
    (28) type -> . FLOAT

    RP              reduce using rule 130 (empty -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21

    fun5                           shift and go to state 38
    type                           shift and go to state 40
    empty                          shift and go to state 41
    fun3                           shift and go to state 39

state 29

    (16) vars -> V var2 var5 .

    FUN             reduce using rule 16 (vars -> V var2 var5 .)
    MAIN            reduce using rule 16 (vars -> V var2 var5 .)
    LB              reduce using rule 16 (vars -> V var2 var5 .)


state 30

    (25) var5 -> list . var5
    (25) var5 -> . list var5
    (26) var5 -> . empty
    (90) list -> . L type ID prelistAss
    (130) empty -> .

    L               shift and go to state 31
    FUN             reduce using rule 130 (empty -> .)
    MAIN            reduce using rule 130 (empty -> .)
    LB              reduce using rule 130 (empty -> .)

    var5                           shift and go to state 42
    list                           shift and go to state 30
    empty                          shift and go to state 32

state 31

    (90) list -> L . type ID prelistAss
    (27) type -> . INT
    (28) type -> . FLOAT

    INT             shift and go to state 20
    FLOAT           shift and go to state 21

    type                           shift and go to state 43

state 32

    (26) var5 -> empty .

    FUN             reduce using rule 26 (var5 -> empty .)
    MAIN            reduce using rule 26 (var5 -> empty .)
    LB              reduce using rule 26 (var5 -> empty .)


state 33

    (18) var2 -> type var3 . SC var2

    SC              shift and go to state 44


state 34

    (20) var3 -> ID . var4 var33
    (23) var4 -> . EQ exp
    (24) var4 -> . empty
    (130) empty -> .

    EQ              shift and go to state 46
    C               reduce using rule 130 (empty -> .)
    SC              reduce using rule 130 (empty -> .)

    var4                           shift and go to state 45
    empty                          shift and go to state 47

state 35

    (109) block -> LB . block3 RB
    (110) block3 -> . block2 block3
    (111) block3 -> . empty
    (123) block2 -> . figure
    (124) block2 -> . condition
    (125) block2 -> . pen
    (126) block2 -> . lab
    (127) block2 -> . list
    (128) block2 -> . WID
    (129) block2 -> . rep
    (130) empty -> .
    (112) figure -> . rect
    (113) figure -> . tria
    (114) figure -> . poly
    (115) figure -> . lstrip
    (116) figure -> . one_par
    (117) figure -> . p_arc
    (104) condition -> . IF LP expresion condRP block con2
    (118) pen -> . colors
    (119) pen -> . p_width
    (120) pen -> . move
    (121) pen -> . position
    (122) pen -> . penwrite
    (99) lab -> . LA LP stExp lab2 RP SC
    (90) list -> . L type ID prelistAss
    (77) WID -> . ID WID2
    (75) rep -> . RE rep3 block
    (41) rect -> . REC LP exp C exp p_fill RP SC
    (44) tria -> . TRI LP exp C exp C exp p_fill RP SC
    (47) poly -> . POL LP idList p_fill RP SC
    (48) lstrip -> . LS LP idList RP SC
    (45) one_par -> . CIR LP exp p_fill RP SC
    (46) one_par -> . SQ LP exp p_fill RP SC
    (50) p_arc -> . ARC LP exp RP SC
    (32) colors -> . PENC LP exp C exp C exp RP SC
    (33) colors -> . SETC LP exp C exp C exp RP SC
    (34) colors -> . BACO LP exp C exp C exp RP SC
    (35) p_width -> . PENW LP exp RP SC
    (38) move -> . F mueve2
    (39) move -> . B mueve2
    (31) position -> . PENP LP exp C exp RP SC
    (36) penwrite -> . PENU SC
    (37) penwrite -> . PEND SC

    RB              reduce using rule 130 (empty -> .)
    IF              shift and go to state 78
    LA              shift and go to state 61
    L               shift and go to state 31
    ID              shift and go to state 76
    RE              shift and go to state 64
    REC             shift and go to state 58
    TRI             shift and go to state 71
    POL             shift and go to state 63
    LS              shift and go to state 70
    CIR             shift and go to state 81
    SQ              shift and go to state 82
    ARC             shift and go to state 85
    PENC            shift and go to state 67
    SETC            shift and go to state 83
    BACO            shift and go to state 53
    PENW            shift and go to state 59
    F               shift and go to state 73
    B               shift and go to state 72
    PENP            shift and go to state 48
    PENU            shift and go to state 60
    PEND            shift and go to state 66

    block3                         shift and go to state 49
    block2                         shift and go to state 50
    figure                         shift and go to state 51
    lstrip                         shift and go to state 52
    move                           shift and go to state 54
    tria                           shift and go to state 55
    poly                           shift and go to state 56
    colors                         shift and go to state 57
    rep                            shift and go to state 62
    pen                            shift and go to state 65
    condition                      shift and go to state 68
    empty                          shift and go to state 69
    lab                            shift and go to state 74
    one_par                        shift and go to state 75
    rect                           shift and go to state 77
    WID                            shift and go to state 79
    p_arc                          shift and go to state 80
    list                           shift and go to state 84
    position                       shift and go to state 86
    p_width                        shift and go to state 87
    penwrite                       shift and go to state 88

state 36

    (1) prog -> PR p2 p3 MAIN mainVDir block .

    $end            reduce using rule 1 (prog -> PR p2 p3 MAIN mainVDir block .)


state 37

    (8) functions -> fun2 DP funVDir block .

    FUN             reduce using rule 8 (functions -> fun2 DP funVDir block .)
    MAIN            reduce using rule 8 (functions -> fun2 DP funVDir block .)


state 38

    (11) fun3 -> fun5 . fun4
    (13) fun4 -> . C fun5 fun4
    (14) fun4 -> . empty
    (130) empty -> .

    C               shift and go to state 90
    RP              reduce using rule 130 (empty -> .)

    fun4                           shift and go to state 89
    empty                          shift and go to state 91

state 39

    (10) fun2 -> FUN ID LP fun3 . RP

    RP              shift and go to state 92


state 40

    (15) fun5 -> type . ID

    ID              shift and go to state 93


state 41

    (12) fun3 -> empty .

    RP              reduce using rule 12 (fun3 -> empty .)


state 42

    (25) var5 -> list var5 .

    FUN             reduce using rule 25 (var5 -> list var5 .)
    MAIN            reduce using rule 25 (var5 -> list var5 .)
    LB              reduce using rule 25 (var5 -> list var5 .)


state 43

    (90) list -> L type . ID prelistAss

    ID              shift and go to state 94


state 44

    (18) var2 -> type var3 SC . var2
    (18) var2 -> . type var3 SC var2
    (19) var2 -> . empty
    (27) type -> . INT
    (28) type -> . FLOAT
    (130) empty -> .

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    L               reduce using rule 130 (empty -> .)
    FUN             reduce using rule 130 (empty -> .)
    MAIN            reduce using rule 130 (empty -> .)
    LB              reduce using rule 130 (empty -> .)

    type                           shift and go to state 22
    empty                          shift and go to state 23
    var2                           shift and go to state 95

state 45

    (20) var3 -> ID var4 . var33
    (21) var33 -> . C ID var4 var33
    (22) var33 -> . empty
    (130) empty -> .

    C               shift and go to state 97
    SC              reduce using rule 130 (empty -> .)

    var33                          shift and go to state 96
    empty                          shift and go to state 98

state 46

    (23) var4 -> EQ . exp
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    exp                            shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 107
    fact4                          shift and go to state 108

state 47

    (24) var4 -> empty .

    C               reduce using rule 24 (var4 -> empty .)
    SC              reduce using rule 24 (var4 -> empty .)


state 48

    (31) position -> PENP . LP exp C exp RP SC

    LP              shift and go to state 109


state 49

    (109) block -> LB block3 . RB

    RB              shift and go to state 110


state 50

    (110) block3 -> block2 . block3
    (110) block3 -> . block2 block3
    (111) block3 -> . empty
    (123) block2 -> . figure
    (124) block2 -> . condition
    (125) block2 -> . pen
    (126) block2 -> . lab
    (127) block2 -> . list
    (128) block2 -> . WID
    (129) block2 -> . rep
    (130) empty -> .
    (112) figure -> . rect
    (113) figure -> . tria
    (114) figure -> . poly
    (115) figure -> . lstrip
    (116) figure -> . one_par
    (117) figure -> . p_arc
    (104) condition -> . IF LP expresion condRP block con2
    (118) pen -> . colors
    (119) pen -> . p_width
    (120) pen -> . move
    (121) pen -> . position
    (122) pen -> . penwrite
    (99) lab -> . LA LP stExp lab2 RP SC
    (90) list -> . L type ID prelistAss
    (77) WID -> . ID WID2
    (75) rep -> . RE rep3 block
    (41) rect -> . REC LP exp C exp p_fill RP SC
    (44) tria -> . TRI LP exp C exp C exp p_fill RP SC
    (47) poly -> . POL LP idList p_fill RP SC
    (48) lstrip -> . LS LP idList RP SC
    (45) one_par -> . CIR LP exp p_fill RP SC
    (46) one_par -> . SQ LP exp p_fill RP SC
    (50) p_arc -> . ARC LP exp RP SC
    (32) colors -> . PENC LP exp C exp C exp RP SC
    (33) colors -> . SETC LP exp C exp C exp RP SC
    (34) colors -> . BACO LP exp C exp C exp RP SC
    (35) p_width -> . PENW LP exp RP SC
    (38) move -> . F mueve2
    (39) move -> . B mueve2
    (31) position -> . PENP LP exp C exp RP SC
    (36) penwrite -> . PENU SC
    (37) penwrite -> . PEND SC

    RB              reduce using rule 130 (empty -> .)
    IF              shift and go to state 78
    LA              shift and go to state 61
    L               shift and go to state 31
    ID              shift and go to state 76
    RE              shift and go to state 64
    REC             shift and go to state 58
    TRI             shift and go to state 71
    POL             shift and go to state 63
    LS              shift and go to state 70
    CIR             shift and go to state 81
    SQ              shift and go to state 82
    ARC             shift and go to state 85
    PENC            shift and go to state 67
    SETC            shift and go to state 83
    BACO            shift and go to state 53
    PENW            shift and go to state 59
    F               shift and go to state 73
    B               shift and go to state 72
    PENP            shift and go to state 48
    PENU            shift and go to state 60
    PEND            shift and go to state 66

    block3                         shift and go to state 111
    block2                         shift and go to state 50
    figure                         shift and go to state 51
    lstrip                         shift and go to state 52
    move                           shift and go to state 54
    tria                           shift and go to state 55
    poly                           shift and go to state 56
    colors                         shift and go to state 57
    rep                            shift and go to state 62
    pen                            shift and go to state 65
    condition                      shift and go to state 68
    empty                          shift and go to state 69
    lab                            shift and go to state 74
    one_par                        shift and go to state 75
    rect                           shift and go to state 77
    WID                            shift and go to state 79
    p_arc                          shift and go to state 80
    list                           shift and go to state 84
    position                       shift and go to state 86
    p_width                        shift and go to state 87
    penwrite                       shift and go to state 88

state 51

    (123) block2 -> figure .

    IF              reduce using rule 123 (block2 -> figure .)
    LA              reduce using rule 123 (block2 -> figure .)
    L               reduce using rule 123 (block2 -> figure .)
    ID              reduce using rule 123 (block2 -> figure .)
    RE              reduce using rule 123 (block2 -> figure .)
    REC             reduce using rule 123 (block2 -> figure .)
    TRI             reduce using rule 123 (block2 -> figure .)
    POL             reduce using rule 123 (block2 -> figure .)
    LS              reduce using rule 123 (block2 -> figure .)
    CIR             reduce using rule 123 (block2 -> figure .)
    SQ              reduce using rule 123 (block2 -> figure .)
    ARC             reduce using rule 123 (block2 -> figure .)
    PENC            reduce using rule 123 (block2 -> figure .)
    SETC            reduce using rule 123 (block2 -> figure .)
    BACO            reduce using rule 123 (block2 -> figure .)
    PENW            reduce using rule 123 (block2 -> figure .)
    F               reduce using rule 123 (block2 -> figure .)
    B               reduce using rule 123 (block2 -> figure .)
    PENP            reduce using rule 123 (block2 -> figure .)
    PENU            reduce using rule 123 (block2 -> figure .)
    PEND            reduce using rule 123 (block2 -> figure .)
    RB              reduce using rule 123 (block2 -> figure .)


state 52

    (115) figure -> lstrip .

    IF              reduce using rule 115 (figure -> lstrip .)
    LA              reduce using rule 115 (figure -> lstrip .)
    L               reduce using rule 115 (figure -> lstrip .)
    ID              reduce using rule 115 (figure -> lstrip .)
    RE              reduce using rule 115 (figure -> lstrip .)
    REC             reduce using rule 115 (figure -> lstrip .)
    TRI             reduce using rule 115 (figure -> lstrip .)
    POL             reduce using rule 115 (figure -> lstrip .)
    LS              reduce using rule 115 (figure -> lstrip .)
    CIR             reduce using rule 115 (figure -> lstrip .)
    SQ              reduce using rule 115 (figure -> lstrip .)
    ARC             reduce using rule 115 (figure -> lstrip .)
    PENC            reduce using rule 115 (figure -> lstrip .)
    SETC            reduce using rule 115 (figure -> lstrip .)
    BACO            reduce using rule 115 (figure -> lstrip .)
    PENW            reduce using rule 115 (figure -> lstrip .)
    F               reduce using rule 115 (figure -> lstrip .)
    B               reduce using rule 115 (figure -> lstrip .)
    PENP            reduce using rule 115 (figure -> lstrip .)
    PENU            reduce using rule 115 (figure -> lstrip .)
    PEND            reduce using rule 115 (figure -> lstrip .)
    RB              reduce using rule 115 (figure -> lstrip .)


state 53

    (34) colors -> BACO . LP exp C exp C exp RP SC

    LP              shift and go to state 112


state 54

    (120) pen -> move .

    IF              reduce using rule 120 (pen -> move .)
    LA              reduce using rule 120 (pen -> move .)
    L               reduce using rule 120 (pen -> move .)
    ID              reduce using rule 120 (pen -> move .)
    RE              reduce using rule 120 (pen -> move .)
    REC             reduce using rule 120 (pen -> move .)
    TRI             reduce using rule 120 (pen -> move .)
    POL             reduce using rule 120 (pen -> move .)
    LS              reduce using rule 120 (pen -> move .)
    CIR             reduce using rule 120 (pen -> move .)
    SQ              reduce using rule 120 (pen -> move .)
    ARC             reduce using rule 120 (pen -> move .)
    PENC            reduce using rule 120 (pen -> move .)
    SETC            reduce using rule 120 (pen -> move .)
    BACO            reduce using rule 120 (pen -> move .)
    PENW            reduce using rule 120 (pen -> move .)
    F               reduce using rule 120 (pen -> move .)
    B               reduce using rule 120 (pen -> move .)
    PENP            reduce using rule 120 (pen -> move .)
    PENU            reduce using rule 120 (pen -> move .)
    PEND            reduce using rule 120 (pen -> move .)
    RB              reduce using rule 120 (pen -> move .)


state 55

    (113) figure -> tria .

    IF              reduce using rule 113 (figure -> tria .)
    LA              reduce using rule 113 (figure -> tria .)
    L               reduce using rule 113 (figure -> tria .)
    ID              reduce using rule 113 (figure -> tria .)
    RE              reduce using rule 113 (figure -> tria .)
    REC             reduce using rule 113 (figure -> tria .)
    TRI             reduce using rule 113 (figure -> tria .)
    POL             reduce using rule 113 (figure -> tria .)
    LS              reduce using rule 113 (figure -> tria .)
    CIR             reduce using rule 113 (figure -> tria .)
    SQ              reduce using rule 113 (figure -> tria .)
    ARC             reduce using rule 113 (figure -> tria .)
    PENC            reduce using rule 113 (figure -> tria .)
    SETC            reduce using rule 113 (figure -> tria .)
    BACO            reduce using rule 113 (figure -> tria .)
    PENW            reduce using rule 113 (figure -> tria .)
    F               reduce using rule 113 (figure -> tria .)
    B               reduce using rule 113 (figure -> tria .)
    PENP            reduce using rule 113 (figure -> tria .)
    PENU            reduce using rule 113 (figure -> tria .)
    PEND            reduce using rule 113 (figure -> tria .)
    RB              reduce using rule 113 (figure -> tria .)


state 56

    (114) figure -> poly .

    IF              reduce using rule 114 (figure -> poly .)
    LA              reduce using rule 114 (figure -> poly .)
    L               reduce using rule 114 (figure -> poly .)
    ID              reduce using rule 114 (figure -> poly .)
    RE              reduce using rule 114 (figure -> poly .)
    REC             reduce using rule 114 (figure -> poly .)
    TRI             reduce using rule 114 (figure -> poly .)
    POL             reduce using rule 114 (figure -> poly .)
    LS              reduce using rule 114 (figure -> poly .)
    CIR             reduce using rule 114 (figure -> poly .)
    SQ              reduce using rule 114 (figure -> poly .)
    ARC             reduce using rule 114 (figure -> poly .)
    PENC            reduce using rule 114 (figure -> poly .)
    SETC            reduce using rule 114 (figure -> poly .)
    BACO            reduce using rule 114 (figure -> poly .)
    PENW            reduce using rule 114 (figure -> poly .)
    F               reduce using rule 114 (figure -> poly .)
    B               reduce using rule 114 (figure -> poly .)
    PENP            reduce using rule 114 (figure -> poly .)
    PENU            reduce using rule 114 (figure -> poly .)
    PEND            reduce using rule 114 (figure -> poly .)
    RB              reduce using rule 114 (figure -> poly .)


state 57

    (118) pen -> colors .

    IF              reduce using rule 118 (pen -> colors .)
    LA              reduce using rule 118 (pen -> colors .)
    L               reduce using rule 118 (pen -> colors .)
    ID              reduce using rule 118 (pen -> colors .)
    RE              reduce using rule 118 (pen -> colors .)
    REC             reduce using rule 118 (pen -> colors .)
    TRI             reduce using rule 118 (pen -> colors .)
    POL             reduce using rule 118 (pen -> colors .)
    LS              reduce using rule 118 (pen -> colors .)
    CIR             reduce using rule 118 (pen -> colors .)
    SQ              reduce using rule 118 (pen -> colors .)
    ARC             reduce using rule 118 (pen -> colors .)
    PENC            reduce using rule 118 (pen -> colors .)
    SETC            reduce using rule 118 (pen -> colors .)
    BACO            reduce using rule 118 (pen -> colors .)
    PENW            reduce using rule 118 (pen -> colors .)
    F               reduce using rule 118 (pen -> colors .)
    B               reduce using rule 118 (pen -> colors .)
    PENP            reduce using rule 118 (pen -> colors .)
    PENU            reduce using rule 118 (pen -> colors .)
    PEND            reduce using rule 118 (pen -> colors .)
    RB              reduce using rule 118 (pen -> colors .)


state 58

    (41) rect -> REC . LP exp C exp p_fill RP SC

    LP              shift and go to state 113


state 59

    (35) p_width -> PENW . LP exp RP SC

    LP              shift and go to state 114


state 60

    (36) penwrite -> PENU . SC

    SC              shift and go to state 115


state 61

    (99) lab -> LA . LP stExp lab2 RP SC

    LP              shift and go to state 116


state 62

    (129) block2 -> rep .

    IF              reduce using rule 129 (block2 -> rep .)
    LA              reduce using rule 129 (block2 -> rep .)
    L               reduce using rule 129 (block2 -> rep .)
    ID              reduce using rule 129 (block2 -> rep .)
    RE              reduce using rule 129 (block2 -> rep .)
    REC             reduce using rule 129 (block2 -> rep .)
    TRI             reduce using rule 129 (block2 -> rep .)
    POL             reduce using rule 129 (block2 -> rep .)
    LS              reduce using rule 129 (block2 -> rep .)
    CIR             reduce using rule 129 (block2 -> rep .)
    SQ              reduce using rule 129 (block2 -> rep .)
    ARC             reduce using rule 129 (block2 -> rep .)
    PENC            reduce using rule 129 (block2 -> rep .)
    SETC            reduce using rule 129 (block2 -> rep .)
    BACO            reduce using rule 129 (block2 -> rep .)
    PENW            reduce using rule 129 (block2 -> rep .)
    F               reduce using rule 129 (block2 -> rep .)
    B               reduce using rule 129 (block2 -> rep .)
    PENP            reduce using rule 129 (block2 -> rep .)
    PENU            reduce using rule 129 (block2 -> rep .)
    PEND            reduce using rule 129 (block2 -> rep .)
    RB              reduce using rule 129 (block2 -> rep .)


state 63

    (47) poly -> POL . LP idList p_fill RP SC

    LP              shift and go to state 117


state 64

    (75) rep -> RE . rep3 block
    (76) rep3 -> . exp
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    rep3                           shift and go to state 118
    exp                            shift and go to state 119
    fact2                          shift and go to state 105
    fact                           shift and go to state 107
    fact4                          shift and go to state 108

state 65

    (125) block2 -> pen .

    IF              reduce using rule 125 (block2 -> pen .)
    LA              reduce using rule 125 (block2 -> pen .)
    L               reduce using rule 125 (block2 -> pen .)
    ID              reduce using rule 125 (block2 -> pen .)
    RE              reduce using rule 125 (block2 -> pen .)
    REC             reduce using rule 125 (block2 -> pen .)
    TRI             reduce using rule 125 (block2 -> pen .)
    POL             reduce using rule 125 (block2 -> pen .)
    LS              reduce using rule 125 (block2 -> pen .)
    CIR             reduce using rule 125 (block2 -> pen .)
    SQ              reduce using rule 125 (block2 -> pen .)
    ARC             reduce using rule 125 (block2 -> pen .)
    PENC            reduce using rule 125 (block2 -> pen .)
    SETC            reduce using rule 125 (block2 -> pen .)
    BACO            reduce using rule 125 (block2 -> pen .)
    PENW            reduce using rule 125 (block2 -> pen .)
    F               reduce using rule 125 (block2 -> pen .)
    B               reduce using rule 125 (block2 -> pen .)
    PENP            reduce using rule 125 (block2 -> pen .)
    PENU            reduce using rule 125 (block2 -> pen .)
    PEND            reduce using rule 125 (block2 -> pen .)
    RB              reduce using rule 125 (block2 -> pen .)


state 66

    (37) penwrite -> PEND . SC

    SC              shift and go to state 120


state 67

    (32) colors -> PENC . LP exp C exp C exp RP SC

    LP              shift and go to state 121


state 68

    (124) block2 -> condition .

    IF              reduce using rule 124 (block2 -> condition .)
    LA              reduce using rule 124 (block2 -> condition .)
    L               reduce using rule 124 (block2 -> condition .)
    ID              reduce using rule 124 (block2 -> condition .)
    RE              reduce using rule 124 (block2 -> condition .)
    REC             reduce using rule 124 (block2 -> condition .)
    TRI             reduce using rule 124 (block2 -> condition .)
    POL             reduce using rule 124 (block2 -> condition .)
    LS              reduce using rule 124 (block2 -> condition .)
    CIR             reduce using rule 124 (block2 -> condition .)
    SQ              reduce using rule 124 (block2 -> condition .)
    ARC             reduce using rule 124 (block2 -> condition .)
    PENC            reduce using rule 124 (block2 -> condition .)
    SETC            reduce using rule 124 (block2 -> condition .)
    BACO            reduce using rule 124 (block2 -> condition .)
    PENW            reduce using rule 124 (block2 -> condition .)
    F               reduce using rule 124 (block2 -> condition .)
    B               reduce using rule 124 (block2 -> condition .)
    PENP            reduce using rule 124 (block2 -> condition .)
    PENU            reduce using rule 124 (block2 -> condition .)
    PEND            reduce using rule 124 (block2 -> condition .)
    RB              reduce using rule 124 (block2 -> condition .)


state 69

    (111) block3 -> empty .

    RB              reduce using rule 111 (block3 -> empty .)


state 70

    (48) lstrip -> LS . LP idList RP SC

    LP              shift and go to state 122


state 71

    (44) tria -> TRI . LP exp C exp C exp p_fill RP SC

    LP              shift and go to state 123


state 72

    (39) move -> B . mueve2
    (40) mueve2 -> . LP exp C A exp RP SC

    LP              shift and go to state 124

    mueve2                         shift and go to state 125

state 73

    (38) move -> F . mueve2
    (40) mueve2 -> . LP exp C A exp RP SC

    LP              shift and go to state 124

    mueve2                         shift and go to state 126

state 74

    (126) block2 -> lab .

    IF              reduce using rule 126 (block2 -> lab .)
    LA              reduce using rule 126 (block2 -> lab .)
    L               reduce using rule 126 (block2 -> lab .)
    ID              reduce using rule 126 (block2 -> lab .)
    RE              reduce using rule 126 (block2 -> lab .)
    REC             reduce using rule 126 (block2 -> lab .)
    TRI             reduce using rule 126 (block2 -> lab .)
    POL             reduce using rule 126 (block2 -> lab .)
    LS              reduce using rule 126 (block2 -> lab .)
    CIR             reduce using rule 126 (block2 -> lab .)
    SQ              reduce using rule 126 (block2 -> lab .)
    ARC             reduce using rule 126 (block2 -> lab .)
    PENC            reduce using rule 126 (block2 -> lab .)
    SETC            reduce using rule 126 (block2 -> lab .)
    BACO            reduce using rule 126 (block2 -> lab .)
    PENW            reduce using rule 126 (block2 -> lab .)
    F               reduce using rule 126 (block2 -> lab .)
    B               reduce using rule 126 (block2 -> lab .)
    PENP            reduce using rule 126 (block2 -> lab .)
    PENU            reduce using rule 126 (block2 -> lab .)
    PEND            reduce using rule 126 (block2 -> lab .)
    RB              reduce using rule 126 (block2 -> lab .)


state 75

    (116) figure -> one_par .

    IF              reduce using rule 116 (figure -> one_par .)
    LA              reduce using rule 116 (figure -> one_par .)
    L               reduce using rule 116 (figure -> one_par .)
    ID              reduce using rule 116 (figure -> one_par .)
    RE              reduce using rule 116 (figure -> one_par .)
    REC             reduce using rule 116 (figure -> one_par .)
    TRI             reduce using rule 116 (figure -> one_par .)
    POL             reduce using rule 116 (figure -> one_par .)
    LS              reduce using rule 116 (figure -> one_par .)
    CIR             reduce using rule 116 (figure -> one_par .)
    SQ              reduce using rule 116 (figure -> one_par .)
    ARC             reduce using rule 116 (figure -> one_par .)
    PENC            reduce using rule 116 (figure -> one_par .)
    SETC            reduce using rule 116 (figure -> one_par .)
    BACO            reduce using rule 116 (figure -> one_par .)
    PENW            reduce using rule 116 (figure -> one_par .)
    F               reduce using rule 116 (figure -> one_par .)
    B               reduce using rule 116 (figure -> one_par .)
    PENP            reduce using rule 116 (figure -> one_par .)
    PENU            reduce using rule 116 (figure -> one_par .)
    PEND            reduce using rule 116 (figure -> one_par .)
    RB              reduce using rule 116 (figure -> one_par .)


state 76

    (77) WID -> ID . WID2
    (78) WID2 -> . assigment
    (79) WID2 -> . funCall
    (80) assigment -> . EQ tipeAss
    (84) funCall -> . LP func2 RP SC

    EQ              shift and go to state 129
    LP              shift and go to state 127

    funCall                        shift and go to state 130
    assigment                      shift and go to state 128
    WID2                           shift and go to state 131

state 77

    (112) figure -> rect .

    IF              reduce using rule 112 (figure -> rect .)
    LA              reduce using rule 112 (figure -> rect .)
    L               reduce using rule 112 (figure -> rect .)
    ID              reduce using rule 112 (figure -> rect .)
    RE              reduce using rule 112 (figure -> rect .)
    REC             reduce using rule 112 (figure -> rect .)
    TRI             reduce using rule 112 (figure -> rect .)
    POL             reduce using rule 112 (figure -> rect .)
    LS              reduce using rule 112 (figure -> rect .)
    CIR             reduce using rule 112 (figure -> rect .)
    SQ              reduce using rule 112 (figure -> rect .)
    ARC             reduce using rule 112 (figure -> rect .)
    PENC            reduce using rule 112 (figure -> rect .)
    SETC            reduce using rule 112 (figure -> rect .)
    BACO            reduce using rule 112 (figure -> rect .)
    PENW            reduce using rule 112 (figure -> rect .)
    F               reduce using rule 112 (figure -> rect .)
    B               reduce using rule 112 (figure -> rect .)
    PENP            reduce using rule 112 (figure -> rect .)
    PENU            reduce using rule 112 (figure -> rect .)
    PEND            reduce using rule 112 (figure -> rect .)
    RB              reduce using rule 112 (figure -> rect .)


state 78

    (104) condition -> IF . LP expresion condRP block con2

    LP              shift and go to state 132


state 79

    (128) block2 -> WID .

    IF              reduce using rule 128 (block2 -> WID .)
    LA              reduce using rule 128 (block2 -> WID .)
    L               reduce using rule 128 (block2 -> WID .)
    ID              reduce using rule 128 (block2 -> WID .)
    RE              reduce using rule 128 (block2 -> WID .)
    REC             reduce using rule 128 (block2 -> WID .)
    TRI             reduce using rule 128 (block2 -> WID .)
    POL             reduce using rule 128 (block2 -> WID .)
    LS              reduce using rule 128 (block2 -> WID .)
    CIR             reduce using rule 128 (block2 -> WID .)
    SQ              reduce using rule 128 (block2 -> WID .)
    ARC             reduce using rule 128 (block2 -> WID .)
    PENC            reduce using rule 128 (block2 -> WID .)
    SETC            reduce using rule 128 (block2 -> WID .)
    BACO            reduce using rule 128 (block2 -> WID .)
    PENW            reduce using rule 128 (block2 -> WID .)
    F               reduce using rule 128 (block2 -> WID .)
    B               reduce using rule 128 (block2 -> WID .)
    PENP            reduce using rule 128 (block2 -> WID .)
    PENU            reduce using rule 128 (block2 -> WID .)
    PEND            reduce using rule 128 (block2 -> WID .)
    RB              reduce using rule 128 (block2 -> WID .)


state 80

    (117) figure -> p_arc .

    IF              reduce using rule 117 (figure -> p_arc .)
    LA              reduce using rule 117 (figure -> p_arc .)
    L               reduce using rule 117 (figure -> p_arc .)
    ID              reduce using rule 117 (figure -> p_arc .)
    RE              reduce using rule 117 (figure -> p_arc .)
    REC             reduce using rule 117 (figure -> p_arc .)
    TRI             reduce using rule 117 (figure -> p_arc .)
    POL             reduce using rule 117 (figure -> p_arc .)
    LS              reduce using rule 117 (figure -> p_arc .)
    CIR             reduce using rule 117 (figure -> p_arc .)
    SQ              reduce using rule 117 (figure -> p_arc .)
    ARC             reduce using rule 117 (figure -> p_arc .)
    PENC            reduce using rule 117 (figure -> p_arc .)
    SETC            reduce using rule 117 (figure -> p_arc .)
    BACO            reduce using rule 117 (figure -> p_arc .)
    PENW            reduce using rule 117 (figure -> p_arc .)
    F               reduce using rule 117 (figure -> p_arc .)
    B               reduce using rule 117 (figure -> p_arc .)
    PENP            reduce using rule 117 (figure -> p_arc .)
    PENU            reduce using rule 117 (figure -> p_arc .)
    PEND            reduce using rule 117 (figure -> p_arc .)
    RB              reduce using rule 117 (figure -> p_arc .)


state 81

    (45) one_par -> CIR . LP exp p_fill RP SC

    LP              shift and go to state 133


state 82

    (46) one_par -> SQ . LP exp p_fill RP SC

    LP              shift and go to state 134


state 83

    (33) colors -> SETC . LP exp C exp C exp RP SC

    LP              shift and go to state 135


state 84

    (127) block2 -> list .

    IF              reduce using rule 127 (block2 -> list .)
    LA              reduce using rule 127 (block2 -> list .)
    L               reduce using rule 127 (block2 -> list .)
    ID              reduce using rule 127 (block2 -> list .)
    RE              reduce using rule 127 (block2 -> list .)
    REC             reduce using rule 127 (block2 -> list .)
    TRI             reduce using rule 127 (block2 -> list .)
    POL             reduce using rule 127 (block2 -> list .)
    LS              reduce using rule 127 (block2 -> list .)
    CIR             reduce using rule 127 (block2 -> list .)
    SQ              reduce using rule 127 (block2 -> list .)
    ARC             reduce using rule 127 (block2 -> list .)
    PENC            reduce using rule 127 (block2 -> list .)
    SETC            reduce using rule 127 (block2 -> list .)
    BACO            reduce using rule 127 (block2 -> list .)
    PENW            reduce using rule 127 (block2 -> list .)
    F               reduce using rule 127 (block2 -> list .)
    B               reduce using rule 127 (block2 -> list .)
    PENP            reduce using rule 127 (block2 -> list .)
    PENU            reduce using rule 127 (block2 -> list .)
    PEND            reduce using rule 127 (block2 -> list .)
    RB              reduce using rule 127 (block2 -> list .)


state 85

    (50) p_arc -> ARC . LP exp RP SC

    LP              shift and go to state 136


state 86

    (121) pen -> position .

    IF              reduce using rule 121 (pen -> position .)
    LA              reduce using rule 121 (pen -> position .)
    L               reduce using rule 121 (pen -> position .)
    ID              reduce using rule 121 (pen -> position .)
    RE              reduce using rule 121 (pen -> position .)
    REC             reduce using rule 121 (pen -> position .)
    TRI             reduce using rule 121 (pen -> position .)
    POL             reduce using rule 121 (pen -> position .)
    LS              reduce using rule 121 (pen -> position .)
    CIR             reduce using rule 121 (pen -> position .)
    SQ              reduce using rule 121 (pen -> position .)
    ARC             reduce using rule 121 (pen -> position .)
    PENC            reduce using rule 121 (pen -> position .)
    SETC            reduce using rule 121 (pen -> position .)
    BACO            reduce using rule 121 (pen -> position .)
    PENW            reduce using rule 121 (pen -> position .)
    F               reduce using rule 121 (pen -> position .)
    B               reduce using rule 121 (pen -> position .)
    PENP            reduce using rule 121 (pen -> position .)
    PENU            reduce using rule 121 (pen -> position .)
    PEND            reduce using rule 121 (pen -> position .)
    RB              reduce using rule 121 (pen -> position .)


state 87

    (119) pen -> p_width .

    IF              reduce using rule 119 (pen -> p_width .)
    LA              reduce using rule 119 (pen -> p_width .)
    L               reduce using rule 119 (pen -> p_width .)
    ID              reduce using rule 119 (pen -> p_width .)
    RE              reduce using rule 119 (pen -> p_width .)
    REC             reduce using rule 119 (pen -> p_width .)
    TRI             reduce using rule 119 (pen -> p_width .)
    POL             reduce using rule 119 (pen -> p_width .)
    LS              reduce using rule 119 (pen -> p_width .)
    CIR             reduce using rule 119 (pen -> p_width .)
    SQ              reduce using rule 119 (pen -> p_width .)
    ARC             reduce using rule 119 (pen -> p_width .)
    PENC            reduce using rule 119 (pen -> p_width .)
    SETC            reduce using rule 119 (pen -> p_width .)
    BACO            reduce using rule 119 (pen -> p_width .)
    PENW            reduce using rule 119 (pen -> p_width .)
    F               reduce using rule 119 (pen -> p_width .)
    B               reduce using rule 119 (pen -> p_width .)
    PENP            reduce using rule 119 (pen -> p_width .)
    PENU            reduce using rule 119 (pen -> p_width .)
    PEND            reduce using rule 119 (pen -> p_width .)
    RB              reduce using rule 119 (pen -> p_width .)


state 88

    (122) pen -> penwrite .

    IF              reduce using rule 122 (pen -> penwrite .)
    LA              reduce using rule 122 (pen -> penwrite .)
    L               reduce using rule 122 (pen -> penwrite .)
    ID              reduce using rule 122 (pen -> penwrite .)
    RE              reduce using rule 122 (pen -> penwrite .)
    REC             reduce using rule 122 (pen -> penwrite .)
    TRI             reduce using rule 122 (pen -> penwrite .)
    POL             reduce using rule 122 (pen -> penwrite .)
    LS              reduce using rule 122 (pen -> penwrite .)
    CIR             reduce using rule 122 (pen -> penwrite .)
    SQ              reduce using rule 122 (pen -> penwrite .)
    ARC             reduce using rule 122 (pen -> penwrite .)
    PENC            reduce using rule 122 (pen -> penwrite .)
    SETC            reduce using rule 122 (pen -> penwrite .)
    BACO            reduce using rule 122 (pen -> penwrite .)
    PENW            reduce using rule 122 (pen -> penwrite .)
    F               reduce using rule 122 (pen -> penwrite .)
    B               reduce using rule 122 (pen -> penwrite .)
    PENP            reduce using rule 122 (pen -> penwrite .)
    PENU            reduce using rule 122 (pen -> penwrite .)
    PEND            reduce using rule 122 (pen -> penwrite .)
    RB              reduce using rule 122 (pen -> penwrite .)


state 89

    (11) fun3 -> fun5 fun4 .

    RP              reduce using rule 11 (fun3 -> fun5 fun4 .)


state 90

    (13) fun4 -> C . fun5 fun4
    (15) fun5 -> . type ID
    (27) type -> . INT
    (28) type -> . FLOAT

    INT             shift and go to state 20
    FLOAT           shift and go to state 21

    fun5                           shift and go to state 137
    type                           shift and go to state 40

state 91

    (14) fun4 -> empty .

    RP              reduce using rule 14 (fun4 -> empty .)


state 92

    (10) fun2 -> FUN ID LP fun3 RP .

    DP              reduce using rule 10 (fun2 -> FUN ID LP fun3 RP .)


state 93

    (15) fun5 -> type ID .

    C               reduce using rule 15 (fun5 -> type ID .)
    RP              reduce using rule 15 (fun5 -> type ID .)


state 94

    (90) list -> L type ID . prelistAss
    (91) prelistAss -> . EQ listAss
    (92) prelistAss -> . SC

    EQ              shift and go to state 140
    SC              shift and go to state 139

    prelistAss                     shift and go to state 138

state 95

    (18) var2 -> type var3 SC var2 .

    L               reduce using rule 18 (var2 -> type var3 SC var2 .)
    FUN             reduce using rule 18 (var2 -> type var3 SC var2 .)
    MAIN            reduce using rule 18 (var2 -> type var3 SC var2 .)
    LB              reduce using rule 18 (var2 -> type var3 SC var2 .)


state 96

    (20) var3 -> ID var4 var33 .

    SC              reduce using rule 20 (var3 -> ID var4 var33 .)


state 97

    (21) var33 -> C . ID var4 var33

    ID              shift and go to state 141


state 98

    (22) var33 -> empty .

    SC              reduce using rule 22 (var33 -> empty .)


state 99

    (58) exp -> term . exp2
    (59) exp2 -> . exp3 exp
    (60) exp2 -> . empty
    (61) exp3 -> . ADD
    (62) exp3 -> . SUB
    (130) empty -> .

  ! shift/reduce conflict for ADD resolved as shift
    ADD             shift and go to state 145
    SUB             shift and go to state 142
    C               reduce using rule 130 (empty -> .)
    SC              reduce using rule 130 (empty -> .)
    LB              reduce using rule 130 (empty -> .)
    RP              reduce using rule 130 (empty -> .)
    LT              reduce using rule 130 (empty -> .)
    MT              reduce using rule 130 (empty -> .)
    D               reduce using rule 130 (empty -> .)
    SEQ             reduce using rule 130 (empty -> .)

  ! ADD             [ reduce using rule 130 (empty -> .) ]

    exp3                           shift and go to state 143
    exp2                           shift and go to state 144
    empty                          shift and go to state 146

state 100

    (71) fact4 -> valExp .

    M               reduce using rule 71 (fact4 -> valExp .)
    DIV             reduce using rule 71 (fact4 -> valExp .)
    ADD             reduce using rule 71 (fact4 -> valExp .)
    SUB             reduce using rule 71 (fact4 -> valExp .)
    C               reduce using rule 71 (fact4 -> valExp .)
    RP              reduce using rule 71 (fact4 -> valExp .)
    SC              reduce using rule 71 (fact4 -> valExp .)
    LT              reduce using rule 71 (fact4 -> valExp .)
    MT              reduce using rule 71 (fact4 -> valExp .)
    D               reduce using rule 71 (fact4 -> valExp .)
    SEQ             reduce using rule 71 (fact4 -> valExp .)
    LB              reduce using rule 71 (fact4 -> valExp .)


state 101

    (70) fact2 -> LP .

    LP              reduce using rule 70 (fact2 -> LP .)
    ID              reduce using rule 70 (fact2 -> LP .)
    VALI            reduce using rule 70 (fact2 -> LP .)
    VALF            reduce using rule 70 (fact2 -> LP .)


state 102

    (73) valExp -> VALI .

    M               reduce using rule 73 (valExp -> VALI .)
    DIV             reduce using rule 73 (valExp -> VALI .)
    ADD             reduce using rule 73 (valExp -> VALI .)
    SUB             reduce using rule 73 (valExp -> VALI .)
    RP              reduce using rule 73 (valExp -> VALI .)
    C               reduce using rule 73 (valExp -> VALI .)
    SC              reduce using rule 73 (valExp -> VALI .)
    LB              reduce using rule 73 (valExp -> VALI .)
    LT              reduce using rule 73 (valExp -> VALI .)
    MT              reduce using rule 73 (valExp -> VALI .)
    D               reduce using rule 73 (valExp -> VALI .)
    SEQ             reduce using rule 73 (valExp -> VALI .)


state 103

    (74) valExp -> VALF .

    M               reduce using rule 74 (valExp -> VALF .)
    DIV             reduce using rule 74 (valExp -> VALF .)
    ADD             reduce using rule 74 (valExp -> VALF .)
    SUB             reduce using rule 74 (valExp -> VALF .)
    RP              reduce using rule 74 (valExp -> VALF .)
    C               reduce using rule 74 (valExp -> VALF .)
    SC              reduce using rule 74 (valExp -> VALF .)
    LB              reduce using rule 74 (valExp -> VALF .)
    LT              reduce using rule 74 (valExp -> VALF .)
    MT              reduce using rule 74 (valExp -> VALF .)
    D               reduce using rule 74 (valExp -> VALF .)
    SEQ             reduce using rule 74 (valExp -> VALF .)


state 104

    (23) var4 -> EQ exp .

    C               reduce using rule 23 (var4 -> EQ exp .)
    SC              reduce using rule 23 (var4 -> EQ exp .)


state 105

    (68) fact -> fact2 . exp RP
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    exp                            shift and go to state 147
    fact2                          shift and go to state 105
    fact                           shift and go to state 107
    fact4                          shift and go to state 108

state 106

    (72) fact4 -> ID .

    M               reduce using rule 72 (fact4 -> ID .)
    DIV             reduce using rule 72 (fact4 -> ID .)
    ADD             reduce using rule 72 (fact4 -> ID .)
    SUB             reduce using rule 72 (fact4 -> ID .)
    C               reduce using rule 72 (fact4 -> ID .)
    RP              reduce using rule 72 (fact4 -> ID .)
    SC              reduce using rule 72 (fact4 -> ID .)
    LT              reduce using rule 72 (fact4 -> ID .)
    MT              reduce using rule 72 (fact4 -> ID .)
    D               reduce using rule 72 (fact4 -> ID .)
    SEQ             reduce using rule 72 (fact4 -> ID .)
    LB              reduce using rule 72 (fact4 -> ID .)


state 107

    (63) term -> fact . term2
    (64) term2 -> . term3 term
    (65) term2 -> . empty
    (66) term3 -> . M
    (67) term3 -> . DIV
    (130) empty -> .

    M               shift and go to state 150
    DIV             shift and go to state 151
    ADD             reduce using rule 130 (empty -> .)
    SUB             reduce using rule 130 (empty -> .)
    C               reduce using rule 130 (empty -> .)
    SC              reduce using rule 130 (empty -> .)
    LB              reduce using rule 130 (empty -> .)
    RP              reduce using rule 130 (empty -> .)
    LT              reduce using rule 130 (empty -> .)
    MT              reduce using rule 130 (empty -> .)
    D               reduce using rule 130 (empty -> .)
    SEQ             reduce using rule 130 (empty -> .)

    empty                          shift and go to state 152
    term3                          shift and go to state 148
    term2                          shift and go to state 149

state 108

    (69) fact -> fact4 .

    M               reduce using rule 69 (fact -> fact4 .)
    DIV             reduce using rule 69 (fact -> fact4 .)
    ADD             reduce using rule 69 (fact -> fact4 .)
    SUB             reduce using rule 69 (fact -> fact4 .)
    C               reduce using rule 69 (fact -> fact4 .)
    RP              reduce using rule 69 (fact -> fact4 .)
    LB              reduce using rule 69 (fact -> fact4 .)
    SC              reduce using rule 69 (fact -> fact4 .)
    LT              reduce using rule 69 (fact -> fact4 .)
    MT              reduce using rule 69 (fact -> fact4 .)
    D               reduce using rule 69 (fact -> fact4 .)
    SEQ             reduce using rule 69 (fact -> fact4 .)


state 109

    (31) position -> PENP LP . exp C exp RP SC
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    exp                            shift and go to state 153
    fact2                          shift and go to state 105
    fact                           shift and go to state 107
    fact4                          shift and go to state 108

state 110

    (109) block -> LB block3 RB .

    $end            reduce using rule 109 (block -> LB block3 RB .)
    FUN             reduce using rule 109 (block -> LB block3 RB .)
    MAIN            reduce using rule 109 (block -> LB block3 RB .)
    IF              reduce using rule 109 (block -> LB block3 RB .)
    LA              reduce using rule 109 (block -> LB block3 RB .)
    L               reduce using rule 109 (block -> LB block3 RB .)
    ID              reduce using rule 109 (block -> LB block3 RB .)
    RE              reduce using rule 109 (block -> LB block3 RB .)
    REC             reduce using rule 109 (block -> LB block3 RB .)
    TRI             reduce using rule 109 (block -> LB block3 RB .)
    POL             reduce using rule 109 (block -> LB block3 RB .)
    LS              reduce using rule 109 (block -> LB block3 RB .)
    CIR             reduce using rule 109 (block -> LB block3 RB .)
    SQ              reduce using rule 109 (block -> LB block3 RB .)
    ARC             reduce using rule 109 (block -> LB block3 RB .)
    PENC            reduce using rule 109 (block -> LB block3 RB .)
    SETC            reduce using rule 109 (block -> LB block3 RB .)
    BACO            reduce using rule 109 (block -> LB block3 RB .)
    PENW            reduce using rule 109 (block -> LB block3 RB .)
    F               reduce using rule 109 (block -> LB block3 RB .)
    B               reduce using rule 109 (block -> LB block3 RB .)
    PENP            reduce using rule 109 (block -> LB block3 RB .)
    PENU            reduce using rule 109 (block -> LB block3 RB .)
    PEND            reduce using rule 109 (block -> LB block3 RB .)
    RB              reduce using rule 109 (block -> LB block3 RB .)
    ELSE            reduce using rule 109 (block -> LB block3 RB .)


state 111

    (110) block3 -> block2 block3 .

    RB              reduce using rule 110 (block3 -> block2 block3 .)


state 112

    (34) colors -> BACO LP . exp C exp C exp RP SC
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    exp                            shift and go to state 154
    fact2                          shift and go to state 105
    fact                           shift and go to state 107
    fact4                          shift and go to state 108

state 113

    (41) rect -> REC LP . exp C exp p_fill RP SC
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    exp                            shift and go to state 155
    fact2                          shift and go to state 105
    fact4                          shift and go to state 108
    fact                           shift and go to state 107

state 114

    (35) p_width -> PENW LP . exp RP SC
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    exp                            shift and go to state 156
    fact2                          shift and go to state 105
    fact                           shift and go to state 107
    fact4                          shift and go to state 108

state 115

    (36) penwrite -> PENU SC .

    IF              reduce using rule 36 (penwrite -> PENU SC .)
    LA              reduce using rule 36 (penwrite -> PENU SC .)
    L               reduce using rule 36 (penwrite -> PENU SC .)
    ID              reduce using rule 36 (penwrite -> PENU SC .)
    RE              reduce using rule 36 (penwrite -> PENU SC .)
    REC             reduce using rule 36 (penwrite -> PENU SC .)
    TRI             reduce using rule 36 (penwrite -> PENU SC .)
    POL             reduce using rule 36 (penwrite -> PENU SC .)
    LS              reduce using rule 36 (penwrite -> PENU SC .)
    CIR             reduce using rule 36 (penwrite -> PENU SC .)
    SQ              reduce using rule 36 (penwrite -> PENU SC .)
    ARC             reduce using rule 36 (penwrite -> PENU SC .)
    PENC            reduce using rule 36 (penwrite -> PENU SC .)
    SETC            reduce using rule 36 (penwrite -> PENU SC .)
    BACO            reduce using rule 36 (penwrite -> PENU SC .)
    PENW            reduce using rule 36 (penwrite -> PENU SC .)
    F               reduce using rule 36 (penwrite -> PENU SC .)
    B               reduce using rule 36 (penwrite -> PENU SC .)
    PENP            reduce using rule 36 (penwrite -> PENU SC .)
    PENU            reduce using rule 36 (penwrite -> PENU SC .)
    PEND            reduce using rule 36 (penwrite -> PENU SC .)
    RB              reduce using rule 36 (penwrite -> PENU SC .)


state 116

    (99) lab -> LA LP . stExp lab2 RP SC
    (102) stExp -> . STR
    (103) stExp -> . exp
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    STR             shift and go to state 157
    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    stExp                          shift and go to state 158
    exp                            shift and go to state 159
    fact2                          shift and go to state 105
    fact                           shift and go to state 107
    fact4                          shift and go to state 108

state 117

    (47) poly -> POL LP . idList p_fill RP SC
    (49) idList -> . ID

    ID              shift and go to state 161

    idList                         shift and go to state 160

state 118

    (75) rep -> RE rep3 . block
    (109) block -> . LB block3 RB

    LB              shift and go to state 35

    block                          shift and go to state 162

state 119

    (76) rep3 -> exp .

    LB              reduce using rule 76 (rep3 -> exp .)


state 120

    (37) penwrite -> PEND SC .

    IF              reduce using rule 37 (penwrite -> PEND SC .)
    LA              reduce using rule 37 (penwrite -> PEND SC .)
    L               reduce using rule 37 (penwrite -> PEND SC .)
    ID              reduce using rule 37 (penwrite -> PEND SC .)
    RE              reduce using rule 37 (penwrite -> PEND SC .)
    REC             reduce using rule 37 (penwrite -> PEND SC .)
    TRI             reduce using rule 37 (penwrite -> PEND SC .)
    POL             reduce using rule 37 (penwrite -> PEND SC .)
    LS              reduce using rule 37 (penwrite -> PEND SC .)
    CIR             reduce using rule 37 (penwrite -> PEND SC .)
    SQ              reduce using rule 37 (penwrite -> PEND SC .)
    ARC             reduce using rule 37 (penwrite -> PEND SC .)
    PENC            reduce using rule 37 (penwrite -> PEND SC .)
    SETC            reduce using rule 37 (penwrite -> PEND SC .)
    BACO            reduce using rule 37 (penwrite -> PEND SC .)
    PENW            reduce using rule 37 (penwrite -> PEND SC .)
    F               reduce using rule 37 (penwrite -> PEND SC .)
    B               reduce using rule 37 (penwrite -> PEND SC .)
    PENP            reduce using rule 37 (penwrite -> PEND SC .)
    PENU            reduce using rule 37 (penwrite -> PEND SC .)
    PEND            reduce using rule 37 (penwrite -> PEND SC .)
    RB              reduce using rule 37 (penwrite -> PEND SC .)


state 121

    (32) colors -> PENC LP . exp C exp C exp RP SC
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    exp                            shift and go to state 163
    fact2                          shift and go to state 105
    fact                           shift and go to state 107
    fact4                          shift and go to state 108

state 122

    (48) lstrip -> LS LP . idList RP SC
    (49) idList -> . ID

    ID              shift and go to state 161

    idList                         shift and go to state 164

state 123

    (44) tria -> TRI LP . exp C exp C exp p_fill RP SC
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    exp                            shift and go to state 165
    fact2                          shift and go to state 105
    fact4                          shift and go to state 108
    fact                           shift and go to state 107

state 124

    (40) mueve2 -> LP . exp C A exp RP SC
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    exp                            shift and go to state 166
    fact2                          shift and go to state 105
    fact                           shift and go to state 107
    fact4                          shift and go to state 108

state 125

    (39) move -> B mueve2 .

    IF              reduce using rule 39 (move -> B mueve2 .)
    LA              reduce using rule 39 (move -> B mueve2 .)
    L               reduce using rule 39 (move -> B mueve2 .)
    ID              reduce using rule 39 (move -> B mueve2 .)
    RE              reduce using rule 39 (move -> B mueve2 .)
    REC             reduce using rule 39 (move -> B mueve2 .)
    TRI             reduce using rule 39 (move -> B mueve2 .)
    POL             reduce using rule 39 (move -> B mueve2 .)
    LS              reduce using rule 39 (move -> B mueve2 .)
    CIR             reduce using rule 39 (move -> B mueve2 .)
    SQ              reduce using rule 39 (move -> B mueve2 .)
    ARC             reduce using rule 39 (move -> B mueve2 .)
    PENC            reduce using rule 39 (move -> B mueve2 .)
    SETC            reduce using rule 39 (move -> B mueve2 .)
    BACO            reduce using rule 39 (move -> B mueve2 .)
    PENW            reduce using rule 39 (move -> B mueve2 .)
    F               reduce using rule 39 (move -> B mueve2 .)
    B               reduce using rule 39 (move -> B mueve2 .)
    PENP            reduce using rule 39 (move -> B mueve2 .)
    PENU            reduce using rule 39 (move -> B mueve2 .)
    PEND            reduce using rule 39 (move -> B mueve2 .)
    RB              reduce using rule 39 (move -> B mueve2 .)


state 126

    (38) move -> F mueve2 .

    IF              reduce using rule 38 (move -> F mueve2 .)
    LA              reduce using rule 38 (move -> F mueve2 .)
    L               reduce using rule 38 (move -> F mueve2 .)
    ID              reduce using rule 38 (move -> F mueve2 .)
    RE              reduce using rule 38 (move -> F mueve2 .)
    REC             reduce using rule 38 (move -> F mueve2 .)
    TRI             reduce using rule 38 (move -> F mueve2 .)
    POL             reduce using rule 38 (move -> F mueve2 .)
    LS              reduce using rule 38 (move -> F mueve2 .)
    CIR             reduce using rule 38 (move -> F mueve2 .)
    SQ              reduce using rule 38 (move -> F mueve2 .)
    ARC             reduce using rule 38 (move -> F mueve2 .)
    PENC            reduce using rule 38 (move -> F mueve2 .)
    SETC            reduce using rule 38 (move -> F mueve2 .)
    BACO            reduce using rule 38 (move -> F mueve2 .)
    PENW            reduce using rule 38 (move -> F mueve2 .)
    F               reduce using rule 38 (move -> F mueve2 .)
    B               reduce using rule 38 (move -> F mueve2 .)
    PENP            reduce using rule 38 (move -> F mueve2 .)
    PENU            reduce using rule 38 (move -> F mueve2 .)
    PEND            reduce using rule 38 (move -> F mueve2 .)
    RB              reduce using rule 38 (move -> F mueve2 .)


state 127

    (84) funCall -> LP . func2 RP SC
    (85) func2 -> . func4 func3
    (86) func2 -> . empty
    (89) func4 -> . exp
    (130) empty -> .
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    RP              reduce using rule 130 (empty -> .)
    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    func2                          shift and go to state 167
    term                           shift and go to state 99
    valExp                         shift and go to state 100
    func4                          shift and go to state 169
    fact                           shift and go to state 107
    exp                            shift and go to state 168
    fact2                          shift and go to state 105
    empty                          shift and go to state 170
    fact4                          shift and go to state 108

state 128

    (78) WID2 -> assigment .

    IF              reduce using rule 78 (WID2 -> assigment .)
    LA              reduce using rule 78 (WID2 -> assigment .)
    L               reduce using rule 78 (WID2 -> assigment .)
    ID              reduce using rule 78 (WID2 -> assigment .)
    RE              reduce using rule 78 (WID2 -> assigment .)
    REC             reduce using rule 78 (WID2 -> assigment .)
    TRI             reduce using rule 78 (WID2 -> assigment .)
    POL             reduce using rule 78 (WID2 -> assigment .)
    LS              reduce using rule 78 (WID2 -> assigment .)
    CIR             reduce using rule 78 (WID2 -> assigment .)
    SQ              reduce using rule 78 (WID2 -> assigment .)
    ARC             reduce using rule 78 (WID2 -> assigment .)
    PENC            reduce using rule 78 (WID2 -> assigment .)
    SETC            reduce using rule 78 (WID2 -> assigment .)
    BACO            reduce using rule 78 (WID2 -> assigment .)
    PENW            reduce using rule 78 (WID2 -> assigment .)
    F               reduce using rule 78 (WID2 -> assigment .)
    B               reduce using rule 78 (WID2 -> assigment .)
    PENP            reduce using rule 78 (WID2 -> assigment .)
    PENU            reduce using rule 78 (WID2 -> assigment .)
    PEND            reduce using rule 78 (WID2 -> assigment .)
    RB              reduce using rule 78 (WID2 -> assigment .)


state 129

    (80) assigment -> EQ . tipeAss
    (81) tipeAss -> . varAss
    (82) tipeAss -> . listAss
    (83) varAss -> . exp SC
    (93) listAss -> . LB lista3 RB SC
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LB              shift and go to state 171
    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    listAss                        shift and go to state 172
    tipeAss                        shift and go to state 175
    fact                           shift and go to state 107
    exp                            shift and go to state 174
    fact2                          shift and go to state 105
    fact4                          shift and go to state 108
    varAss                         shift and go to state 173

state 130

    (79) WID2 -> funCall .

    IF              reduce using rule 79 (WID2 -> funCall .)
    LA              reduce using rule 79 (WID2 -> funCall .)
    L               reduce using rule 79 (WID2 -> funCall .)
    ID              reduce using rule 79 (WID2 -> funCall .)
    RE              reduce using rule 79 (WID2 -> funCall .)
    REC             reduce using rule 79 (WID2 -> funCall .)
    TRI             reduce using rule 79 (WID2 -> funCall .)
    POL             reduce using rule 79 (WID2 -> funCall .)
    LS              reduce using rule 79 (WID2 -> funCall .)
    CIR             reduce using rule 79 (WID2 -> funCall .)
    SQ              reduce using rule 79 (WID2 -> funCall .)
    ARC             reduce using rule 79 (WID2 -> funCall .)
    PENC            reduce using rule 79 (WID2 -> funCall .)
    SETC            reduce using rule 79 (WID2 -> funCall .)
    BACO            reduce using rule 79 (WID2 -> funCall .)
    PENW            reduce using rule 79 (WID2 -> funCall .)
    F               reduce using rule 79 (WID2 -> funCall .)
    B               reduce using rule 79 (WID2 -> funCall .)
    PENP            reduce using rule 79 (WID2 -> funCall .)
    PENU            reduce using rule 79 (WID2 -> funCall .)
    PEND            reduce using rule 79 (WID2 -> funCall .)
    RB              reduce using rule 79 (WID2 -> funCall .)


state 131

    (77) WID -> ID WID2 .

    IF              reduce using rule 77 (WID -> ID WID2 .)
    LA              reduce using rule 77 (WID -> ID WID2 .)
    L               reduce using rule 77 (WID -> ID WID2 .)
    ID              reduce using rule 77 (WID -> ID WID2 .)
    RE              reduce using rule 77 (WID -> ID WID2 .)
    REC             reduce using rule 77 (WID -> ID WID2 .)
    TRI             reduce using rule 77 (WID -> ID WID2 .)
    POL             reduce using rule 77 (WID -> ID WID2 .)
    LS              reduce using rule 77 (WID -> ID WID2 .)
    CIR             reduce using rule 77 (WID -> ID WID2 .)
    SQ              reduce using rule 77 (WID -> ID WID2 .)
    ARC             reduce using rule 77 (WID -> ID WID2 .)
    PENC            reduce using rule 77 (WID -> ID WID2 .)
    SETC            reduce using rule 77 (WID -> ID WID2 .)
    BACO            reduce using rule 77 (WID -> ID WID2 .)
    PENW            reduce using rule 77 (WID -> ID WID2 .)
    F               reduce using rule 77 (WID -> ID WID2 .)
    B               reduce using rule 77 (WID -> ID WID2 .)
    PENP            reduce using rule 77 (WID -> ID WID2 .)
    PENU            reduce using rule 77 (WID -> ID WID2 .)
    PEND            reduce using rule 77 (WID -> ID WID2 .)
    RB              reduce using rule 77 (WID -> ID WID2 .)


state 132

    (104) condition -> IF LP . expresion condRP block con2
    (51) expresion -> . exp ex2
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    expresion                      shift and go to state 176
    valExp                         shift and go to state 100
    term                           shift and go to state 99
    fact                           shift and go to state 107
    exp                            shift and go to state 177
    fact2                          shift and go to state 105
    fact4                          shift and go to state 108

state 133

    (45) one_par -> CIR LP . exp p_fill RP SC
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    exp                            shift and go to state 178
    fact2                          shift and go to state 105
    fact4                          shift and go to state 108
    fact                           shift and go to state 107

state 134

    (46) one_par -> SQ LP . exp p_fill RP SC
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    exp                            shift and go to state 179
    fact2                          shift and go to state 105
    fact4                          shift and go to state 108
    fact                           shift and go to state 107

state 135

    (33) colors -> SETC LP . exp C exp C exp RP SC
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    exp                            shift and go to state 180
    fact2                          shift and go to state 105
    fact                           shift and go to state 107
    fact4                          shift and go to state 108

state 136

    (50) p_arc -> ARC LP . exp RP SC
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    exp                            shift and go to state 181
    fact2                          shift and go to state 105
    fact                           shift and go to state 107
    fact4                          shift and go to state 108

state 137

    (13) fun4 -> C fun5 . fun4
    (13) fun4 -> . C fun5 fun4
    (14) fun4 -> . empty
    (130) empty -> .

    C               shift and go to state 90
    RP              reduce using rule 130 (empty -> .)

    fun4                           shift and go to state 182
    empty                          shift and go to state 91

state 138

    (90) list -> L type ID prelistAss .

    IF              reduce using rule 90 (list -> L type ID prelistAss .)
    LA              reduce using rule 90 (list -> L type ID prelistAss .)
    L               reduce using rule 90 (list -> L type ID prelistAss .)
    ID              reduce using rule 90 (list -> L type ID prelistAss .)
    RE              reduce using rule 90 (list -> L type ID prelistAss .)
    REC             reduce using rule 90 (list -> L type ID prelistAss .)
    TRI             reduce using rule 90 (list -> L type ID prelistAss .)
    POL             reduce using rule 90 (list -> L type ID prelistAss .)
    LS              reduce using rule 90 (list -> L type ID prelistAss .)
    CIR             reduce using rule 90 (list -> L type ID prelistAss .)
    SQ              reduce using rule 90 (list -> L type ID prelistAss .)
    ARC             reduce using rule 90 (list -> L type ID prelistAss .)
    PENC            reduce using rule 90 (list -> L type ID prelistAss .)
    SETC            reduce using rule 90 (list -> L type ID prelistAss .)
    BACO            reduce using rule 90 (list -> L type ID prelistAss .)
    PENW            reduce using rule 90 (list -> L type ID prelistAss .)
    F               reduce using rule 90 (list -> L type ID prelistAss .)
    B               reduce using rule 90 (list -> L type ID prelistAss .)
    PENP            reduce using rule 90 (list -> L type ID prelistAss .)
    PENU            reduce using rule 90 (list -> L type ID prelistAss .)
    PEND            reduce using rule 90 (list -> L type ID prelistAss .)
    RB              reduce using rule 90 (list -> L type ID prelistAss .)
    FUN             reduce using rule 90 (list -> L type ID prelistAss .)
    MAIN            reduce using rule 90 (list -> L type ID prelistAss .)
    LB              reduce using rule 90 (list -> L type ID prelistAss .)


state 139

    (92) prelistAss -> SC .

    L               reduce using rule 92 (prelistAss -> SC .)
    FUN             reduce using rule 92 (prelistAss -> SC .)
    MAIN            reduce using rule 92 (prelistAss -> SC .)
    LB              reduce using rule 92 (prelistAss -> SC .)
    IF              reduce using rule 92 (prelistAss -> SC .)
    LA              reduce using rule 92 (prelistAss -> SC .)
    ID              reduce using rule 92 (prelistAss -> SC .)
    RE              reduce using rule 92 (prelistAss -> SC .)
    REC             reduce using rule 92 (prelistAss -> SC .)
    TRI             reduce using rule 92 (prelistAss -> SC .)
    POL             reduce using rule 92 (prelistAss -> SC .)
    LS              reduce using rule 92 (prelistAss -> SC .)
    CIR             reduce using rule 92 (prelistAss -> SC .)
    SQ              reduce using rule 92 (prelistAss -> SC .)
    ARC             reduce using rule 92 (prelistAss -> SC .)
    PENC            reduce using rule 92 (prelistAss -> SC .)
    SETC            reduce using rule 92 (prelistAss -> SC .)
    BACO            reduce using rule 92 (prelistAss -> SC .)
    PENW            reduce using rule 92 (prelistAss -> SC .)
    F               reduce using rule 92 (prelistAss -> SC .)
    B               reduce using rule 92 (prelistAss -> SC .)
    PENP            reduce using rule 92 (prelistAss -> SC .)
    PENU            reduce using rule 92 (prelistAss -> SC .)
    PEND            reduce using rule 92 (prelistAss -> SC .)
    RB              reduce using rule 92 (prelistAss -> SC .)


state 140

    (91) prelistAss -> EQ . listAss
    (93) listAss -> . LB lista3 RB SC

    LB              shift and go to state 171

    listAss                        shift and go to state 183

state 141

    (21) var33 -> C ID . var4 var33
    (23) var4 -> . EQ exp
    (24) var4 -> . empty
    (130) empty -> .

    EQ              shift and go to state 46
    C               reduce using rule 130 (empty -> .)
    SC              reduce using rule 130 (empty -> .)

    var4                           shift and go to state 184
    empty                          shift and go to state 47

state 142

    (62) exp3 -> SUB .

    LP              reduce using rule 62 (exp3 -> SUB .)
    ID              reduce using rule 62 (exp3 -> SUB .)
    VALI            reduce using rule 62 (exp3 -> SUB .)
    VALF            reduce using rule 62 (exp3 -> SUB .)


state 143

    (59) exp2 -> exp3 . exp
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    exp                            shift and go to state 185
    fact2                          shift and go to state 105
    fact                           shift and go to state 107
    fact4                          shift and go to state 108

state 144

    (58) exp -> term exp2 .

    C               reduce using rule 58 (exp -> term exp2 .)
    RP              reduce using rule 58 (exp -> term exp2 .)
    SC              reduce using rule 58 (exp -> term exp2 .)
    LB              reduce using rule 58 (exp -> term exp2 .)
    ADD             reduce using rule 58 (exp -> term exp2 .)
    LT              reduce using rule 58 (exp -> term exp2 .)
    MT              reduce using rule 58 (exp -> term exp2 .)
    D               reduce using rule 58 (exp -> term exp2 .)
    SEQ             reduce using rule 58 (exp -> term exp2 .)


state 145

    (61) exp3 -> ADD .

    LP              reduce using rule 61 (exp3 -> ADD .)
    ID              reduce using rule 61 (exp3 -> ADD .)
    VALI            reduce using rule 61 (exp3 -> ADD .)
    VALF            reduce using rule 61 (exp3 -> ADD .)


state 146

    (60) exp2 -> empty .

    C               reduce using rule 60 (exp2 -> empty .)
    SC              reduce using rule 60 (exp2 -> empty .)
    LB              reduce using rule 60 (exp2 -> empty .)
    RP              reduce using rule 60 (exp2 -> empty .)
    ADD             reduce using rule 60 (exp2 -> empty .)
    LT              reduce using rule 60 (exp2 -> empty .)
    MT              reduce using rule 60 (exp2 -> empty .)
    D               reduce using rule 60 (exp2 -> empty .)
    SEQ             reduce using rule 60 (exp2 -> empty .)


state 147

    (68) fact -> fact2 exp . RP

    RP              shift and go to state 186


state 148

    (64) term2 -> term3 . term
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 187
    valExp                         shift and go to state 100
    fact2                          shift and go to state 105
    fact                           shift and go to state 107
    fact4                          shift and go to state 108

state 149

    (63) term -> fact term2 .

    ADD             reduce using rule 63 (term -> fact term2 .)
    SUB             reduce using rule 63 (term -> fact term2 .)
    C               reduce using rule 63 (term -> fact term2 .)
    RP              reduce using rule 63 (term -> fact term2 .)
    SC              reduce using rule 63 (term -> fact term2 .)
    LB              reduce using rule 63 (term -> fact term2 .)
    LT              reduce using rule 63 (term -> fact term2 .)
    MT              reduce using rule 63 (term -> fact term2 .)
    D               reduce using rule 63 (term -> fact term2 .)
    SEQ             reduce using rule 63 (term -> fact term2 .)


state 150

    (66) term3 -> M .

    LP              reduce using rule 66 (term3 -> M .)
    ID              reduce using rule 66 (term3 -> M .)
    VALI            reduce using rule 66 (term3 -> M .)
    VALF            reduce using rule 66 (term3 -> M .)


state 151

    (67) term3 -> DIV .

    LP              reduce using rule 67 (term3 -> DIV .)
    ID              reduce using rule 67 (term3 -> DIV .)
    VALI            reduce using rule 67 (term3 -> DIV .)
    VALF            reduce using rule 67 (term3 -> DIV .)


state 152

    (65) term2 -> empty .

    ADD             reduce using rule 65 (term2 -> empty .)
    SUB             reduce using rule 65 (term2 -> empty .)
    C               reduce using rule 65 (term2 -> empty .)
    SC              reduce using rule 65 (term2 -> empty .)
    LB              reduce using rule 65 (term2 -> empty .)
    RP              reduce using rule 65 (term2 -> empty .)
    LT              reduce using rule 65 (term2 -> empty .)
    MT              reduce using rule 65 (term2 -> empty .)
    D               reduce using rule 65 (term2 -> empty .)
    SEQ             reduce using rule 65 (term2 -> empty .)


state 153

    (31) position -> PENP LP exp . C exp RP SC

    C               shift and go to state 188


state 154

    (34) colors -> BACO LP exp . C exp C exp RP SC

    C               shift and go to state 189


state 155

    (41) rect -> REC LP exp . C exp p_fill RP SC

    C               shift and go to state 190


state 156

    (35) p_width -> PENW LP exp . RP SC

    RP              shift and go to state 191


state 157

    (102) stExp -> STR .

    ADD             reduce using rule 102 (stExp -> STR .)
    RP              reduce using rule 102 (stExp -> STR .)


state 158

    (99) lab -> LA LP stExp . lab2 RP SC
    (100) lab2 -> . ADD stExp lab2
    (101) lab2 -> . empty
    (130) empty -> .

    ADD             shift and go to state 193
    RP              reduce using rule 130 (empty -> .)

    lab2                           shift and go to state 192
    empty                          shift and go to state 194

state 159

    (103) stExp -> exp .

    ADD             reduce using rule 103 (stExp -> exp .)
    RP              reduce using rule 103 (stExp -> exp .)


state 160

    (47) poly -> POL LP idList . p_fill RP SC
    (42) p_fill -> . C FILL
    (43) p_fill -> . empty
    (130) empty -> .

    C               shift and go to state 195
    RP              reduce using rule 130 (empty -> .)

    empty                          shift and go to state 197
    p_fill                         shift and go to state 196

state 161

    (49) idList -> ID .

    RP              reduce using rule 49 (idList -> ID .)
    C               reduce using rule 49 (idList -> ID .)


state 162

    (75) rep -> RE rep3 block .

    IF              reduce using rule 75 (rep -> RE rep3 block .)
    LA              reduce using rule 75 (rep -> RE rep3 block .)
    L               reduce using rule 75 (rep -> RE rep3 block .)
    ID              reduce using rule 75 (rep -> RE rep3 block .)
    RE              reduce using rule 75 (rep -> RE rep3 block .)
    REC             reduce using rule 75 (rep -> RE rep3 block .)
    TRI             reduce using rule 75 (rep -> RE rep3 block .)
    POL             reduce using rule 75 (rep -> RE rep3 block .)
    LS              reduce using rule 75 (rep -> RE rep3 block .)
    CIR             reduce using rule 75 (rep -> RE rep3 block .)
    SQ              reduce using rule 75 (rep -> RE rep3 block .)
    ARC             reduce using rule 75 (rep -> RE rep3 block .)
    PENC            reduce using rule 75 (rep -> RE rep3 block .)
    SETC            reduce using rule 75 (rep -> RE rep3 block .)
    BACO            reduce using rule 75 (rep -> RE rep3 block .)
    PENW            reduce using rule 75 (rep -> RE rep3 block .)
    F               reduce using rule 75 (rep -> RE rep3 block .)
    B               reduce using rule 75 (rep -> RE rep3 block .)
    PENP            reduce using rule 75 (rep -> RE rep3 block .)
    PENU            reduce using rule 75 (rep -> RE rep3 block .)
    PEND            reduce using rule 75 (rep -> RE rep3 block .)
    RB              reduce using rule 75 (rep -> RE rep3 block .)


state 163

    (32) colors -> PENC LP exp . C exp C exp RP SC

    C               shift and go to state 198


state 164

    (48) lstrip -> LS LP idList . RP SC

    RP              shift and go to state 199


state 165

    (44) tria -> TRI LP exp . C exp C exp p_fill RP SC

    C               shift and go to state 200


state 166

    (40) mueve2 -> LP exp . C A exp RP SC

    C               shift and go to state 201


state 167

    (84) funCall -> LP func2 . RP SC

    RP              shift and go to state 202


state 168

    (89) func4 -> exp .

    C               reduce using rule 89 (func4 -> exp .)
    RP              reduce using rule 89 (func4 -> exp .)


state 169

    (85) func2 -> func4 . func3
    (87) func3 -> . C func4 func3
    (88) func3 -> . empty
    (130) empty -> .

    C               shift and go to state 204
    RP              reduce using rule 130 (empty -> .)

    func3                          shift and go to state 203
    empty                          shift and go to state 205

state 170

    (86) func2 -> empty .

    RP              reduce using rule 86 (func2 -> empty .)


state 171

    (93) listAss -> LB . lista3 RB SC
    (96) lista3 -> . lista2 li4
    (94) lista2 -> . val
    (95) lista2 -> . ID
    (29) val -> . VALI
    (30) val -> . VALF

    ID              shift and go to state 209
    VALI            shift and go to state 206
    VALF            shift and go to state 208

    val                            shift and go to state 207
    lista3                         shift and go to state 210
    lista2                         shift and go to state 211

state 172

    (82) tipeAss -> listAss .

    IF              reduce using rule 82 (tipeAss -> listAss .)
    LA              reduce using rule 82 (tipeAss -> listAss .)
    L               reduce using rule 82 (tipeAss -> listAss .)
    ID              reduce using rule 82 (tipeAss -> listAss .)
    RE              reduce using rule 82 (tipeAss -> listAss .)
    REC             reduce using rule 82 (tipeAss -> listAss .)
    TRI             reduce using rule 82 (tipeAss -> listAss .)
    POL             reduce using rule 82 (tipeAss -> listAss .)
    LS              reduce using rule 82 (tipeAss -> listAss .)
    CIR             reduce using rule 82 (tipeAss -> listAss .)
    SQ              reduce using rule 82 (tipeAss -> listAss .)
    ARC             reduce using rule 82 (tipeAss -> listAss .)
    PENC            reduce using rule 82 (tipeAss -> listAss .)
    SETC            reduce using rule 82 (tipeAss -> listAss .)
    BACO            reduce using rule 82 (tipeAss -> listAss .)
    PENW            reduce using rule 82 (tipeAss -> listAss .)
    F               reduce using rule 82 (tipeAss -> listAss .)
    B               reduce using rule 82 (tipeAss -> listAss .)
    PENP            reduce using rule 82 (tipeAss -> listAss .)
    PENU            reduce using rule 82 (tipeAss -> listAss .)
    PEND            reduce using rule 82 (tipeAss -> listAss .)
    RB              reduce using rule 82 (tipeAss -> listAss .)


state 173

    (81) tipeAss -> varAss .

    IF              reduce using rule 81 (tipeAss -> varAss .)
    LA              reduce using rule 81 (tipeAss -> varAss .)
    L               reduce using rule 81 (tipeAss -> varAss .)
    ID              reduce using rule 81 (tipeAss -> varAss .)
    RE              reduce using rule 81 (tipeAss -> varAss .)
    REC             reduce using rule 81 (tipeAss -> varAss .)
    TRI             reduce using rule 81 (tipeAss -> varAss .)
    POL             reduce using rule 81 (tipeAss -> varAss .)
    LS              reduce using rule 81 (tipeAss -> varAss .)
    CIR             reduce using rule 81 (tipeAss -> varAss .)
    SQ              reduce using rule 81 (tipeAss -> varAss .)
    ARC             reduce using rule 81 (tipeAss -> varAss .)
    PENC            reduce using rule 81 (tipeAss -> varAss .)
    SETC            reduce using rule 81 (tipeAss -> varAss .)
    BACO            reduce using rule 81 (tipeAss -> varAss .)
    PENW            reduce using rule 81 (tipeAss -> varAss .)
    F               reduce using rule 81 (tipeAss -> varAss .)
    B               reduce using rule 81 (tipeAss -> varAss .)
    PENP            reduce using rule 81 (tipeAss -> varAss .)
    PENU            reduce using rule 81 (tipeAss -> varAss .)
    PEND            reduce using rule 81 (tipeAss -> varAss .)
    RB              reduce using rule 81 (tipeAss -> varAss .)


state 174

    (83) varAss -> exp . SC

    SC              shift and go to state 212


state 175

    (80) assigment -> EQ tipeAss .

    IF              reduce using rule 80 (assigment -> EQ tipeAss .)
    LA              reduce using rule 80 (assigment -> EQ tipeAss .)
    L               reduce using rule 80 (assigment -> EQ tipeAss .)
    ID              reduce using rule 80 (assigment -> EQ tipeAss .)
    RE              reduce using rule 80 (assigment -> EQ tipeAss .)
    REC             reduce using rule 80 (assigment -> EQ tipeAss .)
    TRI             reduce using rule 80 (assigment -> EQ tipeAss .)
    POL             reduce using rule 80 (assigment -> EQ tipeAss .)
    LS              reduce using rule 80 (assigment -> EQ tipeAss .)
    CIR             reduce using rule 80 (assigment -> EQ tipeAss .)
    SQ              reduce using rule 80 (assigment -> EQ tipeAss .)
    ARC             reduce using rule 80 (assigment -> EQ tipeAss .)
    PENC            reduce using rule 80 (assigment -> EQ tipeAss .)
    SETC            reduce using rule 80 (assigment -> EQ tipeAss .)
    BACO            reduce using rule 80 (assigment -> EQ tipeAss .)
    PENW            reduce using rule 80 (assigment -> EQ tipeAss .)
    F               reduce using rule 80 (assigment -> EQ tipeAss .)
    B               reduce using rule 80 (assigment -> EQ tipeAss .)
    PENP            reduce using rule 80 (assigment -> EQ tipeAss .)
    PENU            reduce using rule 80 (assigment -> EQ tipeAss .)
    PEND            reduce using rule 80 (assigment -> EQ tipeAss .)
    RB              reduce using rule 80 (assigment -> EQ tipeAss .)


state 176

    (104) condition -> IF LP expresion . condRP block con2
    (105) condRP -> . RP

    RP              shift and go to state 213

    condRP                         shift and go to state 214

state 177

    (51) expresion -> exp . ex2
    (52) ex2 -> . ex3 exp
    (53) ex2 -> . empty
    (54) ex3 -> . LT
    (55) ex3 -> . MT
    (56) ex3 -> . D
    (57) ex3 -> . SEQ
    (130) empty -> .

    LT              shift and go to state 218
    MT              shift and go to state 217
    D               shift and go to state 215
    SEQ             shift and go to state 216
    RP              reduce using rule 130 (empty -> .)

    empty                          shift and go to state 221
    ex2                            shift and go to state 219
    ex3                            shift and go to state 220

state 178

    (45) one_par -> CIR LP exp . p_fill RP SC
    (42) p_fill -> . C FILL
    (43) p_fill -> . empty
    (130) empty -> .

    C               shift and go to state 195
    RP              reduce using rule 130 (empty -> .)

    empty                          shift and go to state 197
    p_fill                         shift and go to state 222

state 179

    (46) one_par -> SQ LP exp . p_fill RP SC
    (42) p_fill -> . C FILL
    (43) p_fill -> . empty
    (130) empty -> .

    C               shift and go to state 195
    RP              reduce using rule 130 (empty -> .)

    empty                          shift and go to state 197
    p_fill                         shift and go to state 223

state 180

    (33) colors -> SETC LP exp . C exp C exp RP SC

    C               shift and go to state 224


state 181

    (50) p_arc -> ARC LP exp . RP SC

    RP              shift and go to state 225


state 182

    (13) fun4 -> C fun5 fun4 .

    RP              reduce using rule 13 (fun4 -> C fun5 fun4 .)


state 183

    (91) prelistAss -> EQ listAss .

    L               reduce using rule 91 (prelistAss -> EQ listAss .)
    FUN             reduce using rule 91 (prelistAss -> EQ listAss .)
    MAIN            reduce using rule 91 (prelistAss -> EQ listAss .)
    LB              reduce using rule 91 (prelistAss -> EQ listAss .)
    IF              reduce using rule 91 (prelistAss -> EQ listAss .)
    LA              reduce using rule 91 (prelistAss -> EQ listAss .)
    ID              reduce using rule 91 (prelistAss -> EQ listAss .)
    RE              reduce using rule 91 (prelistAss -> EQ listAss .)
    REC             reduce using rule 91 (prelistAss -> EQ listAss .)
    TRI             reduce using rule 91 (prelistAss -> EQ listAss .)
    POL             reduce using rule 91 (prelistAss -> EQ listAss .)
    LS              reduce using rule 91 (prelistAss -> EQ listAss .)
    CIR             reduce using rule 91 (prelistAss -> EQ listAss .)
    SQ              reduce using rule 91 (prelistAss -> EQ listAss .)
    ARC             reduce using rule 91 (prelistAss -> EQ listAss .)
    PENC            reduce using rule 91 (prelistAss -> EQ listAss .)
    SETC            reduce using rule 91 (prelistAss -> EQ listAss .)
    BACO            reduce using rule 91 (prelistAss -> EQ listAss .)
    PENW            reduce using rule 91 (prelistAss -> EQ listAss .)
    F               reduce using rule 91 (prelistAss -> EQ listAss .)
    B               reduce using rule 91 (prelistAss -> EQ listAss .)
    PENP            reduce using rule 91 (prelistAss -> EQ listAss .)
    PENU            reduce using rule 91 (prelistAss -> EQ listAss .)
    PEND            reduce using rule 91 (prelistAss -> EQ listAss .)
    RB              reduce using rule 91 (prelistAss -> EQ listAss .)


state 184

    (21) var33 -> C ID var4 . var33
    (21) var33 -> . C ID var4 var33
    (22) var33 -> . empty
    (130) empty -> .

    C               shift and go to state 97
    SC              reduce using rule 130 (empty -> .)

    var33                          shift and go to state 226
    empty                          shift and go to state 98

state 185

    (59) exp2 -> exp3 exp .

    C               reduce using rule 59 (exp2 -> exp3 exp .)
    SC              reduce using rule 59 (exp2 -> exp3 exp .)
    LB              reduce using rule 59 (exp2 -> exp3 exp .)
    RP              reduce using rule 59 (exp2 -> exp3 exp .)
    ADD             reduce using rule 59 (exp2 -> exp3 exp .)
    LT              reduce using rule 59 (exp2 -> exp3 exp .)
    MT              reduce using rule 59 (exp2 -> exp3 exp .)
    D               reduce using rule 59 (exp2 -> exp3 exp .)
    SEQ             reduce using rule 59 (exp2 -> exp3 exp .)


state 186

    (68) fact -> fact2 exp RP .

    M               reduce using rule 68 (fact -> fact2 exp RP .)
    DIV             reduce using rule 68 (fact -> fact2 exp RP .)
    ADD             reduce using rule 68 (fact -> fact2 exp RP .)
    SUB             reduce using rule 68 (fact -> fact2 exp RP .)
    C               reduce using rule 68 (fact -> fact2 exp RP .)
    RP              reduce using rule 68 (fact -> fact2 exp RP .)
    LB              reduce using rule 68 (fact -> fact2 exp RP .)
    SC              reduce using rule 68 (fact -> fact2 exp RP .)
    LT              reduce using rule 68 (fact -> fact2 exp RP .)
    MT              reduce using rule 68 (fact -> fact2 exp RP .)
    D               reduce using rule 68 (fact -> fact2 exp RP .)
    SEQ             reduce using rule 68 (fact -> fact2 exp RP .)


state 187

    (64) term2 -> term3 term .

    ADD             reduce using rule 64 (term2 -> term3 term .)
    SUB             reduce using rule 64 (term2 -> term3 term .)
    C               reduce using rule 64 (term2 -> term3 term .)
    SC              reduce using rule 64 (term2 -> term3 term .)
    LB              reduce using rule 64 (term2 -> term3 term .)
    RP              reduce using rule 64 (term2 -> term3 term .)
    LT              reduce using rule 64 (term2 -> term3 term .)
    MT              reduce using rule 64 (term2 -> term3 term .)
    D               reduce using rule 64 (term2 -> term3 term .)
    SEQ             reduce using rule 64 (term2 -> term3 term .)


state 188

    (31) position -> PENP LP exp C . exp RP SC
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    exp                            shift and go to state 227
    fact2                          shift and go to state 105
    fact                           shift and go to state 107
    fact4                          shift and go to state 108

state 189

    (34) colors -> BACO LP exp C . exp C exp RP SC
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    exp                            shift and go to state 228
    fact2                          shift and go to state 105
    fact                           shift and go to state 107
    fact4                          shift and go to state 108

state 190

    (41) rect -> REC LP exp C . exp p_fill RP SC
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    exp                            shift and go to state 229
    fact2                          shift and go to state 105
    fact4                          shift and go to state 108
    fact                           shift and go to state 107

state 191

    (35) p_width -> PENW LP exp RP . SC

    SC              shift and go to state 230


state 192

    (99) lab -> LA LP stExp lab2 . RP SC

    RP              shift and go to state 231


state 193

    (100) lab2 -> ADD . stExp lab2
    (102) stExp -> . STR
    (103) stExp -> . exp
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    STR             shift and go to state 157
    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    stExp                          shift and go to state 232
    exp                            shift and go to state 159
    fact2                          shift and go to state 105
    fact                           shift and go to state 107
    fact4                          shift and go to state 108

state 194

    (101) lab2 -> empty .

    RP              reduce using rule 101 (lab2 -> empty .)


state 195

    (42) p_fill -> C . FILL

    FILL            shift and go to state 233


state 196

    (47) poly -> POL LP idList p_fill . RP SC

    RP              shift and go to state 234


state 197

    (43) p_fill -> empty .

    RP              reduce using rule 43 (p_fill -> empty .)


state 198

    (32) colors -> PENC LP exp C . exp C exp RP SC
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    exp                            shift and go to state 235
    fact2                          shift and go to state 105
    fact                           shift and go to state 107
    fact4                          shift and go to state 108

state 199

    (48) lstrip -> LS LP idList RP . SC

    SC              shift and go to state 236


state 200

    (44) tria -> TRI LP exp C . exp C exp p_fill RP SC
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    exp                            shift and go to state 237
    fact2                          shift and go to state 105
    fact4                          shift and go to state 108
    fact                           shift and go to state 107

state 201

    (40) mueve2 -> LP exp C . A exp RP SC

    A               shift and go to state 238


state 202

    (84) funCall -> LP func2 RP . SC

    SC              shift and go to state 239


state 203

    (85) func2 -> func4 func3 .

    RP              reduce using rule 85 (func2 -> func4 func3 .)


state 204

    (87) func3 -> C . func4 func3
    (89) func4 -> . exp
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    func4                          shift and go to state 240
    exp                            shift and go to state 168
    fact2                          shift and go to state 105
    fact                           shift and go to state 107
    fact4                          shift and go to state 108

state 205

    (88) func3 -> empty .

    RP              reduce using rule 88 (func3 -> empty .)


state 206

    (29) val -> VALI .

    C               reduce using rule 29 (val -> VALI .)
    RB              reduce using rule 29 (val -> VALI .)


state 207

    (94) lista2 -> val .

    C               reduce using rule 94 (lista2 -> val .)
    RB              reduce using rule 94 (lista2 -> val .)


state 208

    (30) val -> VALF .

    C               reduce using rule 30 (val -> VALF .)
    RB              reduce using rule 30 (val -> VALF .)


state 209

    (95) lista2 -> ID .

    C               reduce using rule 95 (lista2 -> ID .)
    RB              reduce using rule 95 (lista2 -> ID .)


state 210

    (93) listAss -> LB lista3 . RB SC

    RB              shift and go to state 241


state 211

    (96) lista3 -> lista2 . li4
    (97) li4 -> . C lista2 li4
    (98) li4 -> . empty
    (130) empty -> .

    C               shift and go to state 243
    RB              reduce using rule 130 (empty -> .)

    li4                            shift and go to state 242
    empty                          shift and go to state 244

state 212

    (83) varAss -> exp SC .

    IF              reduce using rule 83 (varAss -> exp SC .)
    LA              reduce using rule 83 (varAss -> exp SC .)
    L               reduce using rule 83 (varAss -> exp SC .)
    ID              reduce using rule 83 (varAss -> exp SC .)
    RE              reduce using rule 83 (varAss -> exp SC .)
    REC             reduce using rule 83 (varAss -> exp SC .)
    TRI             reduce using rule 83 (varAss -> exp SC .)
    POL             reduce using rule 83 (varAss -> exp SC .)
    LS              reduce using rule 83 (varAss -> exp SC .)
    CIR             reduce using rule 83 (varAss -> exp SC .)
    SQ              reduce using rule 83 (varAss -> exp SC .)
    ARC             reduce using rule 83 (varAss -> exp SC .)
    PENC            reduce using rule 83 (varAss -> exp SC .)
    SETC            reduce using rule 83 (varAss -> exp SC .)
    BACO            reduce using rule 83 (varAss -> exp SC .)
    PENW            reduce using rule 83 (varAss -> exp SC .)
    F               reduce using rule 83 (varAss -> exp SC .)
    B               reduce using rule 83 (varAss -> exp SC .)
    PENP            reduce using rule 83 (varAss -> exp SC .)
    PENU            reduce using rule 83 (varAss -> exp SC .)
    PEND            reduce using rule 83 (varAss -> exp SC .)
    RB              reduce using rule 83 (varAss -> exp SC .)


state 213

    (105) condRP -> RP .

    LB              reduce using rule 105 (condRP -> RP .)


state 214

    (104) condition -> IF LP expresion condRP . block con2
    (109) block -> . LB block3 RB

    LB              shift and go to state 35

    block                          shift and go to state 245

state 215

    (56) ex3 -> D .

    LP              reduce using rule 56 (ex3 -> D .)
    ID              reduce using rule 56 (ex3 -> D .)
    VALI            reduce using rule 56 (ex3 -> D .)
    VALF            reduce using rule 56 (ex3 -> D .)


state 216

    (57) ex3 -> SEQ .

    LP              reduce using rule 57 (ex3 -> SEQ .)
    ID              reduce using rule 57 (ex3 -> SEQ .)
    VALI            reduce using rule 57 (ex3 -> SEQ .)
    VALF            reduce using rule 57 (ex3 -> SEQ .)


state 217

    (55) ex3 -> MT .

    LP              reduce using rule 55 (ex3 -> MT .)
    ID              reduce using rule 55 (ex3 -> MT .)
    VALI            reduce using rule 55 (ex3 -> MT .)
    VALF            reduce using rule 55 (ex3 -> MT .)


state 218

    (54) ex3 -> LT .

    LP              reduce using rule 54 (ex3 -> LT .)
    ID              reduce using rule 54 (ex3 -> LT .)
    VALI            reduce using rule 54 (ex3 -> LT .)
    VALF            reduce using rule 54 (ex3 -> LT .)


state 219

    (51) expresion -> exp ex2 .

    RP              reduce using rule 51 (expresion -> exp ex2 .)


state 220

    (52) ex2 -> ex3 . exp
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    exp                            shift and go to state 246
    fact2                          shift and go to state 105
    fact                           shift and go to state 107
    fact4                          shift and go to state 108

state 221

    (53) ex2 -> empty .

    RP              reduce using rule 53 (ex2 -> empty .)


state 222

    (45) one_par -> CIR LP exp p_fill . RP SC

    RP              shift and go to state 247


state 223

    (46) one_par -> SQ LP exp p_fill . RP SC

    RP              shift and go to state 248


state 224

    (33) colors -> SETC LP exp C . exp C exp RP SC
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    exp                            shift and go to state 249
    fact2                          shift and go to state 105
    fact                           shift and go to state 107
    fact4                          shift and go to state 108

state 225

    (50) p_arc -> ARC LP exp RP . SC

    SC              shift and go to state 250


state 226

    (21) var33 -> C ID var4 var33 .

    SC              reduce using rule 21 (var33 -> C ID var4 var33 .)


state 227

    (31) position -> PENP LP exp C exp . RP SC

    RP              shift and go to state 251


state 228

    (34) colors -> BACO LP exp C exp . C exp RP SC

    C               shift and go to state 252


state 229

    (41) rect -> REC LP exp C exp . p_fill RP SC
    (42) p_fill -> . C FILL
    (43) p_fill -> . empty
    (130) empty -> .

    C               shift and go to state 195
    RP              reduce using rule 130 (empty -> .)

    empty                          shift and go to state 197
    p_fill                         shift and go to state 253

state 230

    (35) p_width -> PENW LP exp RP SC .

    IF              reduce using rule 35 (p_width -> PENW LP exp RP SC .)
    LA              reduce using rule 35 (p_width -> PENW LP exp RP SC .)
    L               reduce using rule 35 (p_width -> PENW LP exp RP SC .)
    ID              reduce using rule 35 (p_width -> PENW LP exp RP SC .)
    RE              reduce using rule 35 (p_width -> PENW LP exp RP SC .)
    REC             reduce using rule 35 (p_width -> PENW LP exp RP SC .)
    TRI             reduce using rule 35 (p_width -> PENW LP exp RP SC .)
    POL             reduce using rule 35 (p_width -> PENW LP exp RP SC .)
    LS              reduce using rule 35 (p_width -> PENW LP exp RP SC .)
    CIR             reduce using rule 35 (p_width -> PENW LP exp RP SC .)
    SQ              reduce using rule 35 (p_width -> PENW LP exp RP SC .)
    ARC             reduce using rule 35 (p_width -> PENW LP exp RP SC .)
    PENC            reduce using rule 35 (p_width -> PENW LP exp RP SC .)
    SETC            reduce using rule 35 (p_width -> PENW LP exp RP SC .)
    BACO            reduce using rule 35 (p_width -> PENW LP exp RP SC .)
    PENW            reduce using rule 35 (p_width -> PENW LP exp RP SC .)
    F               reduce using rule 35 (p_width -> PENW LP exp RP SC .)
    B               reduce using rule 35 (p_width -> PENW LP exp RP SC .)
    PENP            reduce using rule 35 (p_width -> PENW LP exp RP SC .)
    PENU            reduce using rule 35 (p_width -> PENW LP exp RP SC .)
    PEND            reduce using rule 35 (p_width -> PENW LP exp RP SC .)
    RB              reduce using rule 35 (p_width -> PENW LP exp RP SC .)


state 231

    (99) lab -> LA LP stExp lab2 RP . SC

    SC              shift and go to state 254


state 232

    (100) lab2 -> ADD stExp . lab2
    (100) lab2 -> . ADD stExp lab2
    (101) lab2 -> . empty
    (130) empty -> .

    ADD             shift and go to state 193
    RP              reduce using rule 130 (empty -> .)

    lab2                           shift and go to state 255
    empty                          shift and go to state 194

state 233

    (42) p_fill -> C FILL .

    RP              reduce using rule 42 (p_fill -> C FILL .)


state 234

    (47) poly -> POL LP idList p_fill RP . SC

    SC              shift and go to state 256


state 235

    (32) colors -> PENC LP exp C exp . C exp RP SC

    C               shift and go to state 257


state 236

    (48) lstrip -> LS LP idList RP SC .

    IF              reduce using rule 48 (lstrip -> LS LP idList RP SC .)
    LA              reduce using rule 48 (lstrip -> LS LP idList RP SC .)
    L               reduce using rule 48 (lstrip -> LS LP idList RP SC .)
    ID              reduce using rule 48 (lstrip -> LS LP idList RP SC .)
    RE              reduce using rule 48 (lstrip -> LS LP idList RP SC .)
    REC             reduce using rule 48 (lstrip -> LS LP idList RP SC .)
    TRI             reduce using rule 48 (lstrip -> LS LP idList RP SC .)
    POL             reduce using rule 48 (lstrip -> LS LP idList RP SC .)
    LS              reduce using rule 48 (lstrip -> LS LP idList RP SC .)
    CIR             reduce using rule 48 (lstrip -> LS LP idList RP SC .)
    SQ              reduce using rule 48 (lstrip -> LS LP idList RP SC .)
    ARC             reduce using rule 48 (lstrip -> LS LP idList RP SC .)
    PENC            reduce using rule 48 (lstrip -> LS LP idList RP SC .)
    SETC            reduce using rule 48 (lstrip -> LS LP idList RP SC .)
    BACO            reduce using rule 48 (lstrip -> LS LP idList RP SC .)
    PENW            reduce using rule 48 (lstrip -> LS LP idList RP SC .)
    F               reduce using rule 48 (lstrip -> LS LP idList RP SC .)
    B               reduce using rule 48 (lstrip -> LS LP idList RP SC .)
    PENP            reduce using rule 48 (lstrip -> LS LP idList RP SC .)
    PENU            reduce using rule 48 (lstrip -> LS LP idList RP SC .)
    PEND            reduce using rule 48 (lstrip -> LS LP idList RP SC .)
    RB              reduce using rule 48 (lstrip -> LS LP idList RP SC .)


state 237

    (44) tria -> TRI LP exp C exp . C exp p_fill RP SC

    C               shift and go to state 258


state 238

    (40) mueve2 -> LP exp C A . exp RP SC
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    exp                            shift and go to state 259
    fact2                          shift and go to state 105
    fact                           shift and go to state 107
    fact4                          shift and go to state 108

state 239

    (84) funCall -> LP func2 RP SC .

    IF              reduce using rule 84 (funCall -> LP func2 RP SC .)
    LA              reduce using rule 84 (funCall -> LP func2 RP SC .)
    L               reduce using rule 84 (funCall -> LP func2 RP SC .)
    ID              reduce using rule 84 (funCall -> LP func2 RP SC .)
    RE              reduce using rule 84 (funCall -> LP func2 RP SC .)
    REC             reduce using rule 84 (funCall -> LP func2 RP SC .)
    TRI             reduce using rule 84 (funCall -> LP func2 RP SC .)
    POL             reduce using rule 84 (funCall -> LP func2 RP SC .)
    LS              reduce using rule 84 (funCall -> LP func2 RP SC .)
    CIR             reduce using rule 84 (funCall -> LP func2 RP SC .)
    SQ              reduce using rule 84 (funCall -> LP func2 RP SC .)
    ARC             reduce using rule 84 (funCall -> LP func2 RP SC .)
    PENC            reduce using rule 84 (funCall -> LP func2 RP SC .)
    SETC            reduce using rule 84 (funCall -> LP func2 RP SC .)
    BACO            reduce using rule 84 (funCall -> LP func2 RP SC .)
    PENW            reduce using rule 84 (funCall -> LP func2 RP SC .)
    F               reduce using rule 84 (funCall -> LP func2 RP SC .)
    B               reduce using rule 84 (funCall -> LP func2 RP SC .)
    PENP            reduce using rule 84 (funCall -> LP func2 RP SC .)
    PENU            reduce using rule 84 (funCall -> LP func2 RP SC .)
    PEND            reduce using rule 84 (funCall -> LP func2 RP SC .)
    RB              reduce using rule 84 (funCall -> LP func2 RP SC .)


state 240

    (87) func3 -> C func4 . func3
    (87) func3 -> . C func4 func3
    (88) func3 -> . empty
    (130) empty -> .

    C               shift and go to state 204
    RP              reduce using rule 130 (empty -> .)

    func3                          shift and go to state 260
    empty                          shift and go to state 205

state 241

    (93) listAss -> LB lista3 RB . SC

    SC              shift and go to state 261


state 242

    (96) lista3 -> lista2 li4 .

    RB              reduce using rule 96 (lista3 -> lista2 li4 .)


state 243

    (97) li4 -> C . lista2 li4
    (94) lista2 -> . val
    (95) lista2 -> . ID
    (29) val -> . VALI
    (30) val -> . VALF

    ID              shift and go to state 209
    VALI            shift and go to state 206
    VALF            shift and go to state 208

    val                            shift and go to state 207
    lista2                         shift and go to state 262

state 244

    (98) li4 -> empty .

    RB              reduce using rule 98 (li4 -> empty .)


state 245

    (104) condition -> IF LP expresion condRP block . con2
    (106) con2 -> . empty
    (107) con2 -> . con3 block
    (130) empty -> .
    (108) con3 -> . ELSE

    IF              reduce using rule 130 (empty -> .)
    LA              reduce using rule 130 (empty -> .)
    L               reduce using rule 130 (empty -> .)
    ID              reduce using rule 130 (empty -> .)
    RE              reduce using rule 130 (empty -> .)
    REC             reduce using rule 130 (empty -> .)
    TRI             reduce using rule 130 (empty -> .)
    POL             reduce using rule 130 (empty -> .)
    LS              reduce using rule 130 (empty -> .)
    CIR             reduce using rule 130 (empty -> .)
    SQ              reduce using rule 130 (empty -> .)
    ARC             reduce using rule 130 (empty -> .)
    PENC            reduce using rule 130 (empty -> .)
    SETC            reduce using rule 130 (empty -> .)
    BACO            reduce using rule 130 (empty -> .)
    PENW            reduce using rule 130 (empty -> .)
    F               reduce using rule 130 (empty -> .)
    B               reduce using rule 130 (empty -> .)
    PENP            reduce using rule 130 (empty -> .)
    PENU            reduce using rule 130 (empty -> .)
    PEND            reduce using rule 130 (empty -> .)
    RB              reduce using rule 130 (empty -> .)
    ELSE            shift and go to state 265

    con2                           shift and go to state 263
    con3                           shift and go to state 264
    empty                          shift and go to state 266

state 246

    (52) ex2 -> ex3 exp .

    RP              reduce using rule 52 (ex2 -> ex3 exp .)


state 247

    (45) one_par -> CIR LP exp p_fill RP . SC

    SC              shift and go to state 267


state 248

    (46) one_par -> SQ LP exp p_fill RP . SC

    SC              shift and go to state 268


state 249

    (33) colors -> SETC LP exp C exp . C exp RP SC

    C               shift and go to state 269


state 250

    (50) p_arc -> ARC LP exp RP SC .

    IF              reduce using rule 50 (p_arc -> ARC LP exp RP SC .)
    LA              reduce using rule 50 (p_arc -> ARC LP exp RP SC .)
    L               reduce using rule 50 (p_arc -> ARC LP exp RP SC .)
    ID              reduce using rule 50 (p_arc -> ARC LP exp RP SC .)
    RE              reduce using rule 50 (p_arc -> ARC LP exp RP SC .)
    REC             reduce using rule 50 (p_arc -> ARC LP exp RP SC .)
    TRI             reduce using rule 50 (p_arc -> ARC LP exp RP SC .)
    POL             reduce using rule 50 (p_arc -> ARC LP exp RP SC .)
    LS              reduce using rule 50 (p_arc -> ARC LP exp RP SC .)
    CIR             reduce using rule 50 (p_arc -> ARC LP exp RP SC .)
    SQ              reduce using rule 50 (p_arc -> ARC LP exp RP SC .)
    ARC             reduce using rule 50 (p_arc -> ARC LP exp RP SC .)
    PENC            reduce using rule 50 (p_arc -> ARC LP exp RP SC .)
    SETC            reduce using rule 50 (p_arc -> ARC LP exp RP SC .)
    BACO            reduce using rule 50 (p_arc -> ARC LP exp RP SC .)
    PENW            reduce using rule 50 (p_arc -> ARC LP exp RP SC .)
    F               reduce using rule 50 (p_arc -> ARC LP exp RP SC .)
    B               reduce using rule 50 (p_arc -> ARC LP exp RP SC .)
    PENP            reduce using rule 50 (p_arc -> ARC LP exp RP SC .)
    PENU            reduce using rule 50 (p_arc -> ARC LP exp RP SC .)
    PEND            reduce using rule 50 (p_arc -> ARC LP exp RP SC .)
    RB              reduce using rule 50 (p_arc -> ARC LP exp RP SC .)


state 251

    (31) position -> PENP LP exp C exp RP . SC

    SC              shift and go to state 270


state 252

    (34) colors -> BACO LP exp C exp C . exp RP SC
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    exp                            shift and go to state 271
    fact2                          shift and go to state 105
    fact                           shift and go to state 107
    fact4                          shift and go to state 108

state 253

    (41) rect -> REC LP exp C exp p_fill . RP SC

    RP              shift and go to state 272


state 254

    (99) lab -> LA LP stExp lab2 RP SC .

    IF              reduce using rule 99 (lab -> LA LP stExp lab2 RP SC .)
    LA              reduce using rule 99 (lab -> LA LP stExp lab2 RP SC .)
    L               reduce using rule 99 (lab -> LA LP stExp lab2 RP SC .)
    ID              reduce using rule 99 (lab -> LA LP stExp lab2 RP SC .)
    RE              reduce using rule 99 (lab -> LA LP stExp lab2 RP SC .)
    REC             reduce using rule 99 (lab -> LA LP stExp lab2 RP SC .)
    TRI             reduce using rule 99 (lab -> LA LP stExp lab2 RP SC .)
    POL             reduce using rule 99 (lab -> LA LP stExp lab2 RP SC .)
    LS              reduce using rule 99 (lab -> LA LP stExp lab2 RP SC .)
    CIR             reduce using rule 99 (lab -> LA LP stExp lab2 RP SC .)
    SQ              reduce using rule 99 (lab -> LA LP stExp lab2 RP SC .)
    ARC             reduce using rule 99 (lab -> LA LP stExp lab2 RP SC .)
    PENC            reduce using rule 99 (lab -> LA LP stExp lab2 RP SC .)
    SETC            reduce using rule 99 (lab -> LA LP stExp lab2 RP SC .)
    BACO            reduce using rule 99 (lab -> LA LP stExp lab2 RP SC .)
    PENW            reduce using rule 99 (lab -> LA LP stExp lab2 RP SC .)
    F               reduce using rule 99 (lab -> LA LP stExp lab2 RP SC .)
    B               reduce using rule 99 (lab -> LA LP stExp lab2 RP SC .)
    PENP            reduce using rule 99 (lab -> LA LP stExp lab2 RP SC .)
    PENU            reduce using rule 99 (lab -> LA LP stExp lab2 RP SC .)
    PEND            reduce using rule 99 (lab -> LA LP stExp lab2 RP SC .)
    RB              reduce using rule 99 (lab -> LA LP stExp lab2 RP SC .)


state 255

    (100) lab2 -> ADD stExp lab2 .

    RP              reduce using rule 100 (lab2 -> ADD stExp lab2 .)


state 256

    (47) poly -> POL LP idList p_fill RP SC .

    IF              reduce using rule 47 (poly -> POL LP idList p_fill RP SC .)
    LA              reduce using rule 47 (poly -> POL LP idList p_fill RP SC .)
    L               reduce using rule 47 (poly -> POL LP idList p_fill RP SC .)
    ID              reduce using rule 47 (poly -> POL LP idList p_fill RP SC .)
    RE              reduce using rule 47 (poly -> POL LP idList p_fill RP SC .)
    REC             reduce using rule 47 (poly -> POL LP idList p_fill RP SC .)
    TRI             reduce using rule 47 (poly -> POL LP idList p_fill RP SC .)
    POL             reduce using rule 47 (poly -> POL LP idList p_fill RP SC .)
    LS              reduce using rule 47 (poly -> POL LP idList p_fill RP SC .)
    CIR             reduce using rule 47 (poly -> POL LP idList p_fill RP SC .)
    SQ              reduce using rule 47 (poly -> POL LP idList p_fill RP SC .)
    ARC             reduce using rule 47 (poly -> POL LP idList p_fill RP SC .)
    PENC            reduce using rule 47 (poly -> POL LP idList p_fill RP SC .)
    SETC            reduce using rule 47 (poly -> POL LP idList p_fill RP SC .)
    BACO            reduce using rule 47 (poly -> POL LP idList p_fill RP SC .)
    PENW            reduce using rule 47 (poly -> POL LP idList p_fill RP SC .)
    F               reduce using rule 47 (poly -> POL LP idList p_fill RP SC .)
    B               reduce using rule 47 (poly -> POL LP idList p_fill RP SC .)
    PENP            reduce using rule 47 (poly -> POL LP idList p_fill RP SC .)
    PENU            reduce using rule 47 (poly -> POL LP idList p_fill RP SC .)
    PEND            reduce using rule 47 (poly -> POL LP idList p_fill RP SC .)
    RB              reduce using rule 47 (poly -> POL LP idList p_fill RP SC .)


state 257

    (32) colors -> PENC LP exp C exp C . exp RP SC
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    exp                            shift and go to state 273
    fact2                          shift and go to state 105
    fact                           shift and go to state 107
    fact4                          shift and go to state 108

state 258

    (44) tria -> TRI LP exp C exp C . exp p_fill RP SC
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    exp                            shift and go to state 274
    fact2                          shift and go to state 105
    fact4                          shift and go to state 108
    fact                           shift and go to state 107

state 259

    (40) mueve2 -> LP exp C A exp . RP SC

    RP              shift and go to state 275


state 260

    (87) func3 -> C func4 func3 .

    RP              reduce using rule 87 (func3 -> C func4 func3 .)


state 261

    (93) listAss -> LB lista3 RB SC .

    IF              reduce using rule 93 (listAss -> LB lista3 RB SC .)
    LA              reduce using rule 93 (listAss -> LB lista3 RB SC .)
    L               reduce using rule 93 (listAss -> LB lista3 RB SC .)
    ID              reduce using rule 93 (listAss -> LB lista3 RB SC .)
    RE              reduce using rule 93 (listAss -> LB lista3 RB SC .)
    REC             reduce using rule 93 (listAss -> LB lista3 RB SC .)
    TRI             reduce using rule 93 (listAss -> LB lista3 RB SC .)
    POL             reduce using rule 93 (listAss -> LB lista3 RB SC .)
    LS              reduce using rule 93 (listAss -> LB lista3 RB SC .)
    CIR             reduce using rule 93 (listAss -> LB lista3 RB SC .)
    SQ              reduce using rule 93 (listAss -> LB lista3 RB SC .)
    ARC             reduce using rule 93 (listAss -> LB lista3 RB SC .)
    PENC            reduce using rule 93 (listAss -> LB lista3 RB SC .)
    SETC            reduce using rule 93 (listAss -> LB lista3 RB SC .)
    BACO            reduce using rule 93 (listAss -> LB lista3 RB SC .)
    PENW            reduce using rule 93 (listAss -> LB lista3 RB SC .)
    F               reduce using rule 93 (listAss -> LB lista3 RB SC .)
    B               reduce using rule 93 (listAss -> LB lista3 RB SC .)
    PENP            reduce using rule 93 (listAss -> LB lista3 RB SC .)
    PENU            reduce using rule 93 (listAss -> LB lista3 RB SC .)
    PEND            reduce using rule 93 (listAss -> LB lista3 RB SC .)
    RB              reduce using rule 93 (listAss -> LB lista3 RB SC .)
    FUN             reduce using rule 93 (listAss -> LB lista3 RB SC .)
    MAIN            reduce using rule 93 (listAss -> LB lista3 RB SC .)
    LB              reduce using rule 93 (listAss -> LB lista3 RB SC .)


state 262

    (97) li4 -> C lista2 . li4
    (97) li4 -> . C lista2 li4
    (98) li4 -> . empty
    (130) empty -> .

    C               shift and go to state 243
    RB              reduce using rule 130 (empty -> .)

    li4                            shift and go to state 276
    empty                          shift and go to state 244

state 263

    (104) condition -> IF LP expresion condRP block con2 .

    IF              reduce using rule 104 (condition -> IF LP expresion condRP block con2 .)
    LA              reduce using rule 104 (condition -> IF LP expresion condRP block con2 .)
    L               reduce using rule 104 (condition -> IF LP expresion condRP block con2 .)
    ID              reduce using rule 104 (condition -> IF LP expresion condRP block con2 .)
    RE              reduce using rule 104 (condition -> IF LP expresion condRP block con2 .)
    REC             reduce using rule 104 (condition -> IF LP expresion condRP block con2 .)
    TRI             reduce using rule 104 (condition -> IF LP expresion condRP block con2 .)
    POL             reduce using rule 104 (condition -> IF LP expresion condRP block con2 .)
    LS              reduce using rule 104 (condition -> IF LP expresion condRP block con2 .)
    CIR             reduce using rule 104 (condition -> IF LP expresion condRP block con2 .)
    SQ              reduce using rule 104 (condition -> IF LP expresion condRP block con2 .)
    ARC             reduce using rule 104 (condition -> IF LP expresion condRP block con2 .)
    PENC            reduce using rule 104 (condition -> IF LP expresion condRP block con2 .)
    SETC            reduce using rule 104 (condition -> IF LP expresion condRP block con2 .)
    BACO            reduce using rule 104 (condition -> IF LP expresion condRP block con2 .)
    PENW            reduce using rule 104 (condition -> IF LP expresion condRP block con2 .)
    F               reduce using rule 104 (condition -> IF LP expresion condRP block con2 .)
    B               reduce using rule 104 (condition -> IF LP expresion condRP block con2 .)
    PENP            reduce using rule 104 (condition -> IF LP expresion condRP block con2 .)
    PENU            reduce using rule 104 (condition -> IF LP expresion condRP block con2 .)
    PEND            reduce using rule 104 (condition -> IF LP expresion condRP block con2 .)
    RB              reduce using rule 104 (condition -> IF LP expresion condRP block con2 .)


state 264

    (107) con2 -> con3 . block
    (109) block -> . LB block3 RB

    LB              shift and go to state 35

    block                          shift and go to state 277

state 265

    (108) con3 -> ELSE .

    LB              reduce using rule 108 (con3 -> ELSE .)


state 266

    (106) con2 -> empty .

    IF              reduce using rule 106 (con2 -> empty .)
    LA              reduce using rule 106 (con2 -> empty .)
    L               reduce using rule 106 (con2 -> empty .)
    ID              reduce using rule 106 (con2 -> empty .)
    RE              reduce using rule 106 (con2 -> empty .)
    REC             reduce using rule 106 (con2 -> empty .)
    TRI             reduce using rule 106 (con2 -> empty .)
    POL             reduce using rule 106 (con2 -> empty .)
    LS              reduce using rule 106 (con2 -> empty .)
    CIR             reduce using rule 106 (con2 -> empty .)
    SQ              reduce using rule 106 (con2 -> empty .)
    ARC             reduce using rule 106 (con2 -> empty .)
    PENC            reduce using rule 106 (con2 -> empty .)
    SETC            reduce using rule 106 (con2 -> empty .)
    BACO            reduce using rule 106 (con2 -> empty .)
    PENW            reduce using rule 106 (con2 -> empty .)
    F               reduce using rule 106 (con2 -> empty .)
    B               reduce using rule 106 (con2 -> empty .)
    PENP            reduce using rule 106 (con2 -> empty .)
    PENU            reduce using rule 106 (con2 -> empty .)
    PEND            reduce using rule 106 (con2 -> empty .)
    RB              reduce using rule 106 (con2 -> empty .)


state 267

    (45) one_par -> CIR LP exp p_fill RP SC .

    IF              reduce using rule 45 (one_par -> CIR LP exp p_fill RP SC .)
    LA              reduce using rule 45 (one_par -> CIR LP exp p_fill RP SC .)
    L               reduce using rule 45 (one_par -> CIR LP exp p_fill RP SC .)
    ID              reduce using rule 45 (one_par -> CIR LP exp p_fill RP SC .)
    RE              reduce using rule 45 (one_par -> CIR LP exp p_fill RP SC .)
    REC             reduce using rule 45 (one_par -> CIR LP exp p_fill RP SC .)
    TRI             reduce using rule 45 (one_par -> CIR LP exp p_fill RP SC .)
    POL             reduce using rule 45 (one_par -> CIR LP exp p_fill RP SC .)
    LS              reduce using rule 45 (one_par -> CIR LP exp p_fill RP SC .)
    CIR             reduce using rule 45 (one_par -> CIR LP exp p_fill RP SC .)
    SQ              reduce using rule 45 (one_par -> CIR LP exp p_fill RP SC .)
    ARC             reduce using rule 45 (one_par -> CIR LP exp p_fill RP SC .)
    PENC            reduce using rule 45 (one_par -> CIR LP exp p_fill RP SC .)
    SETC            reduce using rule 45 (one_par -> CIR LP exp p_fill RP SC .)
    BACO            reduce using rule 45 (one_par -> CIR LP exp p_fill RP SC .)
    PENW            reduce using rule 45 (one_par -> CIR LP exp p_fill RP SC .)
    F               reduce using rule 45 (one_par -> CIR LP exp p_fill RP SC .)
    B               reduce using rule 45 (one_par -> CIR LP exp p_fill RP SC .)
    PENP            reduce using rule 45 (one_par -> CIR LP exp p_fill RP SC .)
    PENU            reduce using rule 45 (one_par -> CIR LP exp p_fill RP SC .)
    PEND            reduce using rule 45 (one_par -> CIR LP exp p_fill RP SC .)
    RB              reduce using rule 45 (one_par -> CIR LP exp p_fill RP SC .)


state 268

    (46) one_par -> SQ LP exp p_fill RP SC .

    IF              reduce using rule 46 (one_par -> SQ LP exp p_fill RP SC .)
    LA              reduce using rule 46 (one_par -> SQ LP exp p_fill RP SC .)
    L               reduce using rule 46 (one_par -> SQ LP exp p_fill RP SC .)
    ID              reduce using rule 46 (one_par -> SQ LP exp p_fill RP SC .)
    RE              reduce using rule 46 (one_par -> SQ LP exp p_fill RP SC .)
    REC             reduce using rule 46 (one_par -> SQ LP exp p_fill RP SC .)
    TRI             reduce using rule 46 (one_par -> SQ LP exp p_fill RP SC .)
    POL             reduce using rule 46 (one_par -> SQ LP exp p_fill RP SC .)
    LS              reduce using rule 46 (one_par -> SQ LP exp p_fill RP SC .)
    CIR             reduce using rule 46 (one_par -> SQ LP exp p_fill RP SC .)
    SQ              reduce using rule 46 (one_par -> SQ LP exp p_fill RP SC .)
    ARC             reduce using rule 46 (one_par -> SQ LP exp p_fill RP SC .)
    PENC            reduce using rule 46 (one_par -> SQ LP exp p_fill RP SC .)
    SETC            reduce using rule 46 (one_par -> SQ LP exp p_fill RP SC .)
    BACO            reduce using rule 46 (one_par -> SQ LP exp p_fill RP SC .)
    PENW            reduce using rule 46 (one_par -> SQ LP exp p_fill RP SC .)
    F               reduce using rule 46 (one_par -> SQ LP exp p_fill RP SC .)
    B               reduce using rule 46 (one_par -> SQ LP exp p_fill RP SC .)
    PENP            reduce using rule 46 (one_par -> SQ LP exp p_fill RP SC .)
    PENU            reduce using rule 46 (one_par -> SQ LP exp p_fill RP SC .)
    PEND            reduce using rule 46 (one_par -> SQ LP exp p_fill RP SC .)
    RB              reduce using rule 46 (one_par -> SQ LP exp p_fill RP SC .)


state 269

    (33) colors -> SETC LP exp C exp C . exp RP SC
    (58) exp -> . term exp2
    (63) term -> . fact term2
    (68) fact -> . fact2 exp RP
    (69) fact -> . fact4
    (70) fact2 -> . LP
    (71) fact4 -> . valExp
    (72) fact4 -> . ID
    (73) valExp -> . VALI
    (74) valExp -> . VALF

    LP              shift and go to state 101
    ID              shift and go to state 106
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    valExp                         shift and go to state 100
    exp                            shift and go to state 278
    fact2                          shift and go to state 105
    fact                           shift and go to state 107
    fact4                          shift and go to state 108

state 270

    (31) position -> PENP LP exp C exp RP SC .

    IF              reduce using rule 31 (position -> PENP LP exp C exp RP SC .)
    LA              reduce using rule 31 (position -> PENP LP exp C exp RP SC .)
    L               reduce using rule 31 (position -> PENP LP exp C exp RP SC .)
    ID              reduce using rule 31 (position -> PENP LP exp C exp RP SC .)
    RE              reduce using rule 31 (position -> PENP LP exp C exp RP SC .)
    REC             reduce using rule 31 (position -> PENP LP exp C exp RP SC .)
    TRI             reduce using rule 31 (position -> PENP LP exp C exp RP SC .)
    POL             reduce using rule 31 (position -> PENP LP exp C exp RP SC .)
    LS              reduce using rule 31 (position -> PENP LP exp C exp RP SC .)
    CIR             reduce using rule 31 (position -> PENP LP exp C exp RP SC .)
    SQ              reduce using rule 31 (position -> PENP LP exp C exp RP SC .)
    ARC             reduce using rule 31 (position -> PENP LP exp C exp RP SC .)
    PENC            reduce using rule 31 (position -> PENP LP exp C exp RP SC .)
    SETC            reduce using rule 31 (position -> PENP LP exp C exp RP SC .)
    BACO            reduce using rule 31 (position -> PENP LP exp C exp RP SC .)
    PENW            reduce using rule 31 (position -> PENP LP exp C exp RP SC .)
    F               reduce using rule 31 (position -> PENP LP exp C exp RP SC .)
    B               reduce using rule 31 (position -> PENP LP exp C exp RP SC .)
    PENP            reduce using rule 31 (position -> PENP LP exp C exp RP SC .)
    PENU            reduce using rule 31 (position -> PENP LP exp C exp RP SC .)
    PEND            reduce using rule 31 (position -> PENP LP exp C exp RP SC .)
    RB              reduce using rule 31 (position -> PENP LP exp C exp RP SC .)


state 271

    (34) colors -> BACO LP exp C exp C exp . RP SC

    RP              shift and go to state 279


state 272

    (41) rect -> REC LP exp C exp p_fill RP . SC

    SC              shift and go to state 280


state 273

    (32) colors -> PENC LP exp C exp C exp . RP SC

    RP              shift and go to state 281


state 274

    (44) tria -> TRI LP exp C exp C exp . p_fill RP SC
    (42) p_fill -> . C FILL
    (43) p_fill -> . empty
    (130) empty -> .

    C               shift and go to state 195
    RP              reduce using rule 130 (empty -> .)

    empty                          shift and go to state 197
    p_fill                         shift and go to state 282

state 275

    (40) mueve2 -> LP exp C A exp RP . SC

    SC              shift and go to state 283


state 276

    (97) li4 -> C lista2 li4 .

    RB              reduce using rule 97 (li4 -> C lista2 li4 .)


state 277

    (107) con2 -> con3 block .

    IF              reduce using rule 107 (con2 -> con3 block .)
    LA              reduce using rule 107 (con2 -> con3 block .)
    L               reduce using rule 107 (con2 -> con3 block .)
    ID              reduce using rule 107 (con2 -> con3 block .)
    RE              reduce using rule 107 (con2 -> con3 block .)
    REC             reduce using rule 107 (con2 -> con3 block .)
    TRI             reduce using rule 107 (con2 -> con3 block .)
    POL             reduce using rule 107 (con2 -> con3 block .)
    LS              reduce using rule 107 (con2 -> con3 block .)
    CIR             reduce using rule 107 (con2 -> con3 block .)
    SQ              reduce using rule 107 (con2 -> con3 block .)
    ARC             reduce using rule 107 (con2 -> con3 block .)
    PENC            reduce using rule 107 (con2 -> con3 block .)
    SETC            reduce using rule 107 (con2 -> con3 block .)
    BACO            reduce using rule 107 (con2 -> con3 block .)
    PENW            reduce using rule 107 (con2 -> con3 block .)
    F               reduce using rule 107 (con2 -> con3 block .)
    B               reduce using rule 107 (con2 -> con3 block .)
    PENP            reduce using rule 107 (con2 -> con3 block .)
    PENU            reduce using rule 107 (con2 -> con3 block .)
    PEND            reduce using rule 107 (con2 -> con3 block .)
    RB              reduce using rule 107 (con2 -> con3 block .)


state 278

    (33) colors -> SETC LP exp C exp C exp . RP SC

    RP              shift and go to state 284


state 279

    (34) colors -> BACO LP exp C exp C exp RP . SC

    SC              shift and go to state 285


state 280

    (41) rect -> REC LP exp C exp p_fill RP SC .

    IF              reduce using rule 41 (rect -> REC LP exp C exp p_fill RP SC .)
    LA              reduce using rule 41 (rect -> REC LP exp C exp p_fill RP SC .)
    L               reduce using rule 41 (rect -> REC LP exp C exp p_fill RP SC .)
    ID              reduce using rule 41 (rect -> REC LP exp C exp p_fill RP SC .)
    RE              reduce using rule 41 (rect -> REC LP exp C exp p_fill RP SC .)
    REC             reduce using rule 41 (rect -> REC LP exp C exp p_fill RP SC .)
    TRI             reduce using rule 41 (rect -> REC LP exp C exp p_fill RP SC .)
    POL             reduce using rule 41 (rect -> REC LP exp C exp p_fill RP SC .)
    LS              reduce using rule 41 (rect -> REC LP exp C exp p_fill RP SC .)
    CIR             reduce using rule 41 (rect -> REC LP exp C exp p_fill RP SC .)
    SQ              reduce using rule 41 (rect -> REC LP exp C exp p_fill RP SC .)
    ARC             reduce using rule 41 (rect -> REC LP exp C exp p_fill RP SC .)
    PENC            reduce using rule 41 (rect -> REC LP exp C exp p_fill RP SC .)
    SETC            reduce using rule 41 (rect -> REC LP exp C exp p_fill RP SC .)
    BACO            reduce using rule 41 (rect -> REC LP exp C exp p_fill RP SC .)
    PENW            reduce using rule 41 (rect -> REC LP exp C exp p_fill RP SC .)
    F               reduce using rule 41 (rect -> REC LP exp C exp p_fill RP SC .)
    B               reduce using rule 41 (rect -> REC LP exp C exp p_fill RP SC .)
    PENP            reduce using rule 41 (rect -> REC LP exp C exp p_fill RP SC .)
    PENU            reduce using rule 41 (rect -> REC LP exp C exp p_fill RP SC .)
    PEND            reduce using rule 41 (rect -> REC LP exp C exp p_fill RP SC .)
    RB              reduce using rule 41 (rect -> REC LP exp C exp p_fill RP SC .)


state 281

    (32) colors -> PENC LP exp C exp C exp RP . SC

    SC              shift and go to state 286


state 282

    (44) tria -> TRI LP exp C exp C exp p_fill . RP SC

    RP              shift and go to state 287


state 283

    (40) mueve2 -> LP exp C A exp RP SC .

    IF              reduce using rule 40 (mueve2 -> LP exp C A exp RP SC .)
    LA              reduce using rule 40 (mueve2 -> LP exp C A exp RP SC .)
    L               reduce using rule 40 (mueve2 -> LP exp C A exp RP SC .)
    ID              reduce using rule 40 (mueve2 -> LP exp C A exp RP SC .)
    RE              reduce using rule 40 (mueve2 -> LP exp C A exp RP SC .)
    REC             reduce using rule 40 (mueve2 -> LP exp C A exp RP SC .)
    TRI             reduce using rule 40 (mueve2 -> LP exp C A exp RP SC .)
    POL             reduce using rule 40 (mueve2 -> LP exp C A exp RP SC .)
    LS              reduce using rule 40 (mueve2 -> LP exp C A exp RP SC .)
    CIR             reduce using rule 40 (mueve2 -> LP exp C A exp RP SC .)
    SQ              reduce using rule 40 (mueve2 -> LP exp C A exp RP SC .)
    ARC             reduce using rule 40 (mueve2 -> LP exp C A exp RP SC .)
    PENC            reduce using rule 40 (mueve2 -> LP exp C A exp RP SC .)
    SETC            reduce using rule 40 (mueve2 -> LP exp C A exp RP SC .)
    BACO            reduce using rule 40 (mueve2 -> LP exp C A exp RP SC .)
    PENW            reduce using rule 40 (mueve2 -> LP exp C A exp RP SC .)
    F               reduce using rule 40 (mueve2 -> LP exp C A exp RP SC .)
    B               reduce using rule 40 (mueve2 -> LP exp C A exp RP SC .)
    PENP            reduce using rule 40 (mueve2 -> LP exp C A exp RP SC .)
    PENU            reduce using rule 40 (mueve2 -> LP exp C A exp RP SC .)
    PEND            reduce using rule 40 (mueve2 -> LP exp C A exp RP SC .)
    RB              reduce using rule 40 (mueve2 -> LP exp C A exp RP SC .)


state 284

    (33) colors -> SETC LP exp C exp C exp RP . SC

    SC              shift and go to state 288


state 285

    (34) colors -> BACO LP exp C exp C exp RP SC .

    IF              reduce using rule 34 (colors -> BACO LP exp C exp C exp RP SC .)
    LA              reduce using rule 34 (colors -> BACO LP exp C exp C exp RP SC .)
    L               reduce using rule 34 (colors -> BACO LP exp C exp C exp RP SC .)
    ID              reduce using rule 34 (colors -> BACO LP exp C exp C exp RP SC .)
    RE              reduce using rule 34 (colors -> BACO LP exp C exp C exp RP SC .)
    REC             reduce using rule 34 (colors -> BACO LP exp C exp C exp RP SC .)
    TRI             reduce using rule 34 (colors -> BACO LP exp C exp C exp RP SC .)
    POL             reduce using rule 34 (colors -> BACO LP exp C exp C exp RP SC .)
    LS              reduce using rule 34 (colors -> BACO LP exp C exp C exp RP SC .)
    CIR             reduce using rule 34 (colors -> BACO LP exp C exp C exp RP SC .)
    SQ              reduce using rule 34 (colors -> BACO LP exp C exp C exp RP SC .)
    ARC             reduce using rule 34 (colors -> BACO LP exp C exp C exp RP SC .)
    PENC            reduce using rule 34 (colors -> BACO LP exp C exp C exp RP SC .)
    SETC            reduce using rule 34 (colors -> BACO LP exp C exp C exp RP SC .)
    BACO            reduce using rule 34 (colors -> BACO LP exp C exp C exp RP SC .)
    PENW            reduce using rule 34 (colors -> BACO LP exp C exp C exp RP SC .)
    F               reduce using rule 34 (colors -> BACO LP exp C exp C exp RP SC .)
    B               reduce using rule 34 (colors -> BACO LP exp C exp C exp RP SC .)
    PENP            reduce using rule 34 (colors -> BACO LP exp C exp C exp RP SC .)
    PENU            reduce using rule 34 (colors -> BACO LP exp C exp C exp RP SC .)
    PEND            reduce using rule 34 (colors -> BACO LP exp C exp C exp RP SC .)
    RB              reduce using rule 34 (colors -> BACO LP exp C exp C exp RP SC .)


state 286

    (32) colors -> PENC LP exp C exp C exp RP SC .

    IF              reduce using rule 32 (colors -> PENC LP exp C exp C exp RP SC .)
    LA              reduce using rule 32 (colors -> PENC LP exp C exp C exp RP SC .)
    L               reduce using rule 32 (colors -> PENC LP exp C exp C exp RP SC .)
    ID              reduce using rule 32 (colors -> PENC LP exp C exp C exp RP SC .)
    RE              reduce using rule 32 (colors -> PENC LP exp C exp C exp RP SC .)
    REC             reduce using rule 32 (colors -> PENC LP exp C exp C exp RP SC .)
    TRI             reduce using rule 32 (colors -> PENC LP exp C exp C exp RP SC .)
    POL             reduce using rule 32 (colors -> PENC LP exp C exp C exp RP SC .)
    LS              reduce using rule 32 (colors -> PENC LP exp C exp C exp RP SC .)
    CIR             reduce using rule 32 (colors -> PENC LP exp C exp C exp RP SC .)
    SQ              reduce using rule 32 (colors -> PENC LP exp C exp C exp RP SC .)
    ARC             reduce using rule 32 (colors -> PENC LP exp C exp C exp RP SC .)
    PENC            reduce using rule 32 (colors -> PENC LP exp C exp C exp RP SC .)
    SETC            reduce using rule 32 (colors -> PENC LP exp C exp C exp RP SC .)
    BACO            reduce using rule 32 (colors -> PENC LP exp C exp C exp RP SC .)
    PENW            reduce using rule 32 (colors -> PENC LP exp C exp C exp RP SC .)
    F               reduce using rule 32 (colors -> PENC LP exp C exp C exp RP SC .)
    B               reduce using rule 32 (colors -> PENC LP exp C exp C exp RP SC .)
    PENP            reduce using rule 32 (colors -> PENC LP exp C exp C exp RP SC .)
    PENU            reduce using rule 32 (colors -> PENC LP exp C exp C exp RP SC .)
    PEND            reduce using rule 32 (colors -> PENC LP exp C exp C exp RP SC .)
    RB              reduce using rule 32 (colors -> PENC LP exp C exp C exp RP SC .)


state 287

    (44) tria -> TRI LP exp C exp C exp p_fill RP . SC

    SC              shift and go to state 289


state 288

    (33) colors -> SETC LP exp C exp C exp RP SC .

    IF              reduce using rule 33 (colors -> SETC LP exp C exp C exp RP SC .)
    LA              reduce using rule 33 (colors -> SETC LP exp C exp C exp RP SC .)
    L               reduce using rule 33 (colors -> SETC LP exp C exp C exp RP SC .)
    ID              reduce using rule 33 (colors -> SETC LP exp C exp C exp RP SC .)
    RE              reduce using rule 33 (colors -> SETC LP exp C exp C exp RP SC .)
    REC             reduce using rule 33 (colors -> SETC LP exp C exp C exp RP SC .)
    TRI             reduce using rule 33 (colors -> SETC LP exp C exp C exp RP SC .)
    POL             reduce using rule 33 (colors -> SETC LP exp C exp C exp RP SC .)
    LS              reduce using rule 33 (colors -> SETC LP exp C exp C exp RP SC .)
    CIR             reduce using rule 33 (colors -> SETC LP exp C exp C exp RP SC .)
    SQ              reduce using rule 33 (colors -> SETC LP exp C exp C exp RP SC .)
    ARC             reduce using rule 33 (colors -> SETC LP exp C exp C exp RP SC .)
    PENC            reduce using rule 33 (colors -> SETC LP exp C exp C exp RP SC .)
    SETC            reduce using rule 33 (colors -> SETC LP exp C exp C exp RP SC .)
    BACO            reduce using rule 33 (colors -> SETC LP exp C exp C exp RP SC .)
    PENW            reduce using rule 33 (colors -> SETC LP exp C exp C exp RP SC .)
    F               reduce using rule 33 (colors -> SETC LP exp C exp C exp RP SC .)
    B               reduce using rule 33 (colors -> SETC LP exp C exp C exp RP SC .)
    PENP            reduce using rule 33 (colors -> SETC LP exp C exp C exp RP SC .)
    PENU            reduce using rule 33 (colors -> SETC LP exp C exp C exp RP SC .)
    PEND            reduce using rule 33 (colors -> SETC LP exp C exp C exp RP SC .)
    RB              reduce using rule 33 (colors -> SETC LP exp C exp C exp RP SC .)


state 289

    (44) tria -> TRI LP exp C exp C exp p_fill RP SC .

    IF              reduce using rule 44 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    LA              reduce using rule 44 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    L               reduce using rule 44 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    ID              reduce using rule 44 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    RE              reduce using rule 44 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    REC             reduce using rule 44 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    TRI             reduce using rule 44 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    POL             reduce using rule 44 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    LS              reduce using rule 44 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    CIR             reduce using rule 44 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    SQ              reduce using rule 44 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    ARC             reduce using rule 44 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    PENC            reduce using rule 44 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    SETC            reduce using rule 44 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    BACO            reduce using rule 44 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    PENW            reduce using rule 44 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    F               reduce using rule 44 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    B               reduce using rule 44 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    PENP            reduce using rule 44 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    PENU            reduce using rule 44 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    PEND            reduce using rule 44 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    RB              reduce using rule 44 (tria -> TRI LP exp C exp C exp p_fill RP SC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ADD in state 99 resolved as shift
