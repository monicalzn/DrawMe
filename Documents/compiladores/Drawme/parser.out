Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> PR p2 p3 MAIN vars block
Rule 2     p2 -> globals
Rule 3     p2 -> empty
Rule 4     p3 -> functions p3
Rule 5     p3 -> empty
Rule 6     globals -> GL vars
Rule 7     functions -> fun2 DP vars block
Rule 8     fun2 -> FUN ID LP fun3 RP
Rule 9     fun3 -> fun5 fun4
Rule 10    fun3 -> empty
Rule 11    fun4 -> C fun5 fun4
Rule 12    fun4 -> empty
Rule 13    fun5 -> type ID
Rule 14    vars -> V var2 var5
Rule 15    vars -> empty
Rule 16    var2 -> type var3 SC var2
Rule 17    var2 -> empty
Rule 18    var3 -> ID var4 var33
Rule 19    var33 -> C ID var4 var33
Rule 20    var33 -> empty
Rule 21    var4 -> EQ exp
Rule 22    var4 -> empty
Rule 23    var5 -> list var5
Rule 24    var5 -> empty
Rule 25    type -> INT
Rule 26    type -> FLOAT
Rule 27    val -> VALI
Rule 28    val -> VALF
Rule 29    position -> PENP LP exp C exp RP SC
Rule 30    colors -> PENC colors2
Rule 31    colors -> SETC colors2
Rule 32    colors -> BACO colors2
Rule 33    colors2 -> LP exp C exp C exp RP SC
Rule 34    p_width -> PENW LP exp RP SC
Rule 35    penwrite -> PENU SC
Rule 36    penwrite -> PEND SC
Rule 37    move -> F mueve2
Rule 38    move -> B mueve2
Rule 39    mueve2 -> LP exp C A exp RP SC
Rule 40    rect -> REC LP exp C exp p_fill RP SC
Rule 41    p_fill -> C FILL
Rule 42    p_fill -> empty
Rule 43    tria -> TRI LP exp C exp C exp p_fill RP SC
Rule 44    one_par -> CIR LP exp p_fill RP SC
Rule 45    one_par -> SQ LP exp p_fill RP SC
Rule 46    poly -> POL LP idList p_fill RP SC
Rule 47    lstrip -> LS LP idList RP SC
Rule 48    idList -> ID
Rule 49    p_arc -> ARC LP exp RP SC
Rule 50    expresion -> exp ex2
Rule 51    ex2 -> ex3 exp
Rule 52    ex2 -> empty
Rule 53    ex3 -> LT
Rule 54    ex3 -> MT
Rule 55    ex3 -> D
Rule 56    ex3 -> SEQ
Rule 57    exp -> term exp2
Rule 58    exp2 -> exp3 exp
Rule 59    exp2 -> empty
Rule 60    exp3 -> ADD
Rule 61    exp3 -> SUB
Rule 62    term -> fact term2
Rule 63    term2 -> term3 term
Rule 64    term2 -> empty
Rule 65    term3 -> M
Rule 66    term3 -> DIV
Rule 67    fact -> fact2 exp RP
Rule 68    fact -> fact4
Rule 69    fact2 -> LP
Rule 70    fact4 -> valExp
Rule 71    fact4 -> ID
Rule 72    valExp -> VALI
Rule 73    valExp -> VALF
Rule 74    rep -> RE exp block
Rule 75    WID -> ID WID2
Rule 76    WID2 -> assigment
Rule 77    WID2 -> funCall
Rule 78    assigment -> EQ tipeAss
Rule 79    tipeAss -> varAss
Rule 80    tipeAss -> listAss
Rule 81    varAss -> exp SC
Rule 82    funCall -> LP func2 RP SC
Rule 83    func2 -> func4
Rule 84    func2 -> empty
Rule 85    func3 -> C func4
Rule 86    func3 -> empty
Rule 87    func4 -> exp func3
Rule 88    list -> L type ID prelistAss
Rule 89    prelistAss -> EQ listAss
Rule 90    prelistAss -> SC
Rule 91    listAss -> LB lista3 RB SC
Rule 92    lista2 -> val
Rule 93    lista2 -> ID
Rule 94    lista3 -> lista2 li4
Rule 95    li4 -> C lista2 li4
Rule 96    li4 -> empty
Rule 97    lab -> LA LP stExp lab2 RP SC
Rule 98    lab2 -> ADD stExp lab2
Rule 99    lab2 -> empty
Rule 100   stExp -> STR
Rule 101   stExp -> exp
Rule 102   condition -> IF LP expresion RP block con2
Rule 103   con2 -> empty
Rule 104   con2 -> ELSE block
Rule 105   block -> LB block3 RB
Rule 106   block3 -> block2 block3
Rule 107   block3 -> empty
Rule 108   figure -> rect
Rule 109   figure -> tria
Rule 110   figure -> poly
Rule 111   figure -> lstrip
Rule 112   figure -> one_par
Rule 113   figure -> p_arc
Rule 114   pen -> colors
Rule 115   pen -> p_width
Rule 116   pen -> move
Rule 117   pen -> position
Rule 118   pen -> penwrite
Rule 119   block2 -> figure
Rule 120   block2 -> condition
Rule 121   block2 -> pen
Rule 122   block2 -> lab
Rule 123   block2 -> list
Rule 124   block2 -> WID
Rule 125   block2 -> rep
Rule 126   empty -> <empty>

Terminals, with rules where they appear

A                    : 39
ADD                  : 60 98
ARC                  : 49
B                    : 38
BACO                 : 32
C                    : 11 19 29 33 33 39 40 41 43 43 85 95
CIR                  : 44
D                    : 55
DIV                  : 66
DP                   : 7
ELSE                 : 104
EQ                   : 21 78 89
F                    : 37
FILL                 : 41
FLOAT                : 26
FUN                  : 8
GL                   : 6
ID                   : 8 13 18 19 48 71 75 88 93
IF                   : 102
INT                  : 25
L                    : 88
LA                   : 97
LB                   : 91 105
LP                   : 8 29 33 34 39 40 43 44 45 46 47 49 69 82 97 102
LS                   : 47
LT                   : 53
M                    : 65
MAIN                 : 1
MT                   : 54
PENC                 : 30
PEND                 : 36
PENP                 : 29
PENU                 : 35
PENW                 : 34
POL                  : 46
PR                   : 1
RB                   : 91 105
RE                   : 74
REC                  : 40
RP                   : 8 29 33 34 39 40 43 44 45 46 47 49 67 82 97 102
SC                   : 16 29 33 34 35 36 39 40 43 44 45 46 47 49 81 82 90 91 97
SEQ                  : 56
SETC                 : 31
SQ                   : 45
STR                  : 100
SUB                  : 61
TRI                  : 43
V                    : 14
VALF                 : 28 73
VALI                 : 27 72
error                : 

Nonterminals, with rules where they appear

WID                  : 124
WID2                 : 75
assigment            : 76
block                : 1 7 74 102 104
block2               : 106
block3               : 105 106
colors               : 114
colors2              : 30 31 32
con2                 : 102
condition            : 120
empty                : 3 5 10 12 15 17 20 22 24 42 52 59 64 84 86 96 99 103 107
ex2                  : 50
ex3                  : 51
exp                  : 21 29 29 33 33 33 34 39 39 40 40 43 43 43 44 45 49 50 51 58 67 74 81 87 101
exp2                 : 57
exp3                 : 58
expresion            : 102
fact                 : 62
fact2                : 67
fact4                : 68
figure               : 119
fun2                 : 7
fun3                 : 8
fun4                 : 9 11
fun5                 : 9 11
funCall              : 77
func2                : 82
func3                : 87
func4                : 83 85
functions            : 4
globals              : 2
idList               : 46 47
lab                  : 122
lab2                 : 97 98
li4                  : 94 95
list                 : 23 123
listAss              : 80 89
lista2               : 94 95
lista3               : 91
lstrip               : 111
move                 : 116
mueve2               : 37 38
one_par              : 112
p2                   : 1
p3                   : 1 4
p_arc                : 113
p_fill               : 40 43 44 45 46
p_width              : 115
pen                  : 121
penwrite             : 118
poly                 : 110
position             : 117
prelistAss           : 88
prog                 : 0
rect                 : 108
rep                  : 125
stExp                : 97 98
term                 : 57 63
term2                : 62
term3                : 63
tipeAss              : 78
tria                 : 109
type                 : 13 16 88
val                  : 92
valExp               : 70
var2                 : 14 16
var3                 : 16
var33                : 18 19
var4                 : 18 19
var5                 : 14 23
varAss               : 79
vars                 : 1 6 7

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . PR p2 p3 MAIN vars block

    PR              shift and go to state 1

    prog                           shift and go to state 2

state 1

    (1) prog -> PR . p2 p3 MAIN vars block
    (2) p2 -> . globals
    (3) p2 -> . empty
    (6) globals -> . GL vars
    (126) empty -> .

    GL              shift and go to state 4
    FUN             reduce using rule 126 (empty -> .)
    MAIN            reduce using rule 126 (empty -> .)

    p2                             shift and go to state 3
    globals                        shift and go to state 5
    empty                          shift and go to state 6

state 2

    (0) S' -> prog .



state 3

    (1) prog -> PR p2 . p3 MAIN vars block
    (4) p3 -> . functions p3
    (5) p3 -> . empty
    (7) functions -> . fun2 DP vars block
    (126) empty -> .
    (8) fun2 -> . FUN ID LP fun3 RP

    MAIN            reduce using rule 126 (empty -> .)
    FUN             shift and go to state 11

    p3                             shift and go to state 8
    functions                      shift and go to state 7
    fun2                           shift and go to state 9
    empty                          shift and go to state 10

state 4

    (6) globals -> GL . vars
    (14) vars -> . V var2 var5
    (15) vars -> . empty
    (126) empty -> .

    V               shift and go to state 13
    FUN             reduce using rule 126 (empty -> .)
    MAIN            reduce using rule 126 (empty -> .)

    empty                          shift and go to state 14
    vars                           shift and go to state 12

state 5

    (2) p2 -> globals .

    FUN             reduce using rule 2 (p2 -> globals .)
    MAIN            reduce using rule 2 (p2 -> globals .)


state 6

    (3) p2 -> empty .

    FUN             reduce using rule 3 (p2 -> empty .)
    MAIN            reduce using rule 3 (p2 -> empty .)


state 7

    (4) p3 -> functions . p3
    (4) p3 -> . functions p3
    (5) p3 -> . empty
    (7) functions -> . fun2 DP vars block
    (126) empty -> .
    (8) fun2 -> . FUN ID LP fun3 RP

    MAIN            reduce using rule 126 (empty -> .)
    FUN             shift and go to state 11

    p3                             shift and go to state 15
    functions                      shift and go to state 7
    fun2                           shift and go to state 9
    empty                          shift and go to state 10

state 8

    (1) prog -> PR p2 p3 . MAIN vars block

    MAIN            shift and go to state 16


state 9

    (7) functions -> fun2 . DP vars block

    DP              shift and go to state 17


state 10

    (5) p3 -> empty .

    MAIN            reduce using rule 5 (p3 -> empty .)


state 11

    (8) fun2 -> FUN . ID LP fun3 RP

    ID              shift and go to state 18


state 12

    (6) globals -> GL vars .

    FUN             reduce using rule 6 (globals -> GL vars .)
    MAIN            reduce using rule 6 (globals -> GL vars .)


state 13

    (14) vars -> V . var2 var5
    (16) var2 -> . type var3 SC var2
    (17) var2 -> . empty
    (25) type -> . INT
    (26) type -> . FLOAT
    (126) empty -> .

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    L               reduce using rule 126 (empty -> .)
    FUN             reduce using rule 126 (empty -> .)
    MAIN            reduce using rule 126 (empty -> .)
    LB              reduce using rule 126 (empty -> .)

    type                           shift and go to state 22
    empty                          shift and go to state 23
    var2                           shift and go to state 19

state 14

    (15) vars -> empty .

    LB              reduce using rule 15 (vars -> empty .)
    FUN             reduce using rule 15 (vars -> empty .)
    MAIN            reduce using rule 15 (vars -> empty .)


state 15

    (4) p3 -> functions p3 .

    MAIN            reduce using rule 4 (p3 -> functions p3 .)


state 16

    (1) prog -> PR p2 p3 MAIN . vars block
    (14) vars -> . V var2 var5
    (15) vars -> . empty
    (126) empty -> .

    V               shift and go to state 13
    LB              reduce using rule 126 (empty -> .)

    vars                           shift and go to state 24
    empty                          shift and go to state 14

state 17

    (7) functions -> fun2 DP . vars block
    (14) vars -> . V var2 var5
    (15) vars -> . empty
    (126) empty -> .

    V               shift and go to state 13
    LB              reduce using rule 126 (empty -> .)

    vars                           shift and go to state 25
    empty                          shift and go to state 14

state 18

    (8) fun2 -> FUN ID . LP fun3 RP

    LP              shift and go to state 26


state 19

    (14) vars -> V var2 . var5
    (23) var5 -> . list var5
    (24) var5 -> . empty
    (88) list -> . L type ID prelistAss
    (126) empty -> .

    L               shift and go to state 29
    FUN             reduce using rule 126 (empty -> .)
    MAIN            reduce using rule 126 (empty -> .)
    LB              reduce using rule 126 (empty -> .)

    var5                           shift and go to state 27
    list                           shift and go to state 28
    empty                          shift and go to state 30

state 20

    (25) type -> INT .

    ID              reduce using rule 25 (type -> INT .)


state 21

    (26) type -> FLOAT .

    ID              reduce using rule 26 (type -> FLOAT .)


state 22

    (16) var2 -> type . var3 SC var2
    (18) var3 -> . ID var4 var33

    ID              shift and go to state 32

    var3                           shift and go to state 31

state 23

    (17) var2 -> empty .

    L               reduce using rule 17 (var2 -> empty .)
    FUN             reduce using rule 17 (var2 -> empty .)
    MAIN            reduce using rule 17 (var2 -> empty .)
    LB              reduce using rule 17 (var2 -> empty .)


state 24

    (1) prog -> PR p2 p3 MAIN vars . block
    (105) block -> . LB block3 RB

    LB              shift and go to state 33

    block                          shift and go to state 34

state 25

    (7) functions -> fun2 DP vars . block
    (105) block -> . LB block3 RB

    LB              shift and go to state 33

    block                          shift and go to state 35

state 26

    (8) fun2 -> FUN ID LP . fun3 RP
    (9) fun3 -> . fun5 fun4
    (10) fun3 -> . empty
    (13) fun5 -> . type ID
    (126) empty -> .
    (25) type -> . INT
    (26) type -> . FLOAT

    RP              reduce using rule 126 (empty -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21

    fun5                           shift and go to state 36
    type                           shift and go to state 38
    empty                          shift and go to state 39
    fun3                           shift and go to state 37

state 27

    (14) vars -> V var2 var5 .

    LB              reduce using rule 14 (vars -> V var2 var5 .)
    FUN             reduce using rule 14 (vars -> V var2 var5 .)
    MAIN            reduce using rule 14 (vars -> V var2 var5 .)


state 28

    (23) var5 -> list . var5
    (23) var5 -> . list var5
    (24) var5 -> . empty
    (88) list -> . L type ID prelistAss
    (126) empty -> .

    L               shift and go to state 29
    FUN             reduce using rule 126 (empty -> .)
    MAIN            reduce using rule 126 (empty -> .)
    LB              reduce using rule 126 (empty -> .)

    var5                           shift and go to state 40
    list                           shift and go to state 28
    empty                          shift and go to state 30

state 29

    (88) list -> L . type ID prelistAss
    (25) type -> . INT
    (26) type -> . FLOAT

    INT             shift and go to state 20
    FLOAT           shift and go to state 21

    type                           shift and go to state 41

state 30

    (24) var5 -> empty .

    FUN             reduce using rule 24 (var5 -> empty .)
    MAIN            reduce using rule 24 (var5 -> empty .)
    LB              reduce using rule 24 (var5 -> empty .)


state 31

    (16) var2 -> type var3 . SC var2

    SC              shift and go to state 42


state 32

    (18) var3 -> ID . var4 var33
    (21) var4 -> . EQ exp
    (22) var4 -> . empty
    (126) empty -> .

    EQ              shift and go to state 44
    C               reduce using rule 126 (empty -> .)
    SC              reduce using rule 126 (empty -> .)

    var4                           shift and go to state 43
    empty                          shift and go to state 45

state 33

    (105) block -> LB . block3 RB
    (106) block3 -> . block2 block3
    (107) block3 -> . empty
    (119) block2 -> . figure
    (120) block2 -> . condition
    (121) block2 -> . pen
    (122) block2 -> . lab
    (123) block2 -> . list
    (124) block2 -> . WID
    (125) block2 -> . rep
    (126) empty -> .
    (108) figure -> . rect
    (109) figure -> . tria
    (110) figure -> . poly
    (111) figure -> . lstrip
    (112) figure -> . one_par
    (113) figure -> . p_arc
    (102) condition -> . IF LP expresion RP block con2
    (114) pen -> . colors
    (115) pen -> . p_width
    (116) pen -> . move
    (117) pen -> . position
    (118) pen -> . penwrite
    (97) lab -> . LA LP stExp lab2 RP SC
    (88) list -> . L type ID prelistAss
    (75) WID -> . ID WID2
    (74) rep -> . RE exp block
    (40) rect -> . REC LP exp C exp p_fill RP SC
    (43) tria -> . TRI LP exp C exp C exp p_fill RP SC
    (46) poly -> . POL LP idList p_fill RP SC
    (47) lstrip -> . LS LP idList RP SC
    (44) one_par -> . CIR LP exp p_fill RP SC
    (45) one_par -> . SQ LP exp p_fill RP SC
    (49) p_arc -> . ARC LP exp RP SC
    (30) colors -> . PENC colors2
    (31) colors -> . SETC colors2
    (32) colors -> . BACO colors2
    (34) p_width -> . PENW LP exp RP SC
    (37) move -> . F mueve2
    (38) move -> . B mueve2
    (29) position -> . PENP LP exp C exp RP SC
    (35) penwrite -> . PENU SC
    (36) penwrite -> . PEND SC

    RB              reduce using rule 126 (empty -> .)
    IF              shift and go to state 76
    LA              shift and go to state 58
    L               shift and go to state 29
    ID              shift and go to state 74
    RE              shift and go to state 61
    REC             shift and go to state 55
    TRI             shift and go to state 69
    POL             shift and go to state 60
    LS              shift and go to state 68
    CIR             shift and go to state 79
    SQ              shift and go to state 80
    ARC             shift and go to state 83
    PENC            shift and go to state 64
    SETC            shift and go to state 81
    BACO            shift and go to state 66
    PENW            shift and go to state 56
    F               shift and go to state 71
    B               shift and go to state 70
    PENP            shift and go to state 46
    PENU            shift and go to state 57
    PEND            shift and go to state 63

    block3                         shift and go to state 47
    block2                         shift and go to state 48
    figure                         shift and go to state 49
    lstrip                         shift and go to state 50
    move                           shift and go to state 51
    tria                           shift and go to state 52
    poly                           shift and go to state 53
    colors                         shift and go to state 54
    rep                            shift and go to state 59
    pen                            shift and go to state 62
    condition                      shift and go to state 65
    empty                          shift and go to state 67
    lab                            shift and go to state 72
    one_par                        shift and go to state 73
    rect                           shift and go to state 75
    WID                            shift and go to state 77
    p_arc                          shift and go to state 78
    list                           shift and go to state 82
    position                       shift and go to state 84
    p_width                        shift and go to state 85
    penwrite                       shift and go to state 86

state 34

    (1) prog -> PR p2 p3 MAIN vars block .

    $end            reduce using rule 1 (prog -> PR p2 p3 MAIN vars block .)


state 35

    (7) functions -> fun2 DP vars block .

    FUN             reduce using rule 7 (functions -> fun2 DP vars block .)
    MAIN            reduce using rule 7 (functions -> fun2 DP vars block .)


state 36

    (9) fun3 -> fun5 . fun4
    (11) fun4 -> . C fun5 fun4
    (12) fun4 -> . empty
    (126) empty -> .

    C               shift and go to state 88
    RP              reduce using rule 126 (empty -> .)

    fun4                           shift and go to state 87
    empty                          shift and go to state 89

state 37

    (8) fun2 -> FUN ID LP fun3 . RP

    RP              shift and go to state 90


state 38

    (13) fun5 -> type . ID

    ID              shift and go to state 91


state 39

    (10) fun3 -> empty .

    RP              reduce using rule 10 (fun3 -> empty .)


state 40

    (23) var5 -> list var5 .

    FUN             reduce using rule 23 (var5 -> list var5 .)
    MAIN            reduce using rule 23 (var5 -> list var5 .)
    LB              reduce using rule 23 (var5 -> list var5 .)


state 41

    (88) list -> L type . ID prelistAss

    ID              shift and go to state 92


state 42

    (16) var2 -> type var3 SC . var2
    (16) var2 -> . type var3 SC var2
    (17) var2 -> . empty
    (25) type -> . INT
    (26) type -> . FLOAT
    (126) empty -> .

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    L               reduce using rule 126 (empty -> .)
    FUN             reduce using rule 126 (empty -> .)
    MAIN            reduce using rule 126 (empty -> .)
    LB              reduce using rule 126 (empty -> .)

    type                           shift and go to state 22
    empty                          shift and go to state 23
    var2                           shift and go to state 93

state 43

    (18) var3 -> ID var4 . var33
    (19) var33 -> . C ID var4 var33
    (20) var33 -> . empty
    (126) empty -> .

    C               shift and go to state 95
    SC              reduce using rule 126 (empty -> .)

    var33                          shift and go to state 94
    empty                          shift and go to state 96

state 44

    (21) var4 -> EQ . exp
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    term                           shift and go to state 97
    valExp                         shift and go to state 98
    exp                            shift and go to state 102
    fact2                          shift and go to state 103
    fact                           shift and go to state 105
    fact4                          shift and go to state 106

state 45

    (22) var4 -> empty .

    C               reduce using rule 22 (var4 -> empty .)
    SC              reduce using rule 22 (var4 -> empty .)


state 46

    (29) position -> PENP . LP exp C exp RP SC

    LP              shift and go to state 107


state 47

    (105) block -> LB block3 . RB

    RB              shift and go to state 108


state 48

    (106) block3 -> block2 . block3
    (106) block3 -> . block2 block3
    (107) block3 -> . empty
    (119) block2 -> . figure
    (120) block2 -> . condition
    (121) block2 -> . pen
    (122) block2 -> . lab
    (123) block2 -> . list
    (124) block2 -> . WID
    (125) block2 -> . rep
    (126) empty -> .
    (108) figure -> . rect
    (109) figure -> . tria
    (110) figure -> . poly
    (111) figure -> . lstrip
    (112) figure -> . one_par
    (113) figure -> . p_arc
    (102) condition -> . IF LP expresion RP block con2
    (114) pen -> . colors
    (115) pen -> . p_width
    (116) pen -> . move
    (117) pen -> . position
    (118) pen -> . penwrite
    (97) lab -> . LA LP stExp lab2 RP SC
    (88) list -> . L type ID prelistAss
    (75) WID -> . ID WID2
    (74) rep -> . RE exp block
    (40) rect -> . REC LP exp C exp p_fill RP SC
    (43) tria -> . TRI LP exp C exp C exp p_fill RP SC
    (46) poly -> . POL LP idList p_fill RP SC
    (47) lstrip -> . LS LP idList RP SC
    (44) one_par -> . CIR LP exp p_fill RP SC
    (45) one_par -> . SQ LP exp p_fill RP SC
    (49) p_arc -> . ARC LP exp RP SC
    (30) colors -> . PENC colors2
    (31) colors -> . SETC colors2
    (32) colors -> . BACO colors2
    (34) p_width -> . PENW LP exp RP SC
    (37) move -> . F mueve2
    (38) move -> . B mueve2
    (29) position -> . PENP LP exp C exp RP SC
    (35) penwrite -> . PENU SC
    (36) penwrite -> . PEND SC

    RB              reduce using rule 126 (empty -> .)
    IF              shift and go to state 76
    LA              shift and go to state 58
    L               shift and go to state 29
    ID              shift and go to state 74
    RE              shift and go to state 61
    REC             shift and go to state 55
    TRI             shift and go to state 69
    POL             shift and go to state 60
    LS              shift and go to state 68
    CIR             shift and go to state 79
    SQ              shift and go to state 80
    ARC             shift and go to state 83
    PENC            shift and go to state 64
    SETC            shift and go to state 81
    BACO            shift and go to state 66
    PENW            shift and go to state 56
    F               shift and go to state 71
    B               shift and go to state 70
    PENP            shift and go to state 46
    PENU            shift and go to state 57
    PEND            shift and go to state 63

    block3                         shift and go to state 109
    block2                         shift and go to state 48
    figure                         shift and go to state 49
    lstrip                         shift and go to state 50
    move                           shift and go to state 51
    tria                           shift and go to state 52
    poly                           shift and go to state 53
    colors                         shift and go to state 54
    rep                            shift and go to state 59
    pen                            shift and go to state 62
    condition                      shift and go to state 65
    empty                          shift and go to state 67
    lab                            shift and go to state 72
    one_par                        shift and go to state 73
    rect                           shift and go to state 75
    WID                            shift and go to state 77
    p_arc                          shift and go to state 78
    list                           shift and go to state 82
    position                       shift and go to state 84
    p_width                        shift and go to state 85
    penwrite                       shift and go to state 86

state 49

    (119) block2 -> figure .

    IF              reduce using rule 119 (block2 -> figure .)
    LA              reduce using rule 119 (block2 -> figure .)
    L               reduce using rule 119 (block2 -> figure .)
    ID              reduce using rule 119 (block2 -> figure .)
    RE              reduce using rule 119 (block2 -> figure .)
    REC             reduce using rule 119 (block2 -> figure .)
    TRI             reduce using rule 119 (block2 -> figure .)
    POL             reduce using rule 119 (block2 -> figure .)
    LS              reduce using rule 119 (block2 -> figure .)
    CIR             reduce using rule 119 (block2 -> figure .)
    SQ              reduce using rule 119 (block2 -> figure .)
    ARC             reduce using rule 119 (block2 -> figure .)
    PENC            reduce using rule 119 (block2 -> figure .)
    SETC            reduce using rule 119 (block2 -> figure .)
    BACO            reduce using rule 119 (block2 -> figure .)
    PENW            reduce using rule 119 (block2 -> figure .)
    F               reduce using rule 119 (block2 -> figure .)
    B               reduce using rule 119 (block2 -> figure .)
    PENP            reduce using rule 119 (block2 -> figure .)
    PENU            reduce using rule 119 (block2 -> figure .)
    PEND            reduce using rule 119 (block2 -> figure .)
    RB              reduce using rule 119 (block2 -> figure .)


state 50

    (111) figure -> lstrip .

    IF              reduce using rule 111 (figure -> lstrip .)
    LA              reduce using rule 111 (figure -> lstrip .)
    L               reduce using rule 111 (figure -> lstrip .)
    ID              reduce using rule 111 (figure -> lstrip .)
    RE              reduce using rule 111 (figure -> lstrip .)
    REC             reduce using rule 111 (figure -> lstrip .)
    TRI             reduce using rule 111 (figure -> lstrip .)
    POL             reduce using rule 111 (figure -> lstrip .)
    LS              reduce using rule 111 (figure -> lstrip .)
    CIR             reduce using rule 111 (figure -> lstrip .)
    SQ              reduce using rule 111 (figure -> lstrip .)
    ARC             reduce using rule 111 (figure -> lstrip .)
    PENC            reduce using rule 111 (figure -> lstrip .)
    SETC            reduce using rule 111 (figure -> lstrip .)
    BACO            reduce using rule 111 (figure -> lstrip .)
    PENW            reduce using rule 111 (figure -> lstrip .)
    F               reduce using rule 111 (figure -> lstrip .)
    B               reduce using rule 111 (figure -> lstrip .)
    PENP            reduce using rule 111 (figure -> lstrip .)
    PENU            reduce using rule 111 (figure -> lstrip .)
    PEND            reduce using rule 111 (figure -> lstrip .)
    RB              reduce using rule 111 (figure -> lstrip .)


state 51

    (116) pen -> move .

    IF              reduce using rule 116 (pen -> move .)
    LA              reduce using rule 116 (pen -> move .)
    L               reduce using rule 116 (pen -> move .)
    ID              reduce using rule 116 (pen -> move .)
    RE              reduce using rule 116 (pen -> move .)
    REC             reduce using rule 116 (pen -> move .)
    TRI             reduce using rule 116 (pen -> move .)
    POL             reduce using rule 116 (pen -> move .)
    LS              reduce using rule 116 (pen -> move .)
    CIR             reduce using rule 116 (pen -> move .)
    SQ              reduce using rule 116 (pen -> move .)
    ARC             reduce using rule 116 (pen -> move .)
    PENC            reduce using rule 116 (pen -> move .)
    SETC            reduce using rule 116 (pen -> move .)
    BACO            reduce using rule 116 (pen -> move .)
    PENW            reduce using rule 116 (pen -> move .)
    F               reduce using rule 116 (pen -> move .)
    B               reduce using rule 116 (pen -> move .)
    PENP            reduce using rule 116 (pen -> move .)
    PENU            reduce using rule 116 (pen -> move .)
    PEND            reduce using rule 116 (pen -> move .)
    RB              reduce using rule 116 (pen -> move .)


state 52

    (109) figure -> tria .

    IF              reduce using rule 109 (figure -> tria .)
    LA              reduce using rule 109 (figure -> tria .)
    L               reduce using rule 109 (figure -> tria .)
    ID              reduce using rule 109 (figure -> tria .)
    RE              reduce using rule 109 (figure -> tria .)
    REC             reduce using rule 109 (figure -> tria .)
    TRI             reduce using rule 109 (figure -> tria .)
    POL             reduce using rule 109 (figure -> tria .)
    LS              reduce using rule 109 (figure -> tria .)
    CIR             reduce using rule 109 (figure -> tria .)
    SQ              reduce using rule 109 (figure -> tria .)
    ARC             reduce using rule 109 (figure -> tria .)
    PENC            reduce using rule 109 (figure -> tria .)
    SETC            reduce using rule 109 (figure -> tria .)
    BACO            reduce using rule 109 (figure -> tria .)
    PENW            reduce using rule 109 (figure -> tria .)
    F               reduce using rule 109 (figure -> tria .)
    B               reduce using rule 109 (figure -> tria .)
    PENP            reduce using rule 109 (figure -> tria .)
    PENU            reduce using rule 109 (figure -> tria .)
    PEND            reduce using rule 109 (figure -> tria .)
    RB              reduce using rule 109 (figure -> tria .)


state 53

    (110) figure -> poly .

    IF              reduce using rule 110 (figure -> poly .)
    LA              reduce using rule 110 (figure -> poly .)
    L               reduce using rule 110 (figure -> poly .)
    ID              reduce using rule 110 (figure -> poly .)
    RE              reduce using rule 110 (figure -> poly .)
    REC             reduce using rule 110 (figure -> poly .)
    TRI             reduce using rule 110 (figure -> poly .)
    POL             reduce using rule 110 (figure -> poly .)
    LS              reduce using rule 110 (figure -> poly .)
    CIR             reduce using rule 110 (figure -> poly .)
    SQ              reduce using rule 110 (figure -> poly .)
    ARC             reduce using rule 110 (figure -> poly .)
    PENC            reduce using rule 110 (figure -> poly .)
    SETC            reduce using rule 110 (figure -> poly .)
    BACO            reduce using rule 110 (figure -> poly .)
    PENW            reduce using rule 110 (figure -> poly .)
    F               reduce using rule 110 (figure -> poly .)
    B               reduce using rule 110 (figure -> poly .)
    PENP            reduce using rule 110 (figure -> poly .)
    PENU            reduce using rule 110 (figure -> poly .)
    PEND            reduce using rule 110 (figure -> poly .)
    RB              reduce using rule 110 (figure -> poly .)


state 54

    (114) pen -> colors .

    IF              reduce using rule 114 (pen -> colors .)
    LA              reduce using rule 114 (pen -> colors .)
    L               reduce using rule 114 (pen -> colors .)
    ID              reduce using rule 114 (pen -> colors .)
    RE              reduce using rule 114 (pen -> colors .)
    REC             reduce using rule 114 (pen -> colors .)
    TRI             reduce using rule 114 (pen -> colors .)
    POL             reduce using rule 114 (pen -> colors .)
    LS              reduce using rule 114 (pen -> colors .)
    CIR             reduce using rule 114 (pen -> colors .)
    SQ              reduce using rule 114 (pen -> colors .)
    ARC             reduce using rule 114 (pen -> colors .)
    PENC            reduce using rule 114 (pen -> colors .)
    SETC            reduce using rule 114 (pen -> colors .)
    BACO            reduce using rule 114 (pen -> colors .)
    PENW            reduce using rule 114 (pen -> colors .)
    F               reduce using rule 114 (pen -> colors .)
    B               reduce using rule 114 (pen -> colors .)
    PENP            reduce using rule 114 (pen -> colors .)
    PENU            reduce using rule 114 (pen -> colors .)
    PEND            reduce using rule 114 (pen -> colors .)
    RB              reduce using rule 114 (pen -> colors .)


state 55

    (40) rect -> REC . LP exp C exp p_fill RP SC

    LP              shift and go to state 110


state 56

    (34) p_width -> PENW . LP exp RP SC

    LP              shift and go to state 111


state 57

    (35) penwrite -> PENU . SC

    SC              shift and go to state 112


state 58

    (97) lab -> LA . LP stExp lab2 RP SC

    LP              shift and go to state 113


state 59

    (125) block2 -> rep .

    IF              reduce using rule 125 (block2 -> rep .)
    LA              reduce using rule 125 (block2 -> rep .)
    L               reduce using rule 125 (block2 -> rep .)
    ID              reduce using rule 125 (block2 -> rep .)
    RE              reduce using rule 125 (block2 -> rep .)
    REC             reduce using rule 125 (block2 -> rep .)
    TRI             reduce using rule 125 (block2 -> rep .)
    POL             reduce using rule 125 (block2 -> rep .)
    LS              reduce using rule 125 (block2 -> rep .)
    CIR             reduce using rule 125 (block2 -> rep .)
    SQ              reduce using rule 125 (block2 -> rep .)
    ARC             reduce using rule 125 (block2 -> rep .)
    PENC            reduce using rule 125 (block2 -> rep .)
    SETC            reduce using rule 125 (block2 -> rep .)
    BACO            reduce using rule 125 (block2 -> rep .)
    PENW            reduce using rule 125 (block2 -> rep .)
    F               reduce using rule 125 (block2 -> rep .)
    B               reduce using rule 125 (block2 -> rep .)
    PENP            reduce using rule 125 (block2 -> rep .)
    PENU            reduce using rule 125 (block2 -> rep .)
    PEND            reduce using rule 125 (block2 -> rep .)
    RB              reduce using rule 125 (block2 -> rep .)


state 60

    (46) poly -> POL . LP idList p_fill RP SC

    LP              shift and go to state 114


state 61

    (74) rep -> RE . exp block
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    term                           shift and go to state 97
    valExp                         shift and go to state 98
    exp                            shift and go to state 115
    fact2                          shift and go to state 103
    fact                           shift and go to state 105
    fact4                          shift and go to state 106

state 62

    (121) block2 -> pen .

    IF              reduce using rule 121 (block2 -> pen .)
    LA              reduce using rule 121 (block2 -> pen .)
    L               reduce using rule 121 (block2 -> pen .)
    ID              reduce using rule 121 (block2 -> pen .)
    RE              reduce using rule 121 (block2 -> pen .)
    REC             reduce using rule 121 (block2 -> pen .)
    TRI             reduce using rule 121 (block2 -> pen .)
    POL             reduce using rule 121 (block2 -> pen .)
    LS              reduce using rule 121 (block2 -> pen .)
    CIR             reduce using rule 121 (block2 -> pen .)
    SQ              reduce using rule 121 (block2 -> pen .)
    ARC             reduce using rule 121 (block2 -> pen .)
    PENC            reduce using rule 121 (block2 -> pen .)
    SETC            reduce using rule 121 (block2 -> pen .)
    BACO            reduce using rule 121 (block2 -> pen .)
    PENW            reduce using rule 121 (block2 -> pen .)
    F               reduce using rule 121 (block2 -> pen .)
    B               reduce using rule 121 (block2 -> pen .)
    PENP            reduce using rule 121 (block2 -> pen .)
    PENU            reduce using rule 121 (block2 -> pen .)
    PEND            reduce using rule 121 (block2 -> pen .)
    RB              reduce using rule 121 (block2 -> pen .)


state 63

    (36) penwrite -> PEND . SC

    SC              shift and go to state 116


state 64

    (30) colors -> PENC . colors2
    (33) colors2 -> . LP exp C exp C exp RP SC

    LP              shift and go to state 117

    colors2                        shift and go to state 118

state 65

    (120) block2 -> condition .

    IF              reduce using rule 120 (block2 -> condition .)
    LA              reduce using rule 120 (block2 -> condition .)
    L               reduce using rule 120 (block2 -> condition .)
    ID              reduce using rule 120 (block2 -> condition .)
    RE              reduce using rule 120 (block2 -> condition .)
    REC             reduce using rule 120 (block2 -> condition .)
    TRI             reduce using rule 120 (block2 -> condition .)
    POL             reduce using rule 120 (block2 -> condition .)
    LS              reduce using rule 120 (block2 -> condition .)
    CIR             reduce using rule 120 (block2 -> condition .)
    SQ              reduce using rule 120 (block2 -> condition .)
    ARC             reduce using rule 120 (block2 -> condition .)
    PENC            reduce using rule 120 (block2 -> condition .)
    SETC            reduce using rule 120 (block2 -> condition .)
    BACO            reduce using rule 120 (block2 -> condition .)
    PENW            reduce using rule 120 (block2 -> condition .)
    F               reduce using rule 120 (block2 -> condition .)
    B               reduce using rule 120 (block2 -> condition .)
    PENP            reduce using rule 120 (block2 -> condition .)
    PENU            reduce using rule 120 (block2 -> condition .)
    PEND            reduce using rule 120 (block2 -> condition .)
    RB              reduce using rule 120 (block2 -> condition .)


state 66

    (32) colors -> BACO . colors2
    (33) colors2 -> . LP exp C exp C exp RP SC

    LP              shift and go to state 117

    colors2                        shift and go to state 119

state 67

    (107) block3 -> empty .

    RB              reduce using rule 107 (block3 -> empty .)


state 68

    (47) lstrip -> LS . LP idList RP SC

    LP              shift and go to state 120


state 69

    (43) tria -> TRI . LP exp C exp C exp p_fill RP SC

    LP              shift and go to state 121


state 70

    (38) move -> B . mueve2
    (39) mueve2 -> . LP exp C A exp RP SC

    LP              shift and go to state 122

    mueve2                         shift and go to state 123

state 71

    (37) move -> F . mueve2
    (39) mueve2 -> . LP exp C A exp RP SC

    LP              shift and go to state 122

    mueve2                         shift and go to state 124

state 72

    (122) block2 -> lab .

    IF              reduce using rule 122 (block2 -> lab .)
    LA              reduce using rule 122 (block2 -> lab .)
    L               reduce using rule 122 (block2 -> lab .)
    ID              reduce using rule 122 (block2 -> lab .)
    RE              reduce using rule 122 (block2 -> lab .)
    REC             reduce using rule 122 (block2 -> lab .)
    TRI             reduce using rule 122 (block2 -> lab .)
    POL             reduce using rule 122 (block2 -> lab .)
    LS              reduce using rule 122 (block2 -> lab .)
    CIR             reduce using rule 122 (block2 -> lab .)
    SQ              reduce using rule 122 (block2 -> lab .)
    ARC             reduce using rule 122 (block2 -> lab .)
    PENC            reduce using rule 122 (block2 -> lab .)
    SETC            reduce using rule 122 (block2 -> lab .)
    BACO            reduce using rule 122 (block2 -> lab .)
    PENW            reduce using rule 122 (block2 -> lab .)
    F               reduce using rule 122 (block2 -> lab .)
    B               reduce using rule 122 (block2 -> lab .)
    PENP            reduce using rule 122 (block2 -> lab .)
    PENU            reduce using rule 122 (block2 -> lab .)
    PEND            reduce using rule 122 (block2 -> lab .)
    RB              reduce using rule 122 (block2 -> lab .)


state 73

    (112) figure -> one_par .

    IF              reduce using rule 112 (figure -> one_par .)
    LA              reduce using rule 112 (figure -> one_par .)
    L               reduce using rule 112 (figure -> one_par .)
    ID              reduce using rule 112 (figure -> one_par .)
    RE              reduce using rule 112 (figure -> one_par .)
    REC             reduce using rule 112 (figure -> one_par .)
    TRI             reduce using rule 112 (figure -> one_par .)
    POL             reduce using rule 112 (figure -> one_par .)
    LS              reduce using rule 112 (figure -> one_par .)
    CIR             reduce using rule 112 (figure -> one_par .)
    SQ              reduce using rule 112 (figure -> one_par .)
    ARC             reduce using rule 112 (figure -> one_par .)
    PENC            reduce using rule 112 (figure -> one_par .)
    SETC            reduce using rule 112 (figure -> one_par .)
    BACO            reduce using rule 112 (figure -> one_par .)
    PENW            reduce using rule 112 (figure -> one_par .)
    F               reduce using rule 112 (figure -> one_par .)
    B               reduce using rule 112 (figure -> one_par .)
    PENP            reduce using rule 112 (figure -> one_par .)
    PENU            reduce using rule 112 (figure -> one_par .)
    PEND            reduce using rule 112 (figure -> one_par .)
    RB              reduce using rule 112 (figure -> one_par .)


state 74

    (75) WID -> ID . WID2
    (76) WID2 -> . assigment
    (77) WID2 -> . funCall
    (78) assigment -> . EQ tipeAss
    (82) funCall -> . LP func2 RP SC

    EQ              shift and go to state 127
    LP              shift and go to state 125

    funCall                        shift and go to state 128
    assigment                      shift and go to state 126
    WID2                           shift and go to state 129

state 75

    (108) figure -> rect .

    IF              reduce using rule 108 (figure -> rect .)
    LA              reduce using rule 108 (figure -> rect .)
    L               reduce using rule 108 (figure -> rect .)
    ID              reduce using rule 108 (figure -> rect .)
    RE              reduce using rule 108 (figure -> rect .)
    REC             reduce using rule 108 (figure -> rect .)
    TRI             reduce using rule 108 (figure -> rect .)
    POL             reduce using rule 108 (figure -> rect .)
    LS              reduce using rule 108 (figure -> rect .)
    CIR             reduce using rule 108 (figure -> rect .)
    SQ              reduce using rule 108 (figure -> rect .)
    ARC             reduce using rule 108 (figure -> rect .)
    PENC            reduce using rule 108 (figure -> rect .)
    SETC            reduce using rule 108 (figure -> rect .)
    BACO            reduce using rule 108 (figure -> rect .)
    PENW            reduce using rule 108 (figure -> rect .)
    F               reduce using rule 108 (figure -> rect .)
    B               reduce using rule 108 (figure -> rect .)
    PENP            reduce using rule 108 (figure -> rect .)
    PENU            reduce using rule 108 (figure -> rect .)
    PEND            reduce using rule 108 (figure -> rect .)
    RB              reduce using rule 108 (figure -> rect .)


state 76

    (102) condition -> IF . LP expresion RP block con2

    LP              shift and go to state 130


state 77

    (124) block2 -> WID .

    IF              reduce using rule 124 (block2 -> WID .)
    LA              reduce using rule 124 (block2 -> WID .)
    L               reduce using rule 124 (block2 -> WID .)
    ID              reduce using rule 124 (block2 -> WID .)
    RE              reduce using rule 124 (block2 -> WID .)
    REC             reduce using rule 124 (block2 -> WID .)
    TRI             reduce using rule 124 (block2 -> WID .)
    POL             reduce using rule 124 (block2 -> WID .)
    LS              reduce using rule 124 (block2 -> WID .)
    CIR             reduce using rule 124 (block2 -> WID .)
    SQ              reduce using rule 124 (block2 -> WID .)
    ARC             reduce using rule 124 (block2 -> WID .)
    PENC            reduce using rule 124 (block2 -> WID .)
    SETC            reduce using rule 124 (block2 -> WID .)
    BACO            reduce using rule 124 (block2 -> WID .)
    PENW            reduce using rule 124 (block2 -> WID .)
    F               reduce using rule 124 (block2 -> WID .)
    B               reduce using rule 124 (block2 -> WID .)
    PENP            reduce using rule 124 (block2 -> WID .)
    PENU            reduce using rule 124 (block2 -> WID .)
    PEND            reduce using rule 124 (block2 -> WID .)
    RB              reduce using rule 124 (block2 -> WID .)


state 78

    (113) figure -> p_arc .

    IF              reduce using rule 113 (figure -> p_arc .)
    LA              reduce using rule 113 (figure -> p_arc .)
    L               reduce using rule 113 (figure -> p_arc .)
    ID              reduce using rule 113 (figure -> p_arc .)
    RE              reduce using rule 113 (figure -> p_arc .)
    REC             reduce using rule 113 (figure -> p_arc .)
    TRI             reduce using rule 113 (figure -> p_arc .)
    POL             reduce using rule 113 (figure -> p_arc .)
    LS              reduce using rule 113 (figure -> p_arc .)
    CIR             reduce using rule 113 (figure -> p_arc .)
    SQ              reduce using rule 113 (figure -> p_arc .)
    ARC             reduce using rule 113 (figure -> p_arc .)
    PENC            reduce using rule 113 (figure -> p_arc .)
    SETC            reduce using rule 113 (figure -> p_arc .)
    BACO            reduce using rule 113 (figure -> p_arc .)
    PENW            reduce using rule 113 (figure -> p_arc .)
    F               reduce using rule 113 (figure -> p_arc .)
    B               reduce using rule 113 (figure -> p_arc .)
    PENP            reduce using rule 113 (figure -> p_arc .)
    PENU            reduce using rule 113 (figure -> p_arc .)
    PEND            reduce using rule 113 (figure -> p_arc .)
    RB              reduce using rule 113 (figure -> p_arc .)


state 79

    (44) one_par -> CIR . LP exp p_fill RP SC

    LP              shift and go to state 131


state 80

    (45) one_par -> SQ . LP exp p_fill RP SC

    LP              shift and go to state 132


state 81

    (31) colors -> SETC . colors2
    (33) colors2 -> . LP exp C exp C exp RP SC

    LP              shift and go to state 117

    colors2                        shift and go to state 133

state 82

    (123) block2 -> list .

    IF              reduce using rule 123 (block2 -> list .)
    LA              reduce using rule 123 (block2 -> list .)
    L               reduce using rule 123 (block2 -> list .)
    ID              reduce using rule 123 (block2 -> list .)
    RE              reduce using rule 123 (block2 -> list .)
    REC             reduce using rule 123 (block2 -> list .)
    TRI             reduce using rule 123 (block2 -> list .)
    POL             reduce using rule 123 (block2 -> list .)
    LS              reduce using rule 123 (block2 -> list .)
    CIR             reduce using rule 123 (block2 -> list .)
    SQ              reduce using rule 123 (block2 -> list .)
    ARC             reduce using rule 123 (block2 -> list .)
    PENC            reduce using rule 123 (block2 -> list .)
    SETC            reduce using rule 123 (block2 -> list .)
    BACO            reduce using rule 123 (block2 -> list .)
    PENW            reduce using rule 123 (block2 -> list .)
    F               reduce using rule 123 (block2 -> list .)
    B               reduce using rule 123 (block2 -> list .)
    PENP            reduce using rule 123 (block2 -> list .)
    PENU            reduce using rule 123 (block2 -> list .)
    PEND            reduce using rule 123 (block2 -> list .)
    RB              reduce using rule 123 (block2 -> list .)


state 83

    (49) p_arc -> ARC . LP exp RP SC

    LP              shift and go to state 134


state 84

    (117) pen -> position .

    IF              reduce using rule 117 (pen -> position .)
    LA              reduce using rule 117 (pen -> position .)
    L               reduce using rule 117 (pen -> position .)
    ID              reduce using rule 117 (pen -> position .)
    RE              reduce using rule 117 (pen -> position .)
    REC             reduce using rule 117 (pen -> position .)
    TRI             reduce using rule 117 (pen -> position .)
    POL             reduce using rule 117 (pen -> position .)
    LS              reduce using rule 117 (pen -> position .)
    CIR             reduce using rule 117 (pen -> position .)
    SQ              reduce using rule 117 (pen -> position .)
    ARC             reduce using rule 117 (pen -> position .)
    PENC            reduce using rule 117 (pen -> position .)
    SETC            reduce using rule 117 (pen -> position .)
    BACO            reduce using rule 117 (pen -> position .)
    PENW            reduce using rule 117 (pen -> position .)
    F               reduce using rule 117 (pen -> position .)
    B               reduce using rule 117 (pen -> position .)
    PENP            reduce using rule 117 (pen -> position .)
    PENU            reduce using rule 117 (pen -> position .)
    PEND            reduce using rule 117 (pen -> position .)
    RB              reduce using rule 117 (pen -> position .)


state 85

    (115) pen -> p_width .

    IF              reduce using rule 115 (pen -> p_width .)
    LA              reduce using rule 115 (pen -> p_width .)
    L               reduce using rule 115 (pen -> p_width .)
    ID              reduce using rule 115 (pen -> p_width .)
    RE              reduce using rule 115 (pen -> p_width .)
    REC             reduce using rule 115 (pen -> p_width .)
    TRI             reduce using rule 115 (pen -> p_width .)
    POL             reduce using rule 115 (pen -> p_width .)
    LS              reduce using rule 115 (pen -> p_width .)
    CIR             reduce using rule 115 (pen -> p_width .)
    SQ              reduce using rule 115 (pen -> p_width .)
    ARC             reduce using rule 115 (pen -> p_width .)
    PENC            reduce using rule 115 (pen -> p_width .)
    SETC            reduce using rule 115 (pen -> p_width .)
    BACO            reduce using rule 115 (pen -> p_width .)
    PENW            reduce using rule 115 (pen -> p_width .)
    F               reduce using rule 115 (pen -> p_width .)
    B               reduce using rule 115 (pen -> p_width .)
    PENP            reduce using rule 115 (pen -> p_width .)
    PENU            reduce using rule 115 (pen -> p_width .)
    PEND            reduce using rule 115 (pen -> p_width .)
    RB              reduce using rule 115 (pen -> p_width .)


state 86

    (118) pen -> penwrite .

    IF              reduce using rule 118 (pen -> penwrite .)
    LA              reduce using rule 118 (pen -> penwrite .)
    L               reduce using rule 118 (pen -> penwrite .)
    ID              reduce using rule 118 (pen -> penwrite .)
    RE              reduce using rule 118 (pen -> penwrite .)
    REC             reduce using rule 118 (pen -> penwrite .)
    TRI             reduce using rule 118 (pen -> penwrite .)
    POL             reduce using rule 118 (pen -> penwrite .)
    LS              reduce using rule 118 (pen -> penwrite .)
    CIR             reduce using rule 118 (pen -> penwrite .)
    SQ              reduce using rule 118 (pen -> penwrite .)
    ARC             reduce using rule 118 (pen -> penwrite .)
    PENC            reduce using rule 118 (pen -> penwrite .)
    SETC            reduce using rule 118 (pen -> penwrite .)
    BACO            reduce using rule 118 (pen -> penwrite .)
    PENW            reduce using rule 118 (pen -> penwrite .)
    F               reduce using rule 118 (pen -> penwrite .)
    B               reduce using rule 118 (pen -> penwrite .)
    PENP            reduce using rule 118 (pen -> penwrite .)
    PENU            reduce using rule 118 (pen -> penwrite .)
    PEND            reduce using rule 118 (pen -> penwrite .)
    RB              reduce using rule 118 (pen -> penwrite .)


state 87

    (9) fun3 -> fun5 fun4 .

    RP              reduce using rule 9 (fun3 -> fun5 fun4 .)


state 88

    (11) fun4 -> C . fun5 fun4
    (13) fun5 -> . type ID
    (25) type -> . INT
    (26) type -> . FLOAT

    INT             shift and go to state 20
    FLOAT           shift and go to state 21

    fun5                           shift and go to state 135
    type                           shift and go to state 38

state 89

    (12) fun4 -> empty .

    RP              reduce using rule 12 (fun4 -> empty .)


state 90

    (8) fun2 -> FUN ID LP fun3 RP .

    DP              reduce using rule 8 (fun2 -> FUN ID LP fun3 RP .)


state 91

    (13) fun5 -> type ID .

    C               reduce using rule 13 (fun5 -> type ID .)
    RP              reduce using rule 13 (fun5 -> type ID .)


state 92

    (88) list -> L type ID . prelistAss
    (89) prelistAss -> . EQ listAss
    (90) prelistAss -> . SC

    EQ              shift and go to state 138
    SC              shift and go to state 137

    prelistAss                     shift and go to state 136

state 93

    (16) var2 -> type var3 SC var2 .

    L               reduce using rule 16 (var2 -> type var3 SC var2 .)
    FUN             reduce using rule 16 (var2 -> type var3 SC var2 .)
    MAIN            reduce using rule 16 (var2 -> type var3 SC var2 .)
    LB              reduce using rule 16 (var2 -> type var3 SC var2 .)


state 94

    (18) var3 -> ID var4 var33 .

    SC              reduce using rule 18 (var3 -> ID var4 var33 .)


state 95

    (19) var33 -> C . ID var4 var33

    ID              shift and go to state 139


state 96

    (20) var33 -> empty .

    SC              reduce using rule 20 (var33 -> empty .)


state 97

    (57) exp -> term . exp2
    (58) exp2 -> . exp3 exp
    (59) exp2 -> . empty
    (60) exp3 -> . ADD
    (61) exp3 -> . SUB
    (126) empty -> .

  ! shift/reduce conflict for ADD resolved as shift
    ADD             shift and go to state 143
    SUB             shift and go to state 140
    C               reduce using rule 126 (empty -> .)
    SC              reduce using rule 126 (empty -> .)
    LB              reduce using rule 126 (empty -> .)
    RP              reduce using rule 126 (empty -> .)
    LT              reduce using rule 126 (empty -> .)
    MT              reduce using rule 126 (empty -> .)
    D               reduce using rule 126 (empty -> .)
    SEQ             reduce using rule 126 (empty -> .)

  ! ADD             [ reduce using rule 126 (empty -> .) ]

    exp3                           shift and go to state 141
    exp2                           shift and go to state 142
    empty                          shift and go to state 144

state 98

    (70) fact4 -> valExp .

    M               reduce using rule 70 (fact4 -> valExp .)
    DIV             reduce using rule 70 (fact4 -> valExp .)
    ADD             reduce using rule 70 (fact4 -> valExp .)
    SUB             reduce using rule 70 (fact4 -> valExp .)
    C               reduce using rule 70 (fact4 -> valExp .)
    RP              reduce using rule 70 (fact4 -> valExp .)
    LT              reduce using rule 70 (fact4 -> valExp .)
    MT              reduce using rule 70 (fact4 -> valExp .)
    D               reduce using rule 70 (fact4 -> valExp .)
    SEQ             reduce using rule 70 (fact4 -> valExp .)
    LB              reduce using rule 70 (fact4 -> valExp .)
    SC              reduce using rule 70 (fact4 -> valExp .)


state 99

    (69) fact2 -> LP .

    LP              reduce using rule 69 (fact2 -> LP .)
    ID              reduce using rule 69 (fact2 -> LP .)
    VALI            reduce using rule 69 (fact2 -> LP .)
    VALF            reduce using rule 69 (fact2 -> LP .)


state 100

    (72) valExp -> VALI .

    M               reduce using rule 72 (valExp -> VALI .)
    DIV             reduce using rule 72 (valExp -> VALI .)
    ADD             reduce using rule 72 (valExp -> VALI .)
    SUB             reduce using rule 72 (valExp -> VALI .)
    C               reduce using rule 72 (valExp -> VALI .)
    RP              reduce using rule 72 (valExp -> VALI .)
    SC              reduce using rule 72 (valExp -> VALI .)
    LB              reduce using rule 72 (valExp -> VALI .)
    LT              reduce using rule 72 (valExp -> VALI .)
    MT              reduce using rule 72 (valExp -> VALI .)
    D               reduce using rule 72 (valExp -> VALI .)
    SEQ             reduce using rule 72 (valExp -> VALI .)


state 101

    (73) valExp -> VALF .

    M               reduce using rule 73 (valExp -> VALF .)
    DIV             reduce using rule 73 (valExp -> VALF .)
    ADD             reduce using rule 73 (valExp -> VALF .)
    SUB             reduce using rule 73 (valExp -> VALF .)
    C               reduce using rule 73 (valExp -> VALF .)
    RP              reduce using rule 73 (valExp -> VALF .)
    SC              reduce using rule 73 (valExp -> VALF .)
    LB              reduce using rule 73 (valExp -> VALF .)
    LT              reduce using rule 73 (valExp -> VALF .)
    MT              reduce using rule 73 (valExp -> VALF .)
    D               reduce using rule 73 (valExp -> VALF .)
    SEQ             reduce using rule 73 (valExp -> VALF .)


state 102

    (21) var4 -> EQ exp .

    C               reduce using rule 21 (var4 -> EQ exp .)
    SC              reduce using rule 21 (var4 -> EQ exp .)


state 103

    (67) fact -> fact2 . exp RP
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    term                           shift and go to state 97
    valExp                         shift and go to state 98
    exp                            shift and go to state 145
    fact2                          shift and go to state 103
    fact                           shift and go to state 105
    fact4                          shift and go to state 106

state 104

    (71) fact4 -> ID .

    M               reduce using rule 71 (fact4 -> ID .)
    DIV             reduce using rule 71 (fact4 -> ID .)
    ADD             reduce using rule 71 (fact4 -> ID .)
    SUB             reduce using rule 71 (fact4 -> ID .)
    C               reduce using rule 71 (fact4 -> ID .)
    RP              reduce using rule 71 (fact4 -> ID .)
    LT              reduce using rule 71 (fact4 -> ID .)
    MT              reduce using rule 71 (fact4 -> ID .)
    D               reduce using rule 71 (fact4 -> ID .)
    SEQ             reduce using rule 71 (fact4 -> ID .)
    LB              reduce using rule 71 (fact4 -> ID .)
    SC              reduce using rule 71 (fact4 -> ID .)


state 105

    (62) term -> fact . term2
    (63) term2 -> . term3 term
    (64) term2 -> . empty
    (65) term3 -> . M
    (66) term3 -> . DIV
    (126) empty -> .

    M               shift and go to state 148
    DIV             shift and go to state 149
    ADD             reduce using rule 126 (empty -> .)
    SUB             reduce using rule 126 (empty -> .)
    C               reduce using rule 126 (empty -> .)
    SC              reduce using rule 126 (empty -> .)
    LB              reduce using rule 126 (empty -> .)
    RP              reduce using rule 126 (empty -> .)
    LT              reduce using rule 126 (empty -> .)
    MT              reduce using rule 126 (empty -> .)
    D               reduce using rule 126 (empty -> .)
    SEQ             reduce using rule 126 (empty -> .)

    empty                          shift and go to state 150
    term3                          shift and go to state 146
    term2                          shift and go to state 147

state 106

    (68) fact -> fact4 .

    M               reduce using rule 68 (fact -> fact4 .)
    DIV             reduce using rule 68 (fact -> fact4 .)
    ADD             reduce using rule 68 (fact -> fact4 .)
    SUB             reduce using rule 68 (fact -> fact4 .)
    C               reduce using rule 68 (fact -> fact4 .)
    SC              reduce using rule 68 (fact -> fact4 .)
    RP              reduce using rule 68 (fact -> fact4 .)
    LB              reduce using rule 68 (fact -> fact4 .)
    LT              reduce using rule 68 (fact -> fact4 .)
    MT              reduce using rule 68 (fact -> fact4 .)
    D               reduce using rule 68 (fact -> fact4 .)
    SEQ             reduce using rule 68 (fact -> fact4 .)


state 107

    (29) position -> PENP LP . exp C exp RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    term                           shift and go to state 97
    valExp                         shift and go to state 98
    exp                            shift and go to state 151
    fact2                          shift and go to state 103
    fact                           shift and go to state 105
    fact4                          shift and go to state 106

state 108

    (105) block -> LB block3 RB .

    $end            reduce using rule 105 (block -> LB block3 RB .)
    FUN             reduce using rule 105 (block -> LB block3 RB .)
    MAIN            reduce using rule 105 (block -> LB block3 RB .)
    ELSE            reduce using rule 105 (block -> LB block3 RB .)
    IF              reduce using rule 105 (block -> LB block3 RB .)
    LA              reduce using rule 105 (block -> LB block3 RB .)
    L               reduce using rule 105 (block -> LB block3 RB .)
    ID              reduce using rule 105 (block -> LB block3 RB .)
    RE              reduce using rule 105 (block -> LB block3 RB .)
    REC             reduce using rule 105 (block -> LB block3 RB .)
    TRI             reduce using rule 105 (block -> LB block3 RB .)
    POL             reduce using rule 105 (block -> LB block3 RB .)
    LS              reduce using rule 105 (block -> LB block3 RB .)
    CIR             reduce using rule 105 (block -> LB block3 RB .)
    SQ              reduce using rule 105 (block -> LB block3 RB .)
    ARC             reduce using rule 105 (block -> LB block3 RB .)
    PENC            reduce using rule 105 (block -> LB block3 RB .)
    SETC            reduce using rule 105 (block -> LB block3 RB .)
    BACO            reduce using rule 105 (block -> LB block3 RB .)
    PENW            reduce using rule 105 (block -> LB block3 RB .)
    F               reduce using rule 105 (block -> LB block3 RB .)
    B               reduce using rule 105 (block -> LB block3 RB .)
    PENP            reduce using rule 105 (block -> LB block3 RB .)
    PENU            reduce using rule 105 (block -> LB block3 RB .)
    PEND            reduce using rule 105 (block -> LB block3 RB .)
    RB              reduce using rule 105 (block -> LB block3 RB .)


state 109

    (106) block3 -> block2 block3 .

    RB              reduce using rule 106 (block3 -> block2 block3 .)


state 110

    (40) rect -> REC LP . exp C exp p_fill RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    term                           shift and go to state 97
    valExp                         shift and go to state 98
    exp                            shift and go to state 152
    fact2                          shift and go to state 103
    fact4                          shift and go to state 106
    fact                           shift and go to state 105

state 111

    (34) p_width -> PENW LP . exp RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    term                           shift and go to state 97
    valExp                         shift and go to state 98
    exp                            shift and go to state 153
    fact2                          shift and go to state 103
    fact                           shift and go to state 105
    fact4                          shift and go to state 106

state 112

    (35) penwrite -> PENU SC .

    IF              reduce using rule 35 (penwrite -> PENU SC .)
    LA              reduce using rule 35 (penwrite -> PENU SC .)
    L               reduce using rule 35 (penwrite -> PENU SC .)
    ID              reduce using rule 35 (penwrite -> PENU SC .)
    RE              reduce using rule 35 (penwrite -> PENU SC .)
    REC             reduce using rule 35 (penwrite -> PENU SC .)
    TRI             reduce using rule 35 (penwrite -> PENU SC .)
    POL             reduce using rule 35 (penwrite -> PENU SC .)
    LS              reduce using rule 35 (penwrite -> PENU SC .)
    CIR             reduce using rule 35 (penwrite -> PENU SC .)
    SQ              reduce using rule 35 (penwrite -> PENU SC .)
    ARC             reduce using rule 35 (penwrite -> PENU SC .)
    PENC            reduce using rule 35 (penwrite -> PENU SC .)
    SETC            reduce using rule 35 (penwrite -> PENU SC .)
    BACO            reduce using rule 35 (penwrite -> PENU SC .)
    PENW            reduce using rule 35 (penwrite -> PENU SC .)
    F               reduce using rule 35 (penwrite -> PENU SC .)
    B               reduce using rule 35 (penwrite -> PENU SC .)
    PENP            reduce using rule 35 (penwrite -> PENU SC .)
    PENU            reduce using rule 35 (penwrite -> PENU SC .)
    PEND            reduce using rule 35 (penwrite -> PENU SC .)
    RB              reduce using rule 35 (penwrite -> PENU SC .)


state 113

    (97) lab -> LA LP . stExp lab2 RP SC
    (100) stExp -> . STR
    (101) stExp -> . exp
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    STR             shift and go to state 154
    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    term                           shift and go to state 97
    valExp                         shift and go to state 98
    stExp                          shift and go to state 155
    exp                            shift and go to state 156
    fact2                          shift and go to state 103
    fact                           shift and go to state 105
    fact4                          shift and go to state 106

state 114

    (46) poly -> POL LP . idList p_fill RP SC
    (48) idList -> . ID

    ID              shift and go to state 158

    idList                         shift and go to state 157

state 115

    (74) rep -> RE exp . block
    (105) block -> . LB block3 RB

    LB              shift and go to state 33

    block                          shift and go to state 159

state 116

    (36) penwrite -> PEND SC .

    IF              reduce using rule 36 (penwrite -> PEND SC .)
    LA              reduce using rule 36 (penwrite -> PEND SC .)
    L               reduce using rule 36 (penwrite -> PEND SC .)
    ID              reduce using rule 36 (penwrite -> PEND SC .)
    RE              reduce using rule 36 (penwrite -> PEND SC .)
    REC             reduce using rule 36 (penwrite -> PEND SC .)
    TRI             reduce using rule 36 (penwrite -> PEND SC .)
    POL             reduce using rule 36 (penwrite -> PEND SC .)
    LS              reduce using rule 36 (penwrite -> PEND SC .)
    CIR             reduce using rule 36 (penwrite -> PEND SC .)
    SQ              reduce using rule 36 (penwrite -> PEND SC .)
    ARC             reduce using rule 36 (penwrite -> PEND SC .)
    PENC            reduce using rule 36 (penwrite -> PEND SC .)
    SETC            reduce using rule 36 (penwrite -> PEND SC .)
    BACO            reduce using rule 36 (penwrite -> PEND SC .)
    PENW            reduce using rule 36 (penwrite -> PEND SC .)
    F               reduce using rule 36 (penwrite -> PEND SC .)
    B               reduce using rule 36 (penwrite -> PEND SC .)
    PENP            reduce using rule 36 (penwrite -> PEND SC .)
    PENU            reduce using rule 36 (penwrite -> PEND SC .)
    PEND            reduce using rule 36 (penwrite -> PEND SC .)
    RB              reduce using rule 36 (penwrite -> PEND SC .)


state 117

    (33) colors2 -> LP . exp C exp C exp RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    term                           shift and go to state 97
    valExp                         shift and go to state 98
    exp                            shift and go to state 160
    fact2                          shift and go to state 103
    fact                           shift and go to state 105
    fact4                          shift and go to state 106

state 118

    (30) colors -> PENC colors2 .

    IF              reduce using rule 30 (colors -> PENC colors2 .)
    LA              reduce using rule 30 (colors -> PENC colors2 .)
    L               reduce using rule 30 (colors -> PENC colors2 .)
    ID              reduce using rule 30 (colors -> PENC colors2 .)
    RE              reduce using rule 30 (colors -> PENC colors2 .)
    REC             reduce using rule 30 (colors -> PENC colors2 .)
    TRI             reduce using rule 30 (colors -> PENC colors2 .)
    POL             reduce using rule 30 (colors -> PENC colors2 .)
    LS              reduce using rule 30 (colors -> PENC colors2 .)
    CIR             reduce using rule 30 (colors -> PENC colors2 .)
    SQ              reduce using rule 30 (colors -> PENC colors2 .)
    ARC             reduce using rule 30 (colors -> PENC colors2 .)
    PENC            reduce using rule 30 (colors -> PENC colors2 .)
    SETC            reduce using rule 30 (colors -> PENC colors2 .)
    BACO            reduce using rule 30 (colors -> PENC colors2 .)
    PENW            reduce using rule 30 (colors -> PENC colors2 .)
    F               reduce using rule 30 (colors -> PENC colors2 .)
    B               reduce using rule 30 (colors -> PENC colors2 .)
    PENP            reduce using rule 30 (colors -> PENC colors2 .)
    PENU            reduce using rule 30 (colors -> PENC colors2 .)
    PEND            reduce using rule 30 (colors -> PENC colors2 .)
    RB              reduce using rule 30 (colors -> PENC colors2 .)


state 119

    (32) colors -> BACO colors2 .

    IF              reduce using rule 32 (colors -> BACO colors2 .)
    LA              reduce using rule 32 (colors -> BACO colors2 .)
    L               reduce using rule 32 (colors -> BACO colors2 .)
    ID              reduce using rule 32 (colors -> BACO colors2 .)
    RE              reduce using rule 32 (colors -> BACO colors2 .)
    REC             reduce using rule 32 (colors -> BACO colors2 .)
    TRI             reduce using rule 32 (colors -> BACO colors2 .)
    POL             reduce using rule 32 (colors -> BACO colors2 .)
    LS              reduce using rule 32 (colors -> BACO colors2 .)
    CIR             reduce using rule 32 (colors -> BACO colors2 .)
    SQ              reduce using rule 32 (colors -> BACO colors2 .)
    ARC             reduce using rule 32 (colors -> BACO colors2 .)
    PENC            reduce using rule 32 (colors -> BACO colors2 .)
    SETC            reduce using rule 32 (colors -> BACO colors2 .)
    BACO            reduce using rule 32 (colors -> BACO colors2 .)
    PENW            reduce using rule 32 (colors -> BACO colors2 .)
    F               reduce using rule 32 (colors -> BACO colors2 .)
    B               reduce using rule 32 (colors -> BACO colors2 .)
    PENP            reduce using rule 32 (colors -> BACO colors2 .)
    PENU            reduce using rule 32 (colors -> BACO colors2 .)
    PEND            reduce using rule 32 (colors -> BACO colors2 .)
    RB              reduce using rule 32 (colors -> BACO colors2 .)


state 120

    (47) lstrip -> LS LP . idList RP SC
    (48) idList -> . ID

    ID              shift and go to state 158

    idList                         shift and go to state 161

state 121

    (43) tria -> TRI LP . exp C exp C exp p_fill RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    term                           shift and go to state 97
    valExp                         shift and go to state 98
    exp                            shift and go to state 162
    fact2                          shift and go to state 103
    fact4                          shift and go to state 106
    fact                           shift and go to state 105

state 122

    (39) mueve2 -> LP . exp C A exp RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    term                           shift and go to state 97
    valExp                         shift and go to state 98
    exp                            shift and go to state 163
    fact2                          shift and go to state 103
    fact                           shift and go to state 105
    fact4                          shift and go to state 106

state 123

    (38) move -> B mueve2 .

    IF              reduce using rule 38 (move -> B mueve2 .)
    LA              reduce using rule 38 (move -> B mueve2 .)
    L               reduce using rule 38 (move -> B mueve2 .)
    ID              reduce using rule 38 (move -> B mueve2 .)
    RE              reduce using rule 38 (move -> B mueve2 .)
    REC             reduce using rule 38 (move -> B mueve2 .)
    TRI             reduce using rule 38 (move -> B mueve2 .)
    POL             reduce using rule 38 (move -> B mueve2 .)
    LS              reduce using rule 38 (move -> B mueve2 .)
    CIR             reduce using rule 38 (move -> B mueve2 .)
    SQ              reduce using rule 38 (move -> B mueve2 .)
    ARC             reduce using rule 38 (move -> B mueve2 .)
    PENC            reduce using rule 38 (move -> B mueve2 .)
    SETC            reduce using rule 38 (move -> B mueve2 .)
    BACO            reduce using rule 38 (move -> B mueve2 .)
    PENW            reduce using rule 38 (move -> B mueve2 .)
    F               reduce using rule 38 (move -> B mueve2 .)
    B               reduce using rule 38 (move -> B mueve2 .)
    PENP            reduce using rule 38 (move -> B mueve2 .)
    PENU            reduce using rule 38 (move -> B mueve2 .)
    PEND            reduce using rule 38 (move -> B mueve2 .)
    RB              reduce using rule 38 (move -> B mueve2 .)


state 124

    (37) move -> F mueve2 .

    IF              reduce using rule 37 (move -> F mueve2 .)
    LA              reduce using rule 37 (move -> F mueve2 .)
    L               reduce using rule 37 (move -> F mueve2 .)
    ID              reduce using rule 37 (move -> F mueve2 .)
    RE              reduce using rule 37 (move -> F mueve2 .)
    REC             reduce using rule 37 (move -> F mueve2 .)
    TRI             reduce using rule 37 (move -> F mueve2 .)
    POL             reduce using rule 37 (move -> F mueve2 .)
    LS              reduce using rule 37 (move -> F mueve2 .)
    CIR             reduce using rule 37 (move -> F mueve2 .)
    SQ              reduce using rule 37 (move -> F mueve2 .)
    ARC             reduce using rule 37 (move -> F mueve2 .)
    PENC            reduce using rule 37 (move -> F mueve2 .)
    SETC            reduce using rule 37 (move -> F mueve2 .)
    BACO            reduce using rule 37 (move -> F mueve2 .)
    PENW            reduce using rule 37 (move -> F mueve2 .)
    F               reduce using rule 37 (move -> F mueve2 .)
    B               reduce using rule 37 (move -> F mueve2 .)
    PENP            reduce using rule 37 (move -> F mueve2 .)
    PENU            reduce using rule 37 (move -> F mueve2 .)
    PEND            reduce using rule 37 (move -> F mueve2 .)
    RB              reduce using rule 37 (move -> F mueve2 .)


state 125

    (82) funCall -> LP . func2 RP SC
    (83) func2 -> . func4
    (84) func2 -> . empty
    (87) func4 -> . exp func3
    (126) empty -> .
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    RP              reduce using rule 126 (empty -> .)
    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    func2                          shift and go to state 164
    term                           shift and go to state 97
    valExp                         shift and go to state 98
    func4                          shift and go to state 166
    fact                           shift and go to state 105
    exp                            shift and go to state 165
    fact2                          shift and go to state 103
    empty                          shift and go to state 167
    fact4                          shift and go to state 106

state 126

    (76) WID2 -> assigment .

    IF              reduce using rule 76 (WID2 -> assigment .)
    LA              reduce using rule 76 (WID2 -> assigment .)
    L               reduce using rule 76 (WID2 -> assigment .)
    ID              reduce using rule 76 (WID2 -> assigment .)
    RE              reduce using rule 76 (WID2 -> assigment .)
    REC             reduce using rule 76 (WID2 -> assigment .)
    TRI             reduce using rule 76 (WID2 -> assigment .)
    POL             reduce using rule 76 (WID2 -> assigment .)
    LS              reduce using rule 76 (WID2 -> assigment .)
    CIR             reduce using rule 76 (WID2 -> assigment .)
    SQ              reduce using rule 76 (WID2 -> assigment .)
    ARC             reduce using rule 76 (WID2 -> assigment .)
    PENC            reduce using rule 76 (WID2 -> assigment .)
    SETC            reduce using rule 76 (WID2 -> assigment .)
    BACO            reduce using rule 76 (WID2 -> assigment .)
    PENW            reduce using rule 76 (WID2 -> assigment .)
    F               reduce using rule 76 (WID2 -> assigment .)
    B               reduce using rule 76 (WID2 -> assigment .)
    PENP            reduce using rule 76 (WID2 -> assigment .)
    PENU            reduce using rule 76 (WID2 -> assigment .)
    PEND            reduce using rule 76 (WID2 -> assigment .)
    RB              reduce using rule 76 (WID2 -> assigment .)


state 127

    (78) assigment -> EQ . tipeAss
    (79) tipeAss -> . varAss
    (80) tipeAss -> . listAss
    (81) varAss -> . exp SC
    (91) listAss -> . LB lista3 RB SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LB              shift and go to state 168
    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    term                           shift and go to state 97
    valExp                         shift and go to state 98
    listAss                        shift and go to state 169
    tipeAss                        shift and go to state 172
    fact                           shift and go to state 105
    exp                            shift and go to state 171
    fact2                          shift and go to state 103
    fact4                          shift and go to state 106
    varAss                         shift and go to state 170

state 128

    (77) WID2 -> funCall .

    IF              reduce using rule 77 (WID2 -> funCall .)
    LA              reduce using rule 77 (WID2 -> funCall .)
    L               reduce using rule 77 (WID2 -> funCall .)
    ID              reduce using rule 77 (WID2 -> funCall .)
    RE              reduce using rule 77 (WID2 -> funCall .)
    REC             reduce using rule 77 (WID2 -> funCall .)
    TRI             reduce using rule 77 (WID2 -> funCall .)
    POL             reduce using rule 77 (WID2 -> funCall .)
    LS              reduce using rule 77 (WID2 -> funCall .)
    CIR             reduce using rule 77 (WID2 -> funCall .)
    SQ              reduce using rule 77 (WID2 -> funCall .)
    ARC             reduce using rule 77 (WID2 -> funCall .)
    PENC            reduce using rule 77 (WID2 -> funCall .)
    SETC            reduce using rule 77 (WID2 -> funCall .)
    BACO            reduce using rule 77 (WID2 -> funCall .)
    PENW            reduce using rule 77 (WID2 -> funCall .)
    F               reduce using rule 77 (WID2 -> funCall .)
    B               reduce using rule 77 (WID2 -> funCall .)
    PENP            reduce using rule 77 (WID2 -> funCall .)
    PENU            reduce using rule 77 (WID2 -> funCall .)
    PEND            reduce using rule 77 (WID2 -> funCall .)
    RB              reduce using rule 77 (WID2 -> funCall .)


state 129

    (75) WID -> ID WID2 .

    IF              reduce using rule 75 (WID -> ID WID2 .)
    LA              reduce using rule 75 (WID -> ID WID2 .)
    L               reduce using rule 75 (WID -> ID WID2 .)
    ID              reduce using rule 75 (WID -> ID WID2 .)
    RE              reduce using rule 75 (WID -> ID WID2 .)
    REC             reduce using rule 75 (WID -> ID WID2 .)
    TRI             reduce using rule 75 (WID -> ID WID2 .)
    POL             reduce using rule 75 (WID -> ID WID2 .)
    LS              reduce using rule 75 (WID -> ID WID2 .)
    CIR             reduce using rule 75 (WID -> ID WID2 .)
    SQ              reduce using rule 75 (WID -> ID WID2 .)
    ARC             reduce using rule 75 (WID -> ID WID2 .)
    PENC            reduce using rule 75 (WID -> ID WID2 .)
    SETC            reduce using rule 75 (WID -> ID WID2 .)
    BACO            reduce using rule 75 (WID -> ID WID2 .)
    PENW            reduce using rule 75 (WID -> ID WID2 .)
    F               reduce using rule 75 (WID -> ID WID2 .)
    B               reduce using rule 75 (WID -> ID WID2 .)
    PENP            reduce using rule 75 (WID -> ID WID2 .)
    PENU            reduce using rule 75 (WID -> ID WID2 .)
    PEND            reduce using rule 75 (WID -> ID WID2 .)
    RB              reduce using rule 75 (WID -> ID WID2 .)


state 130

    (102) condition -> IF LP . expresion RP block con2
    (50) expresion -> . exp ex2
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    expresion                      shift and go to state 173
    valExp                         shift and go to state 98
    term                           shift and go to state 97
    fact                           shift and go to state 105
    exp                            shift and go to state 174
    fact2                          shift and go to state 103
    fact4                          shift and go to state 106

state 131

    (44) one_par -> CIR LP . exp p_fill RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    term                           shift and go to state 97
    valExp                         shift and go to state 98
    exp                            shift and go to state 175
    fact2                          shift and go to state 103
    fact4                          shift and go to state 106
    fact                           shift and go to state 105

state 132

    (45) one_par -> SQ LP . exp p_fill RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    term                           shift and go to state 97
    valExp                         shift and go to state 98
    exp                            shift and go to state 176
    fact2                          shift and go to state 103
    fact4                          shift and go to state 106
    fact                           shift and go to state 105

state 133

    (31) colors -> SETC colors2 .

    IF              reduce using rule 31 (colors -> SETC colors2 .)
    LA              reduce using rule 31 (colors -> SETC colors2 .)
    L               reduce using rule 31 (colors -> SETC colors2 .)
    ID              reduce using rule 31 (colors -> SETC colors2 .)
    RE              reduce using rule 31 (colors -> SETC colors2 .)
    REC             reduce using rule 31 (colors -> SETC colors2 .)
    TRI             reduce using rule 31 (colors -> SETC colors2 .)
    POL             reduce using rule 31 (colors -> SETC colors2 .)
    LS              reduce using rule 31 (colors -> SETC colors2 .)
    CIR             reduce using rule 31 (colors -> SETC colors2 .)
    SQ              reduce using rule 31 (colors -> SETC colors2 .)
    ARC             reduce using rule 31 (colors -> SETC colors2 .)
    PENC            reduce using rule 31 (colors -> SETC colors2 .)
    SETC            reduce using rule 31 (colors -> SETC colors2 .)
    BACO            reduce using rule 31 (colors -> SETC colors2 .)
    PENW            reduce using rule 31 (colors -> SETC colors2 .)
    F               reduce using rule 31 (colors -> SETC colors2 .)
    B               reduce using rule 31 (colors -> SETC colors2 .)
    PENP            reduce using rule 31 (colors -> SETC colors2 .)
    PENU            reduce using rule 31 (colors -> SETC colors2 .)
    PEND            reduce using rule 31 (colors -> SETC colors2 .)
    RB              reduce using rule 31 (colors -> SETC colors2 .)


state 134

    (49) p_arc -> ARC LP . exp RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    term                           shift and go to state 97
    valExp                         shift and go to state 98
    exp                            shift and go to state 177
    fact2                          shift and go to state 103
    fact                           shift and go to state 105
    fact4                          shift and go to state 106

state 135

    (11) fun4 -> C fun5 . fun4
    (11) fun4 -> . C fun5 fun4
    (12) fun4 -> . empty
    (126) empty -> .

    C               shift and go to state 88
    RP              reduce using rule 126 (empty -> .)

    fun4                           shift and go to state 178
    empty                          shift and go to state 89

state 136

    (88) list -> L type ID prelistAss .

    L               reduce using rule 88 (list -> L type ID prelistAss .)
    FUN             reduce using rule 88 (list -> L type ID prelistAss .)
    MAIN            reduce using rule 88 (list -> L type ID prelistAss .)
    LB              reduce using rule 88 (list -> L type ID prelistAss .)
    IF              reduce using rule 88 (list -> L type ID prelistAss .)
    LA              reduce using rule 88 (list -> L type ID prelistAss .)
    ID              reduce using rule 88 (list -> L type ID prelistAss .)
    RE              reduce using rule 88 (list -> L type ID prelistAss .)
    REC             reduce using rule 88 (list -> L type ID prelistAss .)
    TRI             reduce using rule 88 (list -> L type ID prelistAss .)
    POL             reduce using rule 88 (list -> L type ID prelistAss .)
    LS              reduce using rule 88 (list -> L type ID prelistAss .)
    CIR             reduce using rule 88 (list -> L type ID prelistAss .)
    SQ              reduce using rule 88 (list -> L type ID prelistAss .)
    ARC             reduce using rule 88 (list -> L type ID prelistAss .)
    PENC            reduce using rule 88 (list -> L type ID prelistAss .)
    SETC            reduce using rule 88 (list -> L type ID prelistAss .)
    BACO            reduce using rule 88 (list -> L type ID prelistAss .)
    PENW            reduce using rule 88 (list -> L type ID prelistAss .)
    F               reduce using rule 88 (list -> L type ID prelistAss .)
    B               reduce using rule 88 (list -> L type ID prelistAss .)
    PENP            reduce using rule 88 (list -> L type ID prelistAss .)
    PENU            reduce using rule 88 (list -> L type ID prelistAss .)
    PEND            reduce using rule 88 (list -> L type ID prelistAss .)
    RB              reduce using rule 88 (list -> L type ID prelistAss .)


state 137

    (90) prelistAss -> SC .

    L               reduce using rule 90 (prelistAss -> SC .)
    FUN             reduce using rule 90 (prelistAss -> SC .)
    MAIN            reduce using rule 90 (prelistAss -> SC .)
    LB              reduce using rule 90 (prelistAss -> SC .)
    IF              reduce using rule 90 (prelistAss -> SC .)
    LA              reduce using rule 90 (prelistAss -> SC .)
    ID              reduce using rule 90 (prelistAss -> SC .)
    RE              reduce using rule 90 (prelistAss -> SC .)
    REC             reduce using rule 90 (prelistAss -> SC .)
    TRI             reduce using rule 90 (prelistAss -> SC .)
    POL             reduce using rule 90 (prelistAss -> SC .)
    LS              reduce using rule 90 (prelistAss -> SC .)
    CIR             reduce using rule 90 (prelistAss -> SC .)
    SQ              reduce using rule 90 (prelistAss -> SC .)
    ARC             reduce using rule 90 (prelistAss -> SC .)
    PENC            reduce using rule 90 (prelistAss -> SC .)
    SETC            reduce using rule 90 (prelistAss -> SC .)
    BACO            reduce using rule 90 (prelistAss -> SC .)
    PENW            reduce using rule 90 (prelistAss -> SC .)
    F               reduce using rule 90 (prelistAss -> SC .)
    B               reduce using rule 90 (prelistAss -> SC .)
    PENP            reduce using rule 90 (prelistAss -> SC .)
    PENU            reduce using rule 90 (prelistAss -> SC .)
    PEND            reduce using rule 90 (prelistAss -> SC .)
    RB              reduce using rule 90 (prelistAss -> SC .)


state 138

    (89) prelistAss -> EQ . listAss
    (91) listAss -> . LB lista3 RB SC

    LB              shift and go to state 168

    listAss                        shift and go to state 179

state 139

    (19) var33 -> C ID . var4 var33
    (21) var4 -> . EQ exp
    (22) var4 -> . empty
    (126) empty -> .

    EQ              shift and go to state 44
    C               reduce using rule 126 (empty -> .)
    SC              reduce using rule 126 (empty -> .)

    var4                           shift and go to state 180
    empty                          shift and go to state 45

state 140

    (61) exp3 -> SUB .

    LP              reduce using rule 61 (exp3 -> SUB .)
    ID              reduce using rule 61 (exp3 -> SUB .)
    VALI            reduce using rule 61 (exp3 -> SUB .)
    VALF            reduce using rule 61 (exp3 -> SUB .)


state 141

    (58) exp2 -> exp3 . exp
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    term                           shift and go to state 97
    valExp                         shift and go to state 98
    exp                            shift and go to state 181
    fact2                          shift and go to state 103
    fact                           shift and go to state 105
    fact4                          shift and go to state 106

state 142

    (57) exp -> term exp2 .

    ADD             reduce using rule 57 (exp -> term exp2 .)
    RP              reduce using rule 57 (exp -> term exp2 .)
    C               reduce using rule 57 (exp -> term exp2 .)
    SC              reduce using rule 57 (exp -> term exp2 .)
    LB              reduce using rule 57 (exp -> term exp2 .)
    LT              reduce using rule 57 (exp -> term exp2 .)
    MT              reduce using rule 57 (exp -> term exp2 .)
    D               reduce using rule 57 (exp -> term exp2 .)
    SEQ             reduce using rule 57 (exp -> term exp2 .)


state 143

    (60) exp3 -> ADD .

    LP              reduce using rule 60 (exp3 -> ADD .)
    ID              reduce using rule 60 (exp3 -> ADD .)
    VALI            reduce using rule 60 (exp3 -> ADD .)
    VALF            reduce using rule 60 (exp3 -> ADD .)


state 144

    (59) exp2 -> empty .

    C               reduce using rule 59 (exp2 -> empty .)
    SC              reduce using rule 59 (exp2 -> empty .)
    LB              reduce using rule 59 (exp2 -> empty .)
    RP              reduce using rule 59 (exp2 -> empty .)
    ADD             reduce using rule 59 (exp2 -> empty .)
    LT              reduce using rule 59 (exp2 -> empty .)
    MT              reduce using rule 59 (exp2 -> empty .)
    D               reduce using rule 59 (exp2 -> empty .)
    SEQ             reduce using rule 59 (exp2 -> empty .)


state 145

    (67) fact -> fact2 exp . RP

    RP              shift and go to state 182


state 146

    (63) term2 -> term3 . term
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    term                           shift and go to state 183
    valExp                         shift and go to state 98
    fact2                          shift and go to state 103
    fact                           shift and go to state 105
    fact4                          shift and go to state 106

state 147

    (62) term -> fact term2 .

    ADD             reduce using rule 62 (term -> fact term2 .)
    SUB             reduce using rule 62 (term -> fact term2 .)
    C               reduce using rule 62 (term -> fact term2 .)
    RP              reduce using rule 62 (term -> fact term2 .)
    SC              reduce using rule 62 (term -> fact term2 .)
    LB              reduce using rule 62 (term -> fact term2 .)
    LT              reduce using rule 62 (term -> fact term2 .)
    MT              reduce using rule 62 (term -> fact term2 .)
    D               reduce using rule 62 (term -> fact term2 .)
    SEQ             reduce using rule 62 (term -> fact term2 .)


state 148

    (65) term3 -> M .

    LP              reduce using rule 65 (term3 -> M .)
    ID              reduce using rule 65 (term3 -> M .)
    VALI            reduce using rule 65 (term3 -> M .)
    VALF            reduce using rule 65 (term3 -> M .)


state 149

    (66) term3 -> DIV .

    LP              reduce using rule 66 (term3 -> DIV .)
    ID              reduce using rule 66 (term3 -> DIV .)
    VALI            reduce using rule 66 (term3 -> DIV .)
    VALF            reduce using rule 66 (term3 -> DIV .)


state 150

    (64) term2 -> empty .

    ADD             reduce using rule 64 (term2 -> empty .)
    SUB             reduce using rule 64 (term2 -> empty .)
    C               reduce using rule 64 (term2 -> empty .)
    SC              reduce using rule 64 (term2 -> empty .)
    LB              reduce using rule 64 (term2 -> empty .)
    RP              reduce using rule 64 (term2 -> empty .)
    LT              reduce using rule 64 (term2 -> empty .)
    MT              reduce using rule 64 (term2 -> empty .)
    D               reduce using rule 64 (term2 -> empty .)
    SEQ             reduce using rule 64 (term2 -> empty .)


state 151

    (29) position -> PENP LP exp . C exp RP SC

    C               shift and go to state 184


state 152

    (40) rect -> REC LP exp . C exp p_fill RP SC

    C               shift and go to state 185


state 153

    (34) p_width -> PENW LP exp . RP SC

    RP              shift and go to state 186


state 154

    (100) stExp -> STR .

    ADD             reduce using rule 100 (stExp -> STR .)
    RP              reduce using rule 100 (stExp -> STR .)


state 155

    (97) lab -> LA LP stExp . lab2 RP SC
    (98) lab2 -> . ADD stExp lab2
    (99) lab2 -> . empty
    (126) empty -> .

    ADD             shift and go to state 188
    RP              reduce using rule 126 (empty -> .)

    lab2                           shift and go to state 187
    empty                          shift and go to state 189

state 156

    (101) stExp -> exp .

    ADD             reduce using rule 101 (stExp -> exp .)
    RP              reduce using rule 101 (stExp -> exp .)


state 157

    (46) poly -> POL LP idList . p_fill RP SC
    (41) p_fill -> . C FILL
    (42) p_fill -> . empty
    (126) empty -> .

    C               shift and go to state 190
    RP              reduce using rule 126 (empty -> .)

    empty                          shift and go to state 192
    p_fill                         shift and go to state 191

state 158

    (48) idList -> ID .

    RP              reduce using rule 48 (idList -> ID .)
    C               reduce using rule 48 (idList -> ID .)


state 159

    (74) rep -> RE exp block .

    IF              reduce using rule 74 (rep -> RE exp block .)
    LA              reduce using rule 74 (rep -> RE exp block .)
    L               reduce using rule 74 (rep -> RE exp block .)
    ID              reduce using rule 74 (rep -> RE exp block .)
    RE              reduce using rule 74 (rep -> RE exp block .)
    REC             reduce using rule 74 (rep -> RE exp block .)
    TRI             reduce using rule 74 (rep -> RE exp block .)
    POL             reduce using rule 74 (rep -> RE exp block .)
    LS              reduce using rule 74 (rep -> RE exp block .)
    CIR             reduce using rule 74 (rep -> RE exp block .)
    SQ              reduce using rule 74 (rep -> RE exp block .)
    ARC             reduce using rule 74 (rep -> RE exp block .)
    PENC            reduce using rule 74 (rep -> RE exp block .)
    SETC            reduce using rule 74 (rep -> RE exp block .)
    BACO            reduce using rule 74 (rep -> RE exp block .)
    PENW            reduce using rule 74 (rep -> RE exp block .)
    F               reduce using rule 74 (rep -> RE exp block .)
    B               reduce using rule 74 (rep -> RE exp block .)
    PENP            reduce using rule 74 (rep -> RE exp block .)
    PENU            reduce using rule 74 (rep -> RE exp block .)
    PEND            reduce using rule 74 (rep -> RE exp block .)
    RB              reduce using rule 74 (rep -> RE exp block .)


state 160

    (33) colors2 -> LP exp . C exp C exp RP SC

    C               shift and go to state 193


state 161

    (47) lstrip -> LS LP idList . RP SC

    RP              shift and go to state 194


state 162

    (43) tria -> TRI LP exp . C exp C exp p_fill RP SC

    C               shift and go to state 195


state 163

    (39) mueve2 -> LP exp . C A exp RP SC

    C               shift and go to state 196


state 164

    (82) funCall -> LP func2 . RP SC

    RP              shift and go to state 197


state 165

    (87) func4 -> exp . func3
    (85) func3 -> . C func4
    (86) func3 -> . empty
    (126) empty -> .

    C               shift and go to state 199
    RP              reduce using rule 126 (empty -> .)

    func3                          shift and go to state 198
    empty                          shift and go to state 200

state 166

    (83) func2 -> func4 .

    RP              reduce using rule 83 (func2 -> func4 .)


state 167

    (84) func2 -> empty .

    RP              reduce using rule 84 (func2 -> empty .)


state 168

    (91) listAss -> LB . lista3 RB SC
    (94) lista3 -> . lista2 li4
    (92) lista2 -> . val
    (93) lista2 -> . ID
    (27) val -> . VALI
    (28) val -> . VALF

    ID              shift and go to state 204
    VALI            shift and go to state 201
    VALF            shift and go to state 203

    val                            shift and go to state 202
    lista3                         shift and go to state 205
    lista2                         shift and go to state 206

state 169

    (80) tipeAss -> listAss .

    IF              reduce using rule 80 (tipeAss -> listAss .)
    LA              reduce using rule 80 (tipeAss -> listAss .)
    L               reduce using rule 80 (tipeAss -> listAss .)
    ID              reduce using rule 80 (tipeAss -> listAss .)
    RE              reduce using rule 80 (tipeAss -> listAss .)
    REC             reduce using rule 80 (tipeAss -> listAss .)
    TRI             reduce using rule 80 (tipeAss -> listAss .)
    POL             reduce using rule 80 (tipeAss -> listAss .)
    LS              reduce using rule 80 (tipeAss -> listAss .)
    CIR             reduce using rule 80 (tipeAss -> listAss .)
    SQ              reduce using rule 80 (tipeAss -> listAss .)
    ARC             reduce using rule 80 (tipeAss -> listAss .)
    PENC            reduce using rule 80 (tipeAss -> listAss .)
    SETC            reduce using rule 80 (tipeAss -> listAss .)
    BACO            reduce using rule 80 (tipeAss -> listAss .)
    PENW            reduce using rule 80 (tipeAss -> listAss .)
    F               reduce using rule 80 (tipeAss -> listAss .)
    B               reduce using rule 80 (tipeAss -> listAss .)
    PENP            reduce using rule 80 (tipeAss -> listAss .)
    PENU            reduce using rule 80 (tipeAss -> listAss .)
    PEND            reduce using rule 80 (tipeAss -> listAss .)
    RB              reduce using rule 80 (tipeAss -> listAss .)


state 170

    (79) tipeAss -> varAss .

    IF              reduce using rule 79 (tipeAss -> varAss .)
    LA              reduce using rule 79 (tipeAss -> varAss .)
    L               reduce using rule 79 (tipeAss -> varAss .)
    ID              reduce using rule 79 (tipeAss -> varAss .)
    RE              reduce using rule 79 (tipeAss -> varAss .)
    REC             reduce using rule 79 (tipeAss -> varAss .)
    TRI             reduce using rule 79 (tipeAss -> varAss .)
    POL             reduce using rule 79 (tipeAss -> varAss .)
    LS              reduce using rule 79 (tipeAss -> varAss .)
    CIR             reduce using rule 79 (tipeAss -> varAss .)
    SQ              reduce using rule 79 (tipeAss -> varAss .)
    ARC             reduce using rule 79 (tipeAss -> varAss .)
    PENC            reduce using rule 79 (tipeAss -> varAss .)
    SETC            reduce using rule 79 (tipeAss -> varAss .)
    BACO            reduce using rule 79 (tipeAss -> varAss .)
    PENW            reduce using rule 79 (tipeAss -> varAss .)
    F               reduce using rule 79 (tipeAss -> varAss .)
    B               reduce using rule 79 (tipeAss -> varAss .)
    PENP            reduce using rule 79 (tipeAss -> varAss .)
    PENU            reduce using rule 79 (tipeAss -> varAss .)
    PEND            reduce using rule 79 (tipeAss -> varAss .)
    RB              reduce using rule 79 (tipeAss -> varAss .)


state 171

    (81) varAss -> exp . SC

    SC              shift and go to state 207


state 172

    (78) assigment -> EQ tipeAss .

    IF              reduce using rule 78 (assigment -> EQ tipeAss .)
    LA              reduce using rule 78 (assigment -> EQ tipeAss .)
    L               reduce using rule 78 (assigment -> EQ tipeAss .)
    ID              reduce using rule 78 (assigment -> EQ tipeAss .)
    RE              reduce using rule 78 (assigment -> EQ tipeAss .)
    REC             reduce using rule 78 (assigment -> EQ tipeAss .)
    TRI             reduce using rule 78 (assigment -> EQ tipeAss .)
    POL             reduce using rule 78 (assigment -> EQ tipeAss .)
    LS              reduce using rule 78 (assigment -> EQ tipeAss .)
    CIR             reduce using rule 78 (assigment -> EQ tipeAss .)
    SQ              reduce using rule 78 (assigment -> EQ tipeAss .)
    ARC             reduce using rule 78 (assigment -> EQ tipeAss .)
    PENC            reduce using rule 78 (assigment -> EQ tipeAss .)
    SETC            reduce using rule 78 (assigment -> EQ tipeAss .)
    BACO            reduce using rule 78 (assigment -> EQ tipeAss .)
    PENW            reduce using rule 78 (assigment -> EQ tipeAss .)
    F               reduce using rule 78 (assigment -> EQ tipeAss .)
    B               reduce using rule 78 (assigment -> EQ tipeAss .)
    PENP            reduce using rule 78 (assigment -> EQ tipeAss .)
    PENU            reduce using rule 78 (assigment -> EQ tipeAss .)
    PEND            reduce using rule 78 (assigment -> EQ tipeAss .)
    RB              reduce using rule 78 (assigment -> EQ tipeAss .)


state 173

    (102) condition -> IF LP expresion . RP block con2

    RP              shift and go to state 208


state 174

    (50) expresion -> exp . ex2
    (51) ex2 -> . ex3 exp
    (52) ex2 -> . empty
    (53) ex3 -> . LT
    (54) ex3 -> . MT
    (55) ex3 -> . D
    (56) ex3 -> . SEQ
    (126) empty -> .

    LT              shift and go to state 212
    MT              shift and go to state 211
    D               shift and go to state 209
    SEQ             shift and go to state 210
    RP              reduce using rule 126 (empty -> .)

    empty                          shift and go to state 215
    ex2                            shift and go to state 213
    ex3                            shift and go to state 214

state 175

    (44) one_par -> CIR LP exp . p_fill RP SC
    (41) p_fill -> . C FILL
    (42) p_fill -> . empty
    (126) empty -> .

    C               shift and go to state 190
    RP              reduce using rule 126 (empty -> .)

    empty                          shift and go to state 192
    p_fill                         shift and go to state 216

state 176

    (45) one_par -> SQ LP exp . p_fill RP SC
    (41) p_fill -> . C FILL
    (42) p_fill -> . empty
    (126) empty -> .

    C               shift and go to state 190
    RP              reduce using rule 126 (empty -> .)

    empty                          shift and go to state 192
    p_fill                         shift and go to state 217

state 177

    (49) p_arc -> ARC LP exp . RP SC

    RP              shift and go to state 218


state 178

    (11) fun4 -> C fun5 fun4 .

    RP              reduce using rule 11 (fun4 -> C fun5 fun4 .)


state 179

    (89) prelistAss -> EQ listAss .

    L               reduce using rule 89 (prelistAss -> EQ listAss .)
    FUN             reduce using rule 89 (prelistAss -> EQ listAss .)
    MAIN            reduce using rule 89 (prelistAss -> EQ listAss .)
    LB              reduce using rule 89 (prelistAss -> EQ listAss .)
    IF              reduce using rule 89 (prelistAss -> EQ listAss .)
    LA              reduce using rule 89 (prelistAss -> EQ listAss .)
    ID              reduce using rule 89 (prelistAss -> EQ listAss .)
    RE              reduce using rule 89 (prelistAss -> EQ listAss .)
    REC             reduce using rule 89 (prelistAss -> EQ listAss .)
    TRI             reduce using rule 89 (prelistAss -> EQ listAss .)
    POL             reduce using rule 89 (prelistAss -> EQ listAss .)
    LS              reduce using rule 89 (prelistAss -> EQ listAss .)
    CIR             reduce using rule 89 (prelistAss -> EQ listAss .)
    SQ              reduce using rule 89 (prelistAss -> EQ listAss .)
    ARC             reduce using rule 89 (prelistAss -> EQ listAss .)
    PENC            reduce using rule 89 (prelistAss -> EQ listAss .)
    SETC            reduce using rule 89 (prelistAss -> EQ listAss .)
    BACO            reduce using rule 89 (prelistAss -> EQ listAss .)
    PENW            reduce using rule 89 (prelistAss -> EQ listAss .)
    F               reduce using rule 89 (prelistAss -> EQ listAss .)
    B               reduce using rule 89 (prelistAss -> EQ listAss .)
    PENP            reduce using rule 89 (prelistAss -> EQ listAss .)
    PENU            reduce using rule 89 (prelistAss -> EQ listAss .)
    PEND            reduce using rule 89 (prelistAss -> EQ listAss .)
    RB              reduce using rule 89 (prelistAss -> EQ listAss .)


state 180

    (19) var33 -> C ID var4 . var33
    (19) var33 -> . C ID var4 var33
    (20) var33 -> . empty
    (126) empty -> .

    C               shift and go to state 95
    SC              reduce using rule 126 (empty -> .)

    var33                          shift and go to state 219
    empty                          shift and go to state 96

state 181

    (58) exp2 -> exp3 exp .

    C               reduce using rule 58 (exp2 -> exp3 exp .)
    SC              reduce using rule 58 (exp2 -> exp3 exp .)
    LB              reduce using rule 58 (exp2 -> exp3 exp .)
    RP              reduce using rule 58 (exp2 -> exp3 exp .)
    ADD             reduce using rule 58 (exp2 -> exp3 exp .)
    LT              reduce using rule 58 (exp2 -> exp3 exp .)
    MT              reduce using rule 58 (exp2 -> exp3 exp .)
    D               reduce using rule 58 (exp2 -> exp3 exp .)
    SEQ             reduce using rule 58 (exp2 -> exp3 exp .)


state 182

    (67) fact -> fact2 exp RP .

    M               reduce using rule 67 (fact -> fact2 exp RP .)
    DIV             reduce using rule 67 (fact -> fact2 exp RP .)
    ADD             reduce using rule 67 (fact -> fact2 exp RP .)
    SUB             reduce using rule 67 (fact -> fact2 exp RP .)
    C               reduce using rule 67 (fact -> fact2 exp RP .)
    SC              reduce using rule 67 (fact -> fact2 exp RP .)
    RP              reduce using rule 67 (fact -> fact2 exp RP .)
    LB              reduce using rule 67 (fact -> fact2 exp RP .)
    LT              reduce using rule 67 (fact -> fact2 exp RP .)
    MT              reduce using rule 67 (fact -> fact2 exp RP .)
    D               reduce using rule 67 (fact -> fact2 exp RP .)
    SEQ             reduce using rule 67 (fact -> fact2 exp RP .)


state 183

    (63) term2 -> term3 term .

    ADD             reduce using rule 63 (term2 -> term3 term .)
    SUB             reduce using rule 63 (term2 -> term3 term .)
    C               reduce using rule 63 (term2 -> term3 term .)
    SC              reduce using rule 63 (term2 -> term3 term .)
    LB              reduce using rule 63 (term2 -> term3 term .)
    RP              reduce using rule 63 (term2 -> term3 term .)
    LT              reduce using rule 63 (term2 -> term3 term .)
    MT              reduce using rule 63 (term2 -> term3 term .)
    D               reduce using rule 63 (term2 -> term3 term .)
    SEQ             reduce using rule 63 (term2 -> term3 term .)


state 184

    (29) position -> PENP LP exp C . exp RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    term                           shift and go to state 97
    valExp                         shift and go to state 98
    exp                            shift and go to state 220
    fact2                          shift and go to state 103
    fact                           shift and go to state 105
    fact4                          shift and go to state 106

state 185

    (40) rect -> REC LP exp C . exp p_fill RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    term                           shift and go to state 97
    valExp                         shift and go to state 98
    exp                            shift and go to state 221
    fact2                          shift and go to state 103
    fact4                          shift and go to state 106
    fact                           shift and go to state 105

state 186

    (34) p_width -> PENW LP exp RP . SC

    SC              shift and go to state 222


state 187

    (97) lab -> LA LP stExp lab2 . RP SC

    RP              shift and go to state 223


state 188

    (98) lab2 -> ADD . stExp lab2
    (100) stExp -> . STR
    (101) stExp -> . exp
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    STR             shift and go to state 154
    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    term                           shift and go to state 97
    valExp                         shift and go to state 98
    stExp                          shift and go to state 224
    exp                            shift and go to state 156
    fact2                          shift and go to state 103
    fact                           shift and go to state 105
    fact4                          shift and go to state 106

state 189

    (99) lab2 -> empty .

    RP              reduce using rule 99 (lab2 -> empty .)


state 190

    (41) p_fill -> C . FILL

    FILL            shift and go to state 225


state 191

    (46) poly -> POL LP idList p_fill . RP SC

    RP              shift and go to state 226


state 192

    (42) p_fill -> empty .

    RP              reduce using rule 42 (p_fill -> empty .)


state 193

    (33) colors2 -> LP exp C . exp C exp RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    term                           shift and go to state 97
    valExp                         shift and go to state 98
    exp                            shift and go to state 227
    fact2                          shift and go to state 103
    fact                           shift and go to state 105
    fact4                          shift and go to state 106

state 194

    (47) lstrip -> LS LP idList RP . SC

    SC              shift and go to state 228


state 195

    (43) tria -> TRI LP exp C . exp C exp p_fill RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    term                           shift and go to state 97
    valExp                         shift and go to state 98
    exp                            shift and go to state 229
    fact2                          shift and go to state 103
    fact4                          shift and go to state 106
    fact                           shift and go to state 105

state 196

    (39) mueve2 -> LP exp C . A exp RP SC

    A               shift and go to state 230


state 197

    (82) funCall -> LP func2 RP . SC

    SC              shift and go to state 231


state 198

    (87) func4 -> exp func3 .

    RP              reduce using rule 87 (func4 -> exp func3 .)


state 199

    (85) func3 -> C . func4
    (87) func4 -> . exp func3
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    term                           shift and go to state 97
    valExp                         shift and go to state 98
    func4                          shift and go to state 232
    exp                            shift and go to state 165
    fact2                          shift and go to state 103
    fact                           shift and go to state 105
    fact4                          shift and go to state 106

state 200

    (86) func3 -> empty .

    RP              reduce using rule 86 (func3 -> empty .)


state 201

    (27) val -> VALI .

    C               reduce using rule 27 (val -> VALI .)
    RB              reduce using rule 27 (val -> VALI .)


state 202

    (92) lista2 -> val .

    C               reduce using rule 92 (lista2 -> val .)
    RB              reduce using rule 92 (lista2 -> val .)


state 203

    (28) val -> VALF .

    C               reduce using rule 28 (val -> VALF .)
    RB              reduce using rule 28 (val -> VALF .)


state 204

    (93) lista2 -> ID .

    C               reduce using rule 93 (lista2 -> ID .)
    RB              reduce using rule 93 (lista2 -> ID .)


state 205

    (91) listAss -> LB lista3 . RB SC

    RB              shift and go to state 233


state 206

    (94) lista3 -> lista2 . li4
    (95) li4 -> . C lista2 li4
    (96) li4 -> . empty
    (126) empty -> .

    C               shift and go to state 235
    RB              reduce using rule 126 (empty -> .)

    li4                            shift and go to state 234
    empty                          shift and go to state 236

state 207

    (81) varAss -> exp SC .

    IF              reduce using rule 81 (varAss -> exp SC .)
    LA              reduce using rule 81 (varAss -> exp SC .)
    L               reduce using rule 81 (varAss -> exp SC .)
    ID              reduce using rule 81 (varAss -> exp SC .)
    RE              reduce using rule 81 (varAss -> exp SC .)
    REC             reduce using rule 81 (varAss -> exp SC .)
    TRI             reduce using rule 81 (varAss -> exp SC .)
    POL             reduce using rule 81 (varAss -> exp SC .)
    LS              reduce using rule 81 (varAss -> exp SC .)
    CIR             reduce using rule 81 (varAss -> exp SC .)
    SQ              reduce using rule 81 (varAss -> exp SC .)
    ARC             reduce using rule 81 (varAss -> exp SC .)
    PENC            reduce using rule 81 (varAss -> exp SC .)
    SETC            reduce using rule 81 (varAss -> exp SC .)
    BACO            reduce using rule 81 (varAss -> exp SC .)
    PENW            reduce using rule 81 (varAss -> exp SC .)
    F               reduce using rule 81 (varAss -> exp SC .)
    B               reduce using rule 81 (varAss -> exp SC .)
    PENP            reduce using rule 81 (varAss -> exp SC .)
    PENU            reduce using rule 81 (varAss -> exp SC .)
    PEND            reduce using rule 81 (varAss -> exp SC .)
    RB              reduce using rule 81 (varAss -> exp SC .)


state 208

    (102) condition -> IF LP expresion RP . block con2
    (105) block -> . LB block3 RB

    LB              shift and go to state 33

    block                          shift and go to state 237

state 209

    (55) ex3 -> D .

    LP              reduce using rule 55 (ex3 -> D .)
    ID              reduce using rule 55 (ex3 -> D .)
    VALI            reduce using rule 55 (ex3 -> D .)
    VALF            reduce using rule 55 (ex3 -> D .)


state 210

    (56) ex3 -> SEQ .

    LP              reduce using rule 56 (ex3 -> SEQ .)
    ID              reduce using rule 56 (ex3 -> SEQ .)
    VALI            reduce using rule 56 (ex3 -> SEQ .)
    VALF            reduce using rule 56 (ex3 -> SEQ .)


state 211

    (54) ex3 -> MT .

    LP              reduce using rule 54 (ex3 -> MT .)
    ID              reduce using rule 54 (ex3 -> MT .)
    VALI            reduce using rule 54 (ex3 -> MT .)
    VALF            reduce using rule 54 (ex3 -> MT .)


state 212

    (53) ex3 -> LT .

    LP              reduce using rule 53 (ex3 -> LT .)
    ID              reduce using rule 53 (ex3 -> LT .)
    VALI            reduce using rule 53 (ex3 -> LT .)
    VALF            reduce using rule 53 (ex3 -> LT .)


state 213

    (50) expresion -> exp ex2 .

    RP              reduce using rule 50 (expresion -> exp ex2 .)


state 214

    (51) ex2 -> ex3 . exp
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    term                           shift and go to state 97
    valExp                         shift and go to state 98
    exp                            shift and go to state 238
    fact2                          shift and go to state 103
    fact                           shift and go to state 105
    fact4                          shift and go to state 106

state 215

    (52) ex2 -> empty .

    RP              reduce using rule 52 (ex2 -> empty .)


state 216

    (44) one_par -> CIR LP exp p_fill . RP SC

    RP              shift and go to state 239


state 217

    (45) one_par -> SQ LP exp p_fill . RP SC

    RP              shift and go to state 240


state 218

    (49) p_arc -> ARC LP exp RP . SC

    SC              shift and go to state 241


state 219

    (19) var33 -> C ID var4 var33 .

    SC              reduce using rule 19 (var33 -> C ID var4 var33 .)


state 220

    (29) position -> PENP LP exp C exp . RP SC

    RP              shift and go to state 242


state 221

    (40) rect -> REC LP exp C exp . p_fill RP SC
    (41) p_fill -> . C FILL
    (42) p_fill -> . empty
    (126) empty -> .

    C               shift and go to state 190
    RP              reduce using rule 126 (empty -> .)

    empty                          shift and go to state 192
    p_fill                         shift and go to state 243

state 222

    (34) p_width -> PENW LP exp RP SC .

    IF              reduce using rule 34 (p_width -> PENW LP exp RP SC .)
    LA              reduce using rule 34 (p_width -> PENW LP exp RP SC .)
    L               reduce using rule 34 (p_width -> PENW LP exp RP SC .)
    ID              reduce using rule 34 (p_width -> PENW LP exp RP SC .)
    RE              reduce using rule 34 (p_width -> PENW LP exp RP SC .)
    REC             reduce using rule 34 (p_width -> PENW LP exp RP SC .)
    TRI             reduce using rule 34 (p_width -> PENW LP exp RP SC .)
    POL             reduce using rule 34 (p_width -> PENW LP exp RP SC .)
    LS              reduce using rule 34 (p_width -> PENW LP exp RP SC .)
    CIR             reduce using rule 34 (p_width -> PENW LP exp RP SC .)
    SQ              reduce using rule 34 (p_width -> PENW LP exp RP SC .)
    ARC             reduce using rule 34 (p_width -> PENW LP exp RP SC .)
    PENC            reduce using rule 34 (p_width -> PENW LP exp RP SC .)
    SETC            reduce using rule 34 (p_width -> PENW LP exp RP SC .)
    BACO            reduce using rule 34 (p_width -> PENW LP exp RP SC .)
    PENW            reduce using rule 34 (p_width -> PENW LP exp RP SC .)
    F               reduce using rule 34 (p_width -> PENW LP exp RP SC .)
    B               reduce using rule 34 (p_width -> PENW LP exp RP SC .)
    PENP            reduce using rule 34 (p_width -> PENW LP exp RP SC .)
    PENU            reduce using rule 34 (p_width -> PENW LP exp RP SC .)
    PEND            reduce using rule 34 (p_width -> PENW LP exp RP SC .)
    RB              reduce using rule 34 (p_width -> PENW LP exp RP SC .)


state 223

    (97) lab -> LA LP stExp lab2 RP . SC

    SC              shift and go to state 244


state 224

    (98) lab2 -> ADD stExp . lab2
    (98) lab2 -> . ADD stExp lab2
    (99) lab2 -> . empty
    (126) empty -> .

    ADD             shift and go to state 188
    RP              reduce using rule 126 (empty -> .)

    lab2                           shift and go to state 245
    empty                          shift and go to state 189

state 225

    (41) p_fill -> C FILL .

    RP              reduce using rule 41 (p_fill -> C FILL .)


state 226

    (46) poly -> POL LP idList p_fill RP . SC

    SC              shift and go to state 246


state 227

    (33) colors2 -> LP exp C exp . C exp RP SC

    C               shift and go to state 247


state 228

    (47) lstrip -> LS LP idList RP SC .

    IF              reduce using rule 47 (lstrip -> LS LP idList RP SC .)
    LA              reduce using rule 47 (lstrip -> LS LP idList RP SC .)
    L               reduce using rule 47 (lstrip -> LS LP idList RP SC .)
    ID              reduce using rule 47 (lstrip -> LS LP idList RP SC .)
    RE              reduce using rule 47 (lstrip -> LS LP idList RP SC .)
    REC             reduce using rule 47 (lstrip -> LS LP idList RP SC .)
    TRI             reduce using rule 47 (lstrip -> LS LP idList RP SC .)
    POL             reduce using rule 47 (lstrip -> LS LP idList RP SC .)
    LS              reduce using rule 47 (lstrip -> LS LP idList RP SC .)
    CIR             reduce using rule 47 (lstrip -> LS LP idList RP SC .)
    SQ              reduce using rule 47 (lstrip -> LS LP idList RP SC .)
    ARC             reduce using rule 47 (lstrip -> LS LP idList RP SC .)
    PENC            reduce using rule 47 (lstrip -> LS LP idList RP SC .)
    SETC            reduce using rule 47 (lstrip -> LS LP idList RP SC .)
    BACO            reduce using rule 47 (lstrip -> LS LP idList RP SC .)
    PENW            reduce using rule 47 (lstrip -> LS LP idList RP SC .)
    F               reduce using rule 47 (lstrip -> LS LP idList RP SC .)
    B               reduce using rule 47 (lstrip -> LS LP idList RP SC .)
    PENP            reduce using rule 47 (lstrip -> LS LP idList RP SC .)
    PENU            reduce using rule 47 (lstrip -> LS LP idList RP SC .)
    PEND            reduce using rule 47 (lstrip -> LS LP idList RP SC .)
    RB              reduce using rule 47 (lstrip -> LS LP idList RP SC .)


state 229

    (43) tria -> TRI LP exp C exp . C exp p_fill RP SC

    C               shift and go to state 248


state 230

    (39) mueve2 -> LP exp C A . exp RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    term                           shift and go to state 97
    valExp                         shift and go to state 98
    exp                            shift and go to state 249
    fact2                          shift and go to state 103
    fact                           shift and go to state 105
    fact4                          shift and go to state 106

state 231

    (82) funCall -> LP func2 RP SC .

    IF              reduce using rule 82 (funCall -> LP func2 RP SC .)
    LA              reduce using rule 82 (funCall -> LP func2 RP SC .)
    L               reduce using rule 82 (funCall -> LP func2 RP SC .)
    ID              reduce using rule 82 (funCall -> LP func2 RP SC .)
    RE              reduce using rule 82 (funCall -> LP func2 RP SC .)
    REC             reduce using rule 82 (funCall -> LP func2 RP SC .)
    TRI             reduce using rule 82 (funCall -> LP func2 RP SC .)
    POL             reduce using rule 82 (funCall -> LP func2 RP SC .)
    LS              reduce using rule 82 (funCall -> LP func2 RP SC .)
    CIR             reduce using rule 82 (funCall -> LP func2 RP SC .)
    SQ              reduce using rule 82 (funCall -> LP func2 RP SC .)
    ARC             reduce using rule 82 (funCall -> LP func2 RP SC .)
    PENC            reduce using rule 82 (funCall -> LP func2 RP SC .)
    SETC            reduce using rule 82 (funCall -> LP func2 RP SC .)
    BACO            reduce using rule 82 (funCall -> LP func2 RP SC .)
    PENW            reduce using rule 82 (funCall -> LP func2 RP SC .)
    F               reduce using rule 82 (funCall -> LP func2 RP SC .)
    B               reduce using rule 82 (funCall -> LP func2 RP SC .)
    PENP            reduce using rule 82 (funCall -> LP func2 RP SC .)
    PENU            reduce using rule 82 (funCall -> LP func2 RP SC .)
    PEND            reduce using rule 82 (funCall -> LP func2 RP SC .)
    RB              reduce using rule 82 (funCall -> LP func2 RP SC .)


state 232

    (85) func3 -> C func4 .

    RP              reduce using rule 85 (func3 -> C func4 .)


state 233

    (91) listAss -> LB lista3 RB . SC

    SC              shift and go to state 250


state 234

    (94) lista3 -> lista2 li4 .

    RB              reduce using rule 94 (lista3 -> lista2 li4 .)


state 235

    (95) li4 -> C . lista2 li4
    (92) lista2 -> . val
    (93) lista2 -> . ID
    (27) val -> . VALI
    (28) val -> . VALF

    ID              shift and go to state 204
    VALI            shift and go to state 201
    VALF            shift and go to state 203

    val                            shift and go to state 202
    lista2                         shift and go to state 251

state 236

    (96) li4 -> empty .

    RB              reduce using rule 96 (li4 -> empty .)


state 237

    (102) condition -> IF LP expresion RP block . con2
    (103) con2 -> . empty
    (104) con2 -> . ELSE block
    (126) empty -> .

    ELSE            shift and go to state 253
    IF              reduce using rule 126 (empty -> .)
    LA              reduce using rule 126 (empty -> .)
    L               reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    RE              reduce using rule 126 (empty -> .)
    REC             reduce using rule 126 (empty -> .)
    TRI             reduce using rule 126 (empty -> .)
    POL             reduce using rule 126 (empty -> .)
    LS              reduce using rule 126 (empty -> .)
    CIR             reduce using rule 126 (empty -> .)
    SQ              reduce using rule 126 (empty -> .)
    ARC             reduce using rule 126 (empty -> .)
    PENC            reduce using rule 126 (empty -> .)
    SETC            reduce using rule 126 (empty -> .)
    BACO            reduce using rule 126 (empty -> .)
    PENW            reduce using rule 126 (empty -> .)
    F               reduce using rule 126 (empty -> .)
    B               reduce using rule 126 (empty -> .)
    PENP            reduce using rule 126 (empty -> .)
    PENU            reduce using rule 126 (empty -> .)
    PEND            reduce using rule 126 (empty -> .)
    RB              reduce using rule 126 (empty -> .)

    con2                           shift and go to state 252
    empty                          shift and go to state 254

state 238

    (51) ex2 -> ex3 exp .

    RP              reduce using rule 51 (ex2 -> ex3 exp .)


state 239

    (44) one_par -> CIR LP exp p_fill RP . SC

    SC              shift and go to state 255


state 240

    (45) one_par -> SQ LP exp p_fill RP . SC

    SC              shift and go to state 256


state 241

    (49) p_arc -> ARC LP exp RP SC .

    IF              reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    LA              reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    L               reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    ID              reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    RE              reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    REC             reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    TRI             reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    POL             reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    LS              reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    CIR             reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    SQ              reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    ARC             reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    PENC            reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    SETC            reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    BACO            reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    PENW            reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    F               reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    B               reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    PENP            reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    PENU            reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    PEND            reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    RB              reduce using rule 49 (p_arc -> ARC LP exp RP SC .)


state 242

    (29) position -> PENP LP exp C exp RP . SC

    SC              shift and go to state 257


state 243

    (40) rect -> REC LP exp C exp p_fill . RP SC

    RP              shift and go to state 258


state 244

    (97) lab -> LA LP stExp lab2 RP SC .

    IF              reduce using rule 97 (lab -> LA LP stExp lab2 RP SC .)
    LA              reduce using rule 97 (lab -> LA LP stExp lab2 RP SC .)
    L               reduce using rule 97 (lab -> LA LP stExp lab2 RP SC .)
    ID              reduce using rule 97 (lab -> LA LP stExp lab2 RP SC .)
    RE              reduce using rule 97 (lab -> LA LP stExp lab2 RP SC .)
    REC             reduce using rule 97 (lab -> LA LP stExp lab2 RP SC .)
    TRI             reduce using rule 97 (lab -> LA LP stExp lab2 RP SC .)
    POL             reduce using rule 97 (lab -> LA LP stExp lab2 RP SC .)
    LS              reduce using rule 97 (lab -> LA LP stExp lab2 RP SC .)
    CIR             reduce using rule 97 (lab -> LA LP stExp lab2 RP SC .)
    SQ              reduce using rule 97 (lab -> LA LP stExp lab2 RP SC .)
    ARC             reduce using rule 97 (lab -> LA LP stExp lab2 RP SC .)
    PENC            reduce using rule 97 (lab -> LA LP stExp lab2 RP SC .)
    SETC            reduce using rule 97 (lab -> LA LP stExp lab2 RP SC .)
    BACO            reduce using rule 97 (lab -> LA LP stExp lab2 RP SC .)
    PENW            reduce using rule 97 (lab -> LA LP stExp lab2 RP SC .)
    F               reduce using rule 97 (lab -> LA LP stExp lab2 RP SC .)
    B               reduce using rule 97 (lab -> LA LP stExp lab2 RP SC .)
    PENP            reduce using rule 97 (lab -> LA LP stExp lab2 RP SC .)
    PENU            reduce using rule 97 (lab -> LA LP stExp lab2 RP SC .)
    PEND            reduce using rule 97 (lab -> LA LP stExp lab2 RP SC .)
    RB              reduce using rule 97 (lab -> LA LP stExp lab2 RP SC .)


state 245

    (98) lab2 -> ADD stExp lab2 .

    RP              reduce using rule 98 (lab2 -> ADD stExp lab2 .)


state 246

    (46) poly -> POL LP idList p_fill RP SC .

    IF              reduce using rule 46 (poly -> POL LP idList p_fill RP SC .)
    LA              reduce using rule 46 (poly -> POL LP idList p_fill RP SC .)
    L               reduce using rule 46 (poly -> POL LP idList p_fill RP SC .)
    ID              reduce using rule 46 (poly -> POL LP idList p_fill RP SC .)
    RE              reduce using rule 46 (poly -> POL LP idList p_fill RP SC .)
    REC             reduce using rule 46 (poly -> POL LP idList p_fill RP SC .)
    TRI             reduce using rule 46 (poly -> POL LP idList p_fill RP SC .)
    POL             reduce using rule 46 (poly -> POL LP idList p_fill RP SC .)
    LS              reduce using rule 46 (poly -> POL LP idList p_fill RP SC .)
    CIR             reduce using rule 46 (poly -> POL LP idList p_fill RP SC .)
    SQ              reduce using rule 46 (poly -> POL LP idList p_fill RP SC .)
    ARC             reduce using rule 46 (poly -> POL LP idList p_fill RP SC .)
    PENC            reduce using rule 46 (poly -> POL LP idList p_fill RP SC .)
    SETC            reduce using rule 46 (poly -> POL LP idList p_fill RP SC .)
    BACO            reduce using rule 46 (poly -> POL LP idList p_fill RP SC .)
    PENW            reduce using rule 46 (poly -> POL LP idList p_fill RP SC .)
    F               reduce using rule 46 (poly -> POL LP idList p_fill RP SC .)
    B               reduce using rule 46 (poly -> POL LP idList p_fill RP SC .)
    PENP            reduce using rule 46 (poly -> POL LP idList p_fill RP SC .)
    PENU            reduce using rule 46 (poly -> POL LP idList p_fill RP SC .)
    PEND            reduce using rule 46 (poly -> POL LP idList p_fill RP SC .)
    RB              reduce using rule 46 (poly -> POL LP idList p_fill RP SC .)


state 247

    (33) colors2 -> LP exp C exp C . exp RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    term                           shift and go to state 97
    valExp                         shift and go to state 98
    exp                            shift and go to state 259
    fact2                          shift and go to state 103
    fact                           shift and go to state 105
    fact4                          shift and go to state 106

state 248

    (43) tria -> TRI LP exp C exp C . exp p_fill RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 99
    ID              shift and go to state 104
    VALI            shift and go to state 100
    VALF            shift and go to state 101

    term                           shift and go to state 97
    valExp                         shift and go to state 98
    exp                            shift and go to state 260
    fact2                          shift and go to state 103
    fact4                          shift and go to state 106
    fact                           shift and go to state 105

state 249

    (39) mueve2 -> LP exp C A exp . RP SC

    RP              shift and go to state 261


state 250

    (91) listAss -> LB lista3 RB SC .

    L               reduce using rule 91 (listAss -> LB lista3 RB SC .)
    FUN             reduce using rule 91 (listAss -> LB lista3 RB SC .)
    MAIN            reduce using rule 91 (listAss -> LB lista3 RB SC .)
    LB              reduce using rule 91 (listAss -> LB lista3 RB SC .)
    IF              reduce using rule 91 (listAss -> LB lista3 RB SC .)
    LA              reduce using rule 91 (listAss -> LB lista3 RB SC .)
    ID              reduce using rule 91 (listAss -> LB lista3 RB SC .)
    RE              reduce using rule 91 (listAss -> LB lista3 RB SC .)
    REC             reduce using rule 91 (listAss -> LB lista3 RB SC .)
    TRI             reduce using rule 91 (listAss -> LB lista3 RB SC .)
    POL             reduce using rule 91 (listAss -> LB lista3 RB SC .)
    LS              reduce using rule 91 (listAss -> LB lista3 RB SC .)
    CIR             reduce using rule 91 (listAss -> LB lista3 RB SC .)
    SQ              reduce using rule 91 (listAss -> LB lista3 RB SC .)
    ARC             reduce using rule 91 (listAss -> LB lista3 RB SC .)
    PENC            reduce using rule 91 (listAss -> LB lista3 RB SC .)
    SETC            reduce using rule 91 (listAss -> LB lista3 RB SC .)
    BACO            reduce using rule 91 (listAss -> LB lista3 RB SC .)
    PENW            reduce using rule 91 (listAss -> LB lista3 RB SC .)
    F               reduce using rule 91 (listAss -> LB lista3 RB SC .)
    B               reduce using rule 91 (listAss -> LB lista3 RB SC .)
    PENP            reduce using rule 91 (listAss -> LB lista3 RB SC .)
    PENU            reduce using rule 91 (listAss -> LB lista3 RB SC .)
    PEND            reduce using rule 91 (listAss -> LB lista3 RB SC .)
    RB              reduce using rule 91 (listAss -> LB lista3 RB SC .)


state 251

    (95) li4 -> C lista2 . li4
    (95) li4 -> . C lista2 li4
    (96) li4 -> . empty
    (126) empty -> .

    C               shift and go to state 235
    RB              reduce using rule 126 (empty -> .)

    li4                            shift and go to state 262
    empty                          shift and go to state 236

state 252

    (102) condition -> IF LP expresion RP block con2 .

    IF              reduce using rule 102 (condition -> IF LP expresion RP block con2 .)
    LA              reduce using rule 102 (condition -> IF LP expresion RP block con2 .)
    L               reduce using rule 102 (condition -> IF LP expresion RP block con2 .)
    ID              reduce using rule 102 (condition -> IF LP expresion RP block con2 .)
    RE              reduce using rule 102 (condition -> IF LP expresion RP block con2 .)
    REC             reduce using rule 102 (condition -> IF LP expresion RP block con2 .)
    TRI             reduce using rule 102 (condition -> IF LP expresion RP block con2 .)
    POL             reduce using rule 102 (condition -> IF LP expresion RP block con2 .)
    LS              reduce using rule 102 (condition -> IF LP expresion RP block con2 .)
    CIR             reduce using rule 102 (condition -> IF LP expresion RP block con2 .)
    SQ              reduce using rule 102 (condition -> IF LP expresion RP block con2 .)
    ARC             reduce using rule 102 (condition -> IF LP expresion RP block con2 .)
    PENC            reduce using rule 102 (condition -> IF LP expresion RP block con2 .)
    SETC            reduce using rule 102 (condition -> IF LP expresion RP block con2 .)
    BACO            reduce using rule 102 (condition -> IF LP expresion RP block con2 .)
    PENW            reduce using rule 102 (condition -> IF LP expresion RP block con2 .)
    F               reduce using rule 102 (condition -> IF LP expresion RP block con2 .)
    B               reduce using rule 102 (condition -> IF LP expresion RP block con2 .)
    PENP            reduce using rule 102 (condition -> IF LP expresion RP block con2 .)
    PENU            reduce using rule 102 (condition -> IF LP expresion RP block con2 .)
    PEND            reduce using rule 102 (condition -> IF LP expresion RP block con2 .)
    RB              reduce using rule 102 (condition -> IF LP expresion RP block con2 .)


state 253

    (104) con2 -> ELSE . block
    (105) block -> . LB block3 RB

    LB              shift and go to state 33

    block                          shift and go to state 263

state 254

    (103) con2 -> empty .

    IF              reduce using rule 103 (con2 -> empty .)
    LA              reduce using rule 103 (con2 -> empty .)
    L               reduce using rule 103 (con2 -> empty .)
    ID              reduce using rule 103 (con2 -> empty .)
    RE              reduce using rule 103 (con2 -> empty .)
    REC             reduce using rule 103 (con2 -> empty .)
    TRI             reduce using rule 103 (con2 -> empty .)
    POL             reduce using rule 103 (con2 -> empty .)
    LS              reduce using rule 103 (con2 -> empty .)
    CIR             reduce using rule 103 (con2 -> empty .)
    SQ              reduce using rule 103 (con2 -> empty .)
    ARC             reduce using rule 103 (con2 -> empty .)
    PENC            reduce using rule 103 (con2 -> empty .)
    SETC            reduce using rule 103 (con2 -> empty .)
    BACO            reduce using rule 103 (con2 -> empty .)
    PENW            reduce using rule 103 (con2 -> empty .)
    F               reduce using rule 103 (con2 -> empty .)
    B               reduce using rule 103 (con2 -> empty .)
    PENP            reduce using rule 103 (con2 -> empty .)
    PENU            reduce using rule 103 (con2 -> empty .)
    PEND            reduce using rule 103 (con2 -> empty .)
    RB              reduce using rule 103 (con2 -> empty .)


state 255

    (44) one_par -> CIR LP exp p_fill RP SC .

    IF              reduce using rule 44 (one_par -> CIR LP exp p_fill RP SC .)
    LA              reduce using rule 44 (one_par -> CIR LP exp p_fill RP SC .)
    L               reduce using rule 44 (one_par -> CIR LP exp p_fill RP SC .)
    ID              reduce using rule 44 (one_par -> CIR LP exp p_fill RP SC .)
    RE              reduce using rule 44 (one_par -> CIR LP exp p_fill RP SC .)
    REC             reduce using rule 44 (one_par -> CIR LP exp p_fill RP SC .)
    TRI             reduce using rule 44 (one_par -> CIR LP exp p_fill RP SC .)
    POL             reduce using rule 44 (one_par -> CIR LP exp p_fill RP SC .)
    LS              reduce using rule 44 (one_par -> CIR LP exp p_fill RP SC .)
    CIR             reduce using rule 44 (one_par -> CIR LP exp p_fill RP SC .)
    SQ              reduce using rule 44 (one_par -> CIR LP exp p_fill RP SC .)
    ARC             reduce using rule 44 (one_par -> CIR LP exp p_fill RP SC .)
    PENC            reduce using rule 44 (one_par -> CIR LP exp p_fill RP SC .)
    SETC            reduce using rule 44 (one_par -> CIR LP exp p_fill RP SC .)
    BACO            reduce using rule 44 (one_par -> CIR LP exp p_fill RP SC .)
    PENW            reduce using rule 44 (one_par -> CIR LP exp p_fill RP SC .)
    F               reduce using rule 44 (one_par -> CIR LP exp p_fill RP SC .)
    B               reduce using rule 44 (one_par -> CIR LP exp p_fill RP SC .)
    PENP            reduce using rule 44 (one_par -> CIR LP exp p_fill RP SC .)
    PENU            reduce using rule 44 (one_par -> CIR LP exp p_fill RP SC .)
    PEND            reduce using rule 44 (one_par -> CIR LP exp p_fill RP SC .)
    RB              reduce using rule 44 (one_par -> CIR LP exp p_fill RP SC .)


state 256

    (45) one_par -> SQ LP exp p_fill RP SC .

    IF              reduce using rule 45 (one_par -> SQ LP exp p_fill RP SC .)
    LA              reduce using rule 45 (one_par -> SQ LP exp p_fill RP SC .)
    L               reduce using rule 45 (one_par -> SQ LP exp p_fill RP SC .)
    ID              reduce using rule 45 (one_par -> SQ LP exp p_fill RP SC .)
    RE              reduce using rule 45 (one_par -> SQ LP exp p_fill RP SC .)
    REC             reduce using rule 45 (one_par -> SQ LP exp p_fill RP SC .)
    TRI             reduce using rule 45 (one_par -> SQ LP exp p_fill RP SC .)
    POL             reduce using rule 45 (one_par -> SQ LP exp p_fill RP SC .)
    LS              reduce using rule 45 (one_par -> SQ LP exp p_fill RP SC .)
    CIR             reduce using rule 45 (one_par -> SQ LP exp p_fill RP SC .)
    SQ              reduce using rule 45 (one_par -> SQ LP exp p_fill RP SC .)
    ARC             reduce using rule 45 (one_par -> SQ LP exp p_fill RP SC .)
    PENC            reduce using rule 45 (one_par -> SQ LP exp p_fill RP SC .)
    SETC            reduce using rule 45 (one_par -> SQ LP exp p_fill RP SC .)
    BACO            reduce using rule 45 (one_par -> SQ LP exp p_fill RP SC .)
    PENW            reduce using rule 45 (one_par -> SQ LP exp p_fill RP SC .)
    F               reduce using rule 45 (one_par -> SQ LP exp p_fill RP SC .)
    B               reduce using rule 45 (one_par -> SQ LP exp p_fill RP SC .)
    PENP            reduce using rule 45 (one_par -> SQ LP exp p_fill RP SC .)
    PENU            reduce using rule 45 (one_par -> SQ LP exp p_fill RP SC .)
    PEND            reduce using rule 45 (one_par -> SQ LP exp p_fill RP SC .)
    RB              reduce using rule 45 (one_par -> SQ LP exp p_fill RP SC .)


state 257

    (29) position -> PENP LP exp C exp RP SC .

    IF              reduce using rule 29 (position -> PENP LP exp C exp RP SC .)
    LA              reduce using rule 29 (position -> PENP LP exp C exp RP SC .)
    L               reduce using rule 29 (position -> PENP LP exp C exp RP SC .)
    ID              reduce using rule 29 (position -> PENP LP exp C exp RP SC .)
    RE              reduce using rule 29 (position -> PENP LP exp C exp RP SC .)
    REC             reduce using rule 29 (position -> PENP LP exp C exp RP SC .)
    TRI             reduce using rule 29 (position -> PENP LP exp C exp RP SC .)
    POL             reduce using rule 29 (position -> PENP LP exp C exp RP SC .)
    LS              reduce using rule 29 (position -> PENP LP exp C exp RP SC .)
    CIR             reduce using rule 29 (position -> PENP LP exp C exp RP SC .)
    SQ              reduce using rule 29 (position -> PENP LP exp C exp RP SC .)
    ARC             reduce using rule 29 (position -> PENP LP exp C exp RP SC .)
    PENC            reduce using rule 29 (position -> PENP LP exp C exp RP SC .)
    SETC            reduce using rule 29 (position -> PENP LP exp C exp RP SC .)
    BACO            reduce using rule 29 (position -> PENP LP exp C exp RP SC .)
    PENW            reduce using rule 29 (position -> PENP LP exp C exp RP SC .)
    F               reduce using rule 29 (position -> PENP LP exp C exp RP SC .)
    B               reduce using rule 29 (position -> PENP LP exp C exp RP SC .)
    PENP            reduce using rule 29 (position -> PENP LP exp C exp RP SC .)
    PENU            reduce using rule 29 (position -> PENP LP exp C exp RP SC .)
    PEND            reduce using rule 29 (position -> PENP LP exp C exp RP SC .)
    RB              reduce using rule 29 (position -> PENP LP exp C exp RP SC .)


state 258

    (40) rect -> REC LP exp C exp p_fill RP . SC

    SC              shift and go to state 264


state 259

    (33) colors2 -> LP exp C exp C exp . RP SC

    RP              shift and go to state 265


state 260

    (43) tria -> TRI LP exp C exp C exp . p_fill RP SC
    (41) p_fill -> . C FILL
    (42) p_fill -> . empty
    (126) empty -> .

    C               shift and go to state 190
    RP              reduce using rule 126 (empty -> .)

    empty                          shift and go to state 192
    p_fill                         shift and go to state 266

state 261

    (39) mueve2 -> LP exp C A exp RP . SC

    SC              shift and go to state 267


state 262

    (95) li4 -> C lista2 li4 .

    RB              reduce using rule 95 (li4 -> C lista2 li4 .)


state 263

    (104) con2 -> ELSE block .

    IF              reduce using rule 104 (con2 -> ELSE block .)
    LA              reduce using rule 104 (con2 -> ELSE block .)
    L               reduce using rule 104 (con2 -> ELSE block .)
    ID              reduce using rule 104 (con2 -> ELSE block .)
    RE              reduce using rule 104 (con2 -> ELSE block .)
    REC             reduce using rule 104 (con2 -> ELSE block .)
    TRI             reduce using rule 104 (con2 -> ELSE block .)
    POL             reduce using rule 104 (con2 -> ELSE block .)
    LS              reduce using rule 104 (con2 -> ELSE block .)
    CIR             reduce using rule 104 (con2 -> ELSE block .)
    SQ              reduce using rule 104 (con2 -> ELSE block .)
    ARC             reduce using rule 104 (con2 -> ELSE block .)
    PENC            reduce using rule 104 (con2 -> ELSE block .)
    SETC            reduce using rule 104 (con2 -> ELSE block .)
    BACO            reduce using rule 104 (con2 -> ELSE block .)
    PENW            reduce using rule 104 (con2 -> ELSE block .)
    F               reduce using rule 104 (con2 -> ELSE block .)
    B               reduce using rule 104 (con2 -> ELSE block .)
    PENP            reduce using rule 104 (con2 -> ELSE block .)
    PENU            reduce using rule 104 (con2 -> ELSE block .)
    PEND            reduce using rule 104 (con2 -> ELSE block .)
    RB              reduce using rule 104 (con2 -> ELSE block .)


state 264

    (40) rect -> REC LP exp C exp p_fill RP SC .

    IF              reduce using rule 40 (rect -> REC LP exp C exp p_fill RP SC .)
    LA              reduce using rule 40 (rect -> REC LP exp C exp p_fill RP SC .)
    L               reduce using rule 40 (rect -> REC LP exp C exp p_fill RP SC .)
    ID              reduce using rule 40 (rect -> REC LP exp C exp p_fill RP SC .)
    RE              reduce using rule 40 (rect -> REC LP exp C exp p_fill RP SC .)
    REC             reduce using rule 40 (rect -> REC LP exp C exp p_fill RP SC .)
    TRI             reduce using rule 40 (rect -> REC LP exp C exp p_fill RP SC .)
    POL             reduce using rule 40 (rect -> REC LP exp C exp p_fill RP SC .)
    LS              reduce using rule 40 (rect -> REC LP exp C exp p_fill RP SC .)
    CIR             reduce using rule 40 (rect -> REC LP exp C exp p_fill RP SC .)
    SQ              reduce using rule 40 (rect -> REC LP exp C exp p_fill RP SC .)
    ARC             reduce using rule 40 (rect -> REC LP exp C exp p_fill RP SC .)
    PENC            reduce using rule 40 (rect -> REC LP exp C exp p_fill RP SC .)
    SETC            reduce using rule 40 (rect -> REC LP exp C exp p_fill RP SC .)
    BACO            reduce using rule 40 (rect -> REC LP exp C exp p_fill RP SC .)
    PENW            reduce using rule 40 (rect -> REC LP exp C exp p_fill RP SC .)
    F               reduce using rule 40 (rect -> REC LP exp C exp p_fill RP SC .)
    B               reduce using rule 40 (rect -> REC LP exp C exp p_fill RP SC .)
    PENP            reduce using rule 40 (rect -> REC LP exp C exp p_fill RP SC .)
    PENU            reduce using rule 40 (rect -> REC LP exp C exp p_fill RP SC .)
    PEND            reduce using rule 40 (rect -> REC LP exp C exp p_fill RP SC .)
    RB              reduce using rule 40 (rect -> REC LP exp C exp p_fill RP SC .)


state 265

    (33) colors2 -> LP exp C exp C exp RP . SC

    SC              shift and go to state 268


state 266

    (43) tria -> TRI LP exp C exp C exp p_fill . RP SC

    RP              shift and go to state 269


state 267

    (39) mueve2 -> LP exp C A exp RP SC .

    IF              reduce using rule 39 (mueve2 -> LP exp C A exp RP SC .)
    LA              reduce using rule 39 (mueve2 -> LP exp C A exp RP SC .)
    L               reduce using rule 39 (mueve2 -> LP exp C A exp RP SC .)
    ID              reduce using rule 39 (mueve2 -> LP exp C A exp RP SC .)
    RE              reduce using rule 39 (mueve2 -> LP exp C A exp RP SC .)
    REC             reduce using rule 39 (mueve2 -> LP exp C A exp RP SC .)
    TRI             reduce using rule 39 (mueve2 -> LP exp C A exp RP SC .)
    POL             reduce using rule 39 (mueve2 -> LP exp C A exp RP SC .)
    LS              reduce using rule 39 (mueve2 -> LP exp C A exp RP SC .)
    CIR             reduce using rule 39 (mueve2 -> LP exp C A exp RP SC .)
    SQ              reduce using rule 39 (mueve2 -> LP exp C A exp RP SC .)
    ARC             reduce using rule 39 (mueve2 -> LP exp C A exp RP SC .)
    PENC            reduce using rule 39 (mueve2 -> LP exp C A exp RP SC .)
    SETC            reduce using rule 39 (mueve2 -> LP exp C A exp RP SC .)
    BACO            reduce using rule 39 (mueve2 -> LP exp C A exp RP SC .)
    PENW            reduce using rule 39 (mueve2 -> LP exp C A exp RP SC .)
    F               reduce using rule 39 (mueve2 -> LP exp C A exp RP SC .)
    B               reduce using rule 39 (mueve2 -> LP exp C A exp RP SC .)
    PENP            reduce using rule 39 (mueve2 -> LP exp C A exp RP SC .)
    PENU            reduce using rule 39 (mueve2 -> LP exp C A exp RP SC .)
    PEND            reduce using rule 39 (mueve2 -> LP exp C A exp RP SC .)
    RB              reduce using rule 39 (mueve2 -> LP exp C A exp RP SC .)


state 268

    (33) colors2 -> LP exp C exp C exp RP SC .

    IF              reduce using rule 33 (colors2 -> LP exp C exp C exp RP SC .)
    LA              reduce using rule 33 (colors2 -> LP exp C exp C exp RP SC .)
    L               reduce using rule 33 (colors2 -> LP exp C exp C exp RP SC .)
    ID              reduce using rule 33 (colors2 -> LP exp C exp C exp RP SC .)
    RE              reduce using rule 33 (colors2 -> LP exp C exp C exp RP SC .)
    REC             reduce using rule 33 (colors2 -> LP exp C exp C exp RP SC .)
    TRI             reduce using rule 33 (colors2 -> LP exp C exp C exp RP SC .)
    POL             reduce using rule 33 (colors2 -> LP exp C exp C exp RP SC .)
    LS              reduce using rule 33 (colors2 -> LP exp C exp C exp RP SC .)
    CIR             reduce using rule 33 (colors2 -> LP exp C exp C exp RP SC .)
    SQ              reduce using rule 33 (colors2 -> LP exp C exp C exp RP SC .)
    ARC             reduce using rule 33 (colors2 -> LP exp C exp C exp RP SC .)
    PENC            reduce using rule 33 (colors2 -> LP exp C exp C exp RP SC .)
    SETC            reduce using rule 33 (colors2 -> LP exp C exp C exp RP SC .)
    BACO            reduce using rule 33 (colors2 -> LP exp C exp C exp RP SC .)
    PENW            reduce using rule 33 (colors2 -> LP exp C exp C exp RP SC .)
    F               reduce using rule 33 (colors2 -> LP exp C exp C exp RP SC .)
    B               reduce using rule 33 (colors2 -> LP exp C exp C exp RP SC .)
    PENP            reduce using rule 33 (colors2 -> LP exp C exp C exp RP SC .)
    PENU            reduce using rule 33 (colors2 -> LP exp C exp C exp RP SC .)
    PEND            reduce using rule 33 (colors2 -> LP exp C exp C exp RP SC .)
    RB              reduce using rule 33 (colors2 -> LP exp C exp C exp RP SC .)


state 269

    (43) tria -> TRI LP exp C exp C exp p_fill RP . SC

    SC              shift and go to state 270


state 270

    (43) tria -> TRI LP exp C exp C exp p_fill RP SC .

    IF              reduce using rule 43 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    LA              reduce using rule 43 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    L               reduce using rule 43 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    ID              reduce using rule 43 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    RE              reduce using rule 43 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    REC             reduce using rule 43 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    TRI             reduce using rule 43 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    POL             reduce using rule 43 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    LS              reduce using rule 43 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    CIR             reduce using rule 43 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    SQ              reduce using rule 43 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    ARC             reduce using rule 43 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    PENC            reduce using rule 43 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    SETC            reduce using rule 43 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    BACO            reduce using rule 43 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    PENW            reduce using rule 43 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    F               reduce using rule 43 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    B               reduce using rule 43 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    PENP            reduce using rule 43 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    PENU            reduce using rule 43 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    PEND            reduce using rule 43 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    RB              reduce using rule 43 (tria -> TRI LP exp C exp C exp p_fill RP SC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ADD in state 97 resolved as shift
