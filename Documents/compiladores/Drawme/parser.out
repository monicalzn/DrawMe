Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    STR

Grammar

Rule 0     S' -> prog
Rule 1     prog -> PR p2 p3 main mainVDir block
Rule 2     main -> MAIN
Rule 3     mainVDir -> vars
Rule 4     p2 -> globals
Rule 5     p2 -> empty
Rule 6     p3 -> functions p3
Rule 7     p3 -> empty
Rule 8     globals -> glob vars
Rule 9     glob -> GL
Rule 10    functions -> fun2 DP funVDir block
Rule 11    funVDir -> vars
Rule 12    fun2 -> funBlock ID LP fun3 RP
Rule 13    funBlock -> FUN tp
Rule 14    tp -> VD
Rule 15    tp -> type
Rule 16    fun3 -> fun5 fun4
Rule 17    fun3 -> empty
Rule 18    fun4 -> C fun5 fun4
Rule 19    fun4 -> empty
Rule 20    fun5 -> type ID
Rule 21    vars -> V var2
Rule 22    vars -> empty
Rule 23    var2 -> type var3 SC var2
Rule 24    var2 -> empty
Rule 25    var3 -> varSave var5 var4 var33
Rule 26    var33 -> C varSave var5 var4 var33
Rule 27    var33 -> empty
Rule 28    varSave -> ID
Rule 29    var4 -> EQ var6
Rule 30    var4 -> empty
Rule 31    var5 -> LC var51
Rule 32    var5 -> LB var52
Rule 33    var5 -> empty
Rule 34    var6 -> exp
Rule 35    var6 -> LB LP exp C exp RP var61 RB
Rule 36    var6 -> LC exp var62 RC
Rule 37    var61 -> C LP exp C exp RP var61
Rule 38    var61 -> empty
Rule 39    var62 -> C exp var62
Rule 40    var62 -> empty
Rule 41    var51 -> exp RC
Rule 42    var52 -> exp RB
Rule 43    type -> INT
Rule 44    type -> FLOAT
Rule 45    position -> PENP LP exp C exp RP SC
Rule 46    colors -> PENC LP exp C exp C exp RP SC
Rule 47    colors -> SETC LP exp C exp C exp RP SC
Rule 48    colors -> BACO LP exp C exp C exp RP SC
Rule 49    p_width -> PENW LP exp RP SC
Rule 50    penwrite -> PENX exp SC
Rule 51    penwrite -> PENY exp SC
Rule 52    move -> LI mueve2
Rule 53    mueve2 -> LP exp C A exp RP SC
Rule 54    rect -> REC LP exp C exp p_fill RP SC
Rule 55    p_fill -> C FILL
Rule 56    p_fill -> empty
Rule 57    tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC
Rule 58    one_par -> CIR LP exp p_fill RP SC
Rule 59    one_par -> SQ LP exp p_fill RP SC
Rule 60    poly -> POL LP idList p_fill RP SC
Rule 61    lstrip -> LS LP idList RP SC
Rule 62    idList -> ID
Rule 63    p_arc -> ARC LP exp RP SC
Rule 64    expresion -> exp ex2
Rule 65    ex2 -> ex3 exp
Rule 66    ex2 -> empty
Rule 67    ex3 -> LT
Rule 68    ex3 -> MT
Rule 69    ex3 -> D
Rule 70    ex3 -> SEQ
Rule 71    exp -> term exp2
Rule 72    exp2 -> exp4 exp3 exp
Rule 73    exp2 -> exp4 empty
Rule 74    exp4 -> empty
Rule 75    exp3 -> ADD
Rule 76    exp3 -> SUB
Rule 77    term -> fact term2
Rule 78    term2 -> term4 term3 term
Rule 79    term2 -> term4 empty
Rule 80    term4 -> empty
Rule 81    term3 -> M
Rule 82    term3 -> DIV
Rule 83    fact -> fact2 exp RP
Rule 84    fact -> fact4
Rule 85    fact2 -> LP
Rule 86    fact4 -> valExp
Rule 87    fact4 -> factID fact5
Rule 88    factID -> ID
Rule 89    fact5 -> LC exp RC
Rule 90    fact5 -> LB exp RB
Rule 91    fact5 -> funCall
Rule 92    fact5 -> empty
Rule 93    valExp -> VALI
Rule 94    valExp -> VALF
Rule 95    rep -> RE rep3 block
Rule 96    rep3 -> exp
Rule 97    WID -> factID fact5 WID2
Rule 98    WID2 -> assigment
Rule 99    WID2 -> funCall SC
Rule 100   assigment -> EQ tipeAss
Rule 101   tipeAss -> exp SC
Rule 102   tipeAss -> listAss
Rule 103   tipeAss -> WID
Rule 104   funCall -> funEra func2 RP
Rule 105   funEra -> LP
Rule 106   func2 -> func4 func3
Rule 107   func2 -> empty
Rule 108   func3 -> C func4 func3
Rule 109   func3 -> empty
Rule 110   func4 -> exp
Rule 111   listAss -> LB exp C exp RB SC
Rule 112   condition -> IF LP expresion condRP block con2
Rule 113   condRP -> RP
Rule 114   con2 -> empty
Rule 115   con2 -> con3 block
Rule 116   con3 -> ELSE
Rule 117   rt -> RT rtE SC
Rule 118   rtE -> exp
Rule 119   rtE -> empty
Rule 120   block -> LB block3 RB
Rule 121   block3 -> block2 block3
Rule 122   block3 -> empty
Rule 123   figure -> rect
Rule 124   figure -> tria
Rule 125   figure -> poly
Rule 126   figure -> lstrip
Rule 127   figure -> one_par
Rule 128   figure -> p_arc
Rule 129   pen -> colors
Rule 130   pen -> p_width
Rule 131   pen -> move
Rule 132   pen -> position
Rule 133   pen -> penwrite
Rule 134   block2 -> figure
Rule 135   block2 -> condition
Rule 136   block2 -> pen
Rule 137   block2 -> WID
Rule 138   block2 -> rep
Rule 139   block2 -> rt
Rule 140   empty -> <empty>

Terminals, with rules where they appear

A                    : 53
ADD                  : 75
ARC                  : 63
BACO                 : 48
C                    : 18 26 35 37 37 39 45 46 46 47 47 48 48 53 54 55 57 57 57 57 57 108 111
CIR                  : 58
D                    : 69
DIV                  : 82
DP                   : 10
ELSE                 : 116
EQ                   : 29 100
FILL                 : 55
FLOAT                : 44
FUN                  : 13
GL                   : 9
ID                   : 12 20 28 62 88
IF                   : 112
INT                  : 43
LB                   : 32 35 90 111 120
LC                   : 31 36 57 57 57 89
LI                   : 52
LP                   : 12 35 37 45 46 47 48 49 53 54 57 58 59 60 61 63 85 105 112
LS                   : 61
LT                   : 67
M                    : 81
MAIN                 : 2
MT                   : 68
PENC                 : 46
PENP                 : 45
PENW                 : 49
PENX                 : 50
PENY                 : 51
POL                  : 60
PR                   : 1
RB                   : 35 42 90 111 120
RC                   : 36 41 57 57 57 89
RE                   : 95
REC                  : 54
RP                   : 12 35 37 45 46 47 48 49 53 54 57 58 59 60 61 63 83 104 113
RT                   : 117
SC                   : 23 45 46 47 48 49 50 51 53 54 57 58 59 60 61 63 99 101 111 117
SEQ                  : 70
SETC                 : 47
SQ                   : 59
STR                  : 
SUB                  : 76
TRI                  : 57
V                    : 21
VALF                 : 94
VALI                 : 93
VD                   : 14
error                : 

Nonterminals, with rules where they appear

WID                  : 103 137
WID2                 : 97
assigment            : 98
block                : 1 10 95 112 115
block2               : 121
block3               : 120 121
colors               : 129
con2                 : 112
con3                 : 115
condRP               : 112
condition            : 135
empty                : 5 7 17 19 22 24 27 30 33 38 40 56 66 73 74 79 80 92 107 109 114 119 122
ex2                  : 64
ex3                  : 65
exp                  : 34 35 35 36 37 37 39 41 42 45 45 46 46 46 47 47 47 48 48 48 49 50 51 53 53 54 54 57 57 57 57 57 57 58 59 63 64 65 72 83 89 90 96 101 110 111 111 118
exp2                 : 71
exp3                 : 72
exp4                 : 72 73
expresion            : 112
fact                 : 77
fact2                : 83
fact4                : 84
fact5                : 87 97
factID               : 87 97
figure               : 134
fun2                 : 10
fun3                 : 12
fun4                 : 16 18
fun5                 : 16 18
funBlock             : 12
funCall              : 91 99
funEra               : 104
funVDir              : 10
func2                : 104
func3                : 106 108
func4                : 106 108
functions            : 6
glob                 : 8
globals              : 4
idList               : 60 61
listAss              : 102
lstrip               : 126
main                 : 1
mainVDir             : 1
move                 : 131
mueve2               : 52
one_par              : 127
p2                   : 1
p3                   : 1 6
p_arc                : 128
p_fill               : 54 57 58 59 60
p_width              : 130
pen                  : 136
penwrite             : 133
poly                 : 125
position             : 132
prog                 : 0
rect                 : 123
rep                  : 138
rep3                 : 95
rt                   : 139
rtE                  : 117
term                 : 71 78
term2                : 77
term3                : 78
term4                : 78 79
tipeAss              : 100
tp                   : 13
tria                 : 124
type                 : 15 20 23
valExp               : 86
var2                 : 21 23
var3                 : 23
var33                : 25 26
var4                 : 25 26
var5                 : 25 26
var51                : 31
var52                : 32
var6                 : 29
var61                : 35 37
var62                : 36 39
varSave              : 25 26
vars                 : 3 8 11

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . PR p2 p3 main mainVDir block

    PR              shift and go to state 1

    prog                           shift and go to state 2

state 1

    (1) prog -> PR . p2 p3 main mainVDir block
    (4) p2 -> . globals
    (5) p2 -> . empty
    (8) globals -> . glob vars
    (140) empty -> .
    (9) glob -> . GL

    FUN             reduce using rule 140 (empty -> .)
    MAIN            reduce using rule 140 (empty -> .)
    GL              shift and go to state 4

    p2                             shift and go to state 3
    glob                           shift and go to state 5
    globals                        shift and go to state 6
    empty                          shift and go to state 7

state 2

    (0) S' -> prog .



state 3

    (1) prog -> PR p2 . p3 main mainVDir block
    (6) p3 -> . functions p3
    (7) p3 -> . empty
    (10) functions -> . fun2 DP funVDir block
    (140) empty -> .
    (12) fun2 -> . funBlock ID LP fun3 RP
    (13) funBlock -> . FUN tp

    MAIN            reduce using rule 140 (empty -> .)
    FUN             shift and go to state 12

    p3                             shift and go to state 9
    functions                      shift and go to state 8
    fun2                           shift and go to state 10
    empty                          shift and go to state 11
    funBlock                       shift and go to state 13

state 4

    (9) glob -> GL .

    V               reduce using rule 9 (glob -> GL .)
    FUN             reduce using rule 9 (glob -> GL .)
    MAIN            reduce using rule 9 (glob -> GL .)


state 5

    (8) globals -> glob . vars
    (21) vars -> . V var2
    (22) vars -> . empty
    (140) empty -> .

    V               shift and go to state 16
    FUN             reduce using rule 140 (empty -> .)
    MAIN            reduce using rule 140 (empty -> .)

    empty                          shift and go to state 14
    vars                           shift and go to state 15

state 6

    (4) p2 -> globals .

    FUN             reduce using rule 4 (p2 -> globals .)
    MAIN            reduce using rule 4 (p2 -> globals .)


state 7

    (5) p2 -> empty .

    FUN             reduce using rule 5 (p2 -> empty .)
    MAIN            reduce using rule 5 (p2 -> empty .)


state 8

    (6) p3 -> functions . p3
    (6) p3 -> . functions p3
    (7) p3 -> . empty
    (10) functions -> . fun2 DP funVDir block
    (140) empty -> .
    (12) fun2 -> . funBlock ID LP fun3 RP
    (13) funBlock -> . FUN tp

    MAIN            reduce using rule 140 (empty -> .)
    FUN             shift and go to state 12

    p3                             shift and go to state 17
    functions                      shift and go to state 8
    fun2                           shift and go to state 10
    empty                          shift and go to state 11
    funBlock                       shift and go to state 13

state 9

    (1) prog -> PR p2 p3 . main mainVDir block
    (2) main -> . MAIN

    MAIN            shift and go to state 18

    main                           shift and go to state 19

state 10

    (10) functions -> fun2 . DP funVDir block

    DP              shift and go to state 20


state 11

    (7) p3 -> empty .

    MAIN            reduce using rule 7 (p3 -> empty .)


state 12

    (13) funBlock -> FUN . tp
    (14) tp -> . VD
    (15) tp -> . type
    (43) type -> . INT
    (44) type -> . FLOAT

    VD              shift and go to state 21
    INT             shift and go to state 22
    FLOAT           shift and go to state 23

    type                           shift and go to state 25
    tp                             shift and go to state 24

state 13

    (12) fun2 -> funBlock . ID LP fun3 RP

    ID              shift and go to state 26


state 14

    (22) vars -> empty .

    FUN             reduce using rule 22 (vars -> empty .)
    MAIN            reduce using rule 22 (vars -> empty .)
    LB              reduce using rule 22 (vars -> empty .)


state 15

    (8) globals -> glob vars .

    FUN             reduce using rule 8 (globals -> glob vars .)
    MAIN            reduce using rule 8 (globals -> glob vars .)


state 16

    (21) vars -> V . var2
    (23) var2 -> . type var3 SC var2
    (24) var2 -> . empty
    (43) type -> . INT
    (44) type -> . FLOAT
    (140) empty -> .

    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    FUN             reduce using rule 140 (empty -> .)
    MAIN            reduce using rule 140 (empty -> .)
    LB              reduce using rule 140 (empty -> .)

    type                           shift and go to state 28
    empty                          shift and go to state 29
    var2                           shift and go to state 27

state 17

    (6) p3 -> functions p3 .

    MAIN            reduce using rule 6 (p3 -> functions p3 .)


state 18

    (2) main -> MAIN .

    V               reduce using rule 2 (main -> MAIN .)
    LB              reduce using rule 2 (main -> MAIN .)


state 19

    (1) prog -> PR p2 p3 main . mainVDir block
    (3) mainVDir -> . vars
    (21) vars -> . V var2
    (22) vars -> . empty
    (140) empty -> .

    V               shift and go to state 16
    LB              reduce using rule 140 (empty -> .)

    vars                           shift and go to state 30
    mainVDir                       shift and go to state 31
    empty                          shift and go to state 14

state 20

    (10) functions -> fun2 DP . funVDir block
    (11) funVDir -> . vars
    (21) vars -> . V var2
    (22) vars -> . empty
    (140) empty -> .

    V               shift and go to state 16
    LB              reduce using rule 140 (empty -> .)

    vars                           shift and go to state 32
    funVDir                        shift and go to state 33
    empty                          shift and go to state 14

state 21

    (14) tp -> VD .

    ID              reduce using rule 14 (tp -> VD .)


state 22

    (43) type -> INT .

    ID              reduce using rule 43 (type -> INT .)


state 23

    (44) type -> FLOAT .

    ID              reduce using rule 44 (type -> FLOAT .)


state 24

    (13) funBlock -> FUN tp .

    ID              reduce using rule 13 (funBlock -> FUN tp .)


state 25

    (15) tp -> type .

    ID              reduce using rule 15 (tp -> type .)


state 26

    (12) fun2 -> funBlock ID . LP fun3 RP

    LP              shift and go to state 34


state 27

    (21) vars -> V var2 .

    FUN             reduce using rule 21 (vars -> V var2 .)
    MAIN            reduce using rule 21 (vars -> V var2 .)
    LB              reduce using rule 21 (vars -> V var2 .)


state 28

    (23) var2 -> type . var3 SC var2
    (25) var3 -> . varSave var5 var4 var33
    (28) varSave -> . ID

    ID              shift and go to state 37

    var3                           shift and go to state 35
    varSave                        shift and go to state 36

state 29

    (24) var2 -> empty .

    FUN             reduce using rule 24 (var2 -> empty .)
    MAIN            reduce using rule 24 (var2 -> empty .)
    LB              reduce using rule 24 (var2 -> empty .)


state 30

    (3) mainVDir -> vars .

    LB              reduce using rule 3 (mainVDir -> vars .)


state 31

    (1) prog -> PR p2 p3 main mainVDir . block
    (120) block -> . LB block3 RB

    LB              shift and go to state 38

    block                          shift and go to state 39

state 32

    (11) funVDir -> vars .

    LB              reduce using rule 11 (funVDir -> vars .)


state 33

    (10) functions -> fun2 DP funVDir . block
    (120) block -> . LB block3 RB

    LB              shift and go to state 38

    block                          shift and go to state 40

state 34

    (12) fun2 -> funBlock ID LP . fun3 RP
    (16) fun3 -> . fun5 fun4
    (17) fun3 -> . empty
    (20) fun5 -> . type ID
    (140) empty -> .
    (43) type -> . INT
    (44) type -> . FLOAT

    RP              reduce using rule 140 (empty -> .)
    INT             shift and go to state 22
    FLOAT           shift and go to state 23

    fun5                           shift and go to state 41
    fun3                           shift and go to state 42
    type                           shift and go to state 43
    empty                          shift and go to state 44

state 35

    (23) var2 -> type var3 . SC var2

    SC              shift and go to state 45


state 36

    (25) var3 -> varSave . var5 var4 var33
    (31) var5 -> . LC var51
    (32) var5 -> . LB var52
    (33) var5 -> . empty
    (140) empty -> .

    LC              shift and go to state 48
    LB              shift and go to state 47
    EQ              reduce using rule 140 (empty -> .)
    C               reduce using rule 140 (empty -> .)
    SC              reduce using rule 140 (empty -> .)

    var5                           shift and go to state 46
    empty                          shift and go to state 49

state 37

    (28) varSave -> ID .

    LC              reduce using rule 28 (varSave -> ID .)
    LB              reduce using rule 28 (varSave -> ID .)
    EQ              reduce using rule 28 (varSave -> ID .)
    C               reduce using rule 28 (varSave -> ID .)
    SC              reduce using rule 28 (varSave -> ID .)


state 38

    (120) block -> LB . block3 RB
    (121) block3 -> . block2 block3
    (122) block3 -> . empty
    (134) block2 -> . figure
    (135) block2 -> . condition
    (136) block2 -> . pen
    (137) block2 -> . WID
    (138) block2 -> . rep
    (139) block2 -> . rt
    (140) empty -> .
    (123) figure -> . rect
    (124) figure -> . tria
    (125) figure -> . poly
    (126) figure -> . lstrip
    (127) figure -> . one_par
    (128) figure -> . p_arc
    (112) condition -> . IF LP expresion condRP block con2
    (129) pen -> . colors
    (130) pen -> . p_width
    (131) pen -> . move
    (132) pen -> . position
    (133) pen -> . penwrite
    (97) WID -> . factID fact5 WID2
    (95) rep -> . RE rep3 block
    (117) rt -> . RT rtE SC
    (54) rect -> . REC LP exp C exp p_fill RP SC
    (57) tria -> . TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC
    (60) poly -> . POL LP idList p_fill RP SC
    (61) lstrip -> . LS LP idList RP SC
    (58) one_par -> . CIR LP exp p_fill RP SC
    (59) one_par -> . SQ LP exp p_fill RP SC
    (63) p_arc -> . ARC LP exp RP SC
    (46) colors -> . PENC LP exp C exp C exp RP SC
    (47) colors -> . SETC LP exp C exp C exp RP SC
    (48) colors -> . BACO LP exp C exp C exp RP SC
    (49) p_width -> . PENW LP exp RP SC
    (52) move -> . LI mueve2
    (45) position -> . PENP LP exp C exp RP SC
    (50) penwrite -> . PENX exp SC
    (51) penwrite -> . PENY exp SC
    (88) factID -> . ID

    RB              reduce using rule 140 (empty -> .)
    IF              shift and go to state 79
    RE              shift and go to state 68
    RT              shift and go to state 75
    REC             shift and go to state 60
    TRI             shift and go to state 74
    POL             shift and go to state 65
    LS              shift and go to state 73
    CIR             shift and go to state 58
    SQ              shift and go to state 82
    ARC             shift and go to state 85
    PENC            shift and go to state 70
    SETC            shift and go to state 63
    BACO            shift and go to state 54
    PENW            shift and go to state 67
    LI              shift and go to state 61
    PENP            shift and go to state 83
    PENX            shift and go to state 84
    PENY            shift and go to state 66
    ID              shift and go to state 77

    block3                         shift and go to state 50
    block2                         shift and go to state 51
    figure                         shift and go to state 52
    lstrip                         shift and go to state 53
    move                           shift and go to state 55
    tria                           shift and go to state 56
    poly                           shift and go to state 57
    colors                         shift and go to state 59
    rt                             shift and go to state 62
    rep                            shift and go to state 64
    pen                            shift and go to state 69
    condition                      shift and go to state 71
    empty                          shift and go to state 72
    one_par                        shift and go to state 76
    rect                           shift and go to state 78
    WID                            shift and go to state 80
    p_arc                          shift and go to state 81
    factID                         shift and go to state 86
    position                       shift and go to state 87
    p_width                        shift and go to state 88
    penwrite                       shift and go to state 89

state 39

    (1) prog -> PR p2 p3 main mainVDir block .

    $end            reduce using rule 1 (prog -> PR p2 p3 main mainVDir block .)


state 40

    (10) functions -> fun2 DP funVDir block .

    FUN             reduce using rule 10 (functions -> fun2 DP funVDir block .)
    MAIN            reduce using rule 10 (functions -> fun2 DP funVDir block .)


state 41

    (16) fun3 -> fun5 . fun4
    (18) fun4 -> . C fun5 fun4
    (19) fun4 -> . empty
    (140) empty -> .

    C               shift and go to state 91
    RP              reduce using rule 140 (empty -> .)

    fun4                           shift and go to state 90
    empty                          shift and go to state 92

state 42

    (12) fun2 -> funBlock ID LP fun3 . RP

    RP              shift and go to state 93


state 43

    (20) fun5 -> type . ID

    ID              shift and go to state 94


state 44

    (17) fun3 -> empty .

    RP              reduce using rule 17 (fun3 -> empty .)


state 45

    (23) var2 -> type var3 SC . var2
    (23) var2 -> . type var3 SC var2
    (24) var2 -> . empty
    (43) type -> . INT
    (44) type -> . FLOAT
    (140) empty -> .

    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    FUN             reduce using rule 140 (empty -> .)
    MAIN            reduce using rule 140 (empty -> .)
    LB              reduce using rule 140 (empty -> .)

    type                           shift and go to state 28
    empty                          shift and go to state 29
    var2                           shift and go to state 95

state 46

    (25) var3 -> varSave var5 . var4 var33
    (29) var4 -> . EQ var6
    (30) var4 -> . empty
    (140) empty -> .

    EQ              shift and go to state 97
    C               reduce using rule 140 (empty -> .)
    SC              reduce using rule 140 (empty -> .)

    var4                           shift and go to state 96
    empty                          shift and go to state 98

state 47

    (32) var5 -> LB . var52
    (42) var52 -> . exp RB
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 100
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    var52                          shift and go to state 107
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 48

    (31) var5 -> LC . var51
    (41) var51 -> . exp RC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 110
    factID                         shift and go to state 104
    var51                          shift and go to state 111
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 49

    (33) var5 -> empty .

    EQ              reduce using rule 33 (var5 -> empty .)
    C               reduce using rule 33 (var5 -> empty .)
    SC              reduce using rule 33 (var5 -> empty .)


state 50

    (120) block -> LB block3 . RB

    RB              shift and go to state 112


state 51

    (121) block3 -> block2 . block3
    (121) block3 -> . block2 block3
    (122) block3 -> . empty
    (134) block2 -> . figure
    (135) block2 -> . condition
    (136) block2 -> . pen
    (137) block2 -> . WID
    (138) block2 -> . rep
    (139) block2 -> . rt
    (140) empty -> .
    (123) figure -> . rect
    (124) figure -> . tria
    (125) figure -> . poly
    (126) figure -> . lstrip
    (127) figure -> . one_par
    (128) figure -> . p_arc
    (112) condition -> . IF LP expresion condRP block con2
    (129) pen -> . colors
    (130) pen -> . p_width
    (131) pen -> . move
    (132) pen -> . position
    (133) pen -> . penwrite
    (97) WID -> . factID fact5 WID2
    (95) rep -> . RE rep3 block
    (117) rt -> . RT rtE SC
    (54) rect -> . REC LP exp C exp p_fill RP SC
    (57) tria -> . TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC
    (60) poly -> . POL LP idList p_fill RP SC
    (61) lstrip -> . LS LP idList RP SC
    (58) one_par -> . CIR LP exp p_fill RP SC
    (59) one_par -> . SQ LP exp p_fill RP SC
    (63) p_arc -> . ARC LP exp RP SC
    (46) colors -> . PENC LP exp C exp C exp RP SC
    (47) colors -> . SETC LP exp C exp C exp RP SC
    (48) colors -> . BACO LP exp C exp C exp RP SC
    (49) p_width -> . PENW LP exp RP SC
    (52) move -> . LI mueve2
    (45) position -> . PENP LP exp C exp RP SC
    (50) penwrite -> . PENX exp SC
    (51) penwrite -> . PENY exp SC
    (88) factID -> . ID

    RB              reduce using rule 140 (empty -> .)
    IF              shift and go to state 79
    RE              shift and go to state 68
    RT              shift and go to state 75
    REC             shift and go to state 60
    TRI             shift and go to state 74
    POL             shift and go to state 65
    LS              shift and go to state 73
    CIR             shift and go to state 58
    SQ              shift and go to state 82
    ARC             shift and go to state 85
    PENC            shift and go to state 70
    SETC            shift and go to state 63
    BACO            shift and go to state 54
    PENW            shift and go to state 67
    LI              shift and go to state 61
    PENP            shift and go to state 83
    PENX            shift and go to state 84
    PENY            shift and go to state 66
    ID              shift and go to state 77

    block3                         shift and go to state 113
    block2                         shift and go to state 51
    figure                         shift and go to state 52
    lstrip                         shift and go to state 53
    move                           shift and go to state 55
    tria                           shift and go to state 56
    poly                           shift and go to state 57
    colors                         shift and go to state 59
    rt                             shift and go to state 62
    rep                            shift and go to state 64
    pen                            shift and go to state 69
    condition                      shift and go to state 71
    empty                          shift and go to state 72
    one_par                        shift and go to state 76
    rect                           shift and go to state 78
    WID                            shift and go to state 80
    p_arc                          shift and go to state 81
    factID                         shift and go to state 86
    position                       shift and go to state 87
    p_width                        shift and go to state 88
    penwrite                       shift and go to state 89

state 52

    (134) block2 -> figure .

    IF              reduce using rule 134 (block2 -> figure .)
    RE              reduce using rule 134 (block2 -> figure .)
    RT              reduce using rule 134 (block2 -> figure .)
    REC             reduce using rule 134 (block2 -> figure .)
    TRI             reduce using rule 134 (block2 -> figure .)
    POL             reduce using rule 134 (block2 -> figure .)
    LS              reduce using rule 134 (block2 -> figure .)
    CIR             reduce using rule 134 (block2 -> figure .)
    SQ              reduce using rule 134 (block2 -> figure .)
    ARC             reduce using rule 134 (block2 -> figure .)
    PENC            reduce using rule 134 (block2 -> figure .)
    SETC            reduce using rule 134 (block2 -> figure .)
    BACO            reduce using rule 134 (block2 -> figure .)
    PENW            reduce using rule 134 (block2 -> figure .)
    LI              reduce using rule 134 (block2 -> figure .)
    PENP            reduce using rule 134 (block2 -> figure .)
    PENX            reduce using rule 134 (block2 -> figure .)
    PENY            reduce using rule 134 (block2 -> figure .)
    ID              reduce using rule 134 (block2 -> figure .)
    RB              reduce using rule 134 (block2 -> figure .)


state 53

    (126) figure -> lstrip .

    IF              reduce using rule 126 (figure -> lstrip .)
    RE              reduce using rule 126 (figure -> lstrip .)
    RT              reduce using rule 126 (figure -> lstrip .)
    REC             reduce using rule 126 (figure -> lstrip .)
    TRI             reduce using rule 126 (figure -> lstrip .)
    POL             reduce using rule 126 (figure -> lstrip .)
    LS              reduce using rule 126 (figure -> lstrip .)
    CIR             reduce using rule 126 (figure -> lstrip .)
    SQ              reduce using rule 126 (figure -> lstrip .)
    ARC             reduce using rule 126 (figure -> lstrip .)
    PENC            reduce using rule 126 (figure -> lstrip .)
    SETC            reduce using rule 126 (figure -> lstrip .)
    BACO            reduce using rule 126 (figure -> lstrip .)
    PENW            reduce using rule 126 (figure -> lstrip .)
    LI              reduce using rule 126 (figure -> lstrip .)
    PENP            reduce using rule 126 (figure -> lstrip .)
    PENX            reduce using rule 126 (figure -> lstrip .)
    PENY            reduce using rule 126 (figure -> lstrip .)
    ID              reduce using rule 126 (figure -> lstrip .)
    RB              reduce using rule 126 (figure -> lstrip .)


state 54

    (48) colors -> BACO . LP exp C exp C exp RP SC

    LP              shift and go to state 114


state 55

    (131) pen -> move .

    IF              reduce using rule 131 (pen -> move .)
    RE              reduce using rule 131 (pen -> move .)
    RT              reduce using rule 131 (pen -> move .)
    REC             reduce using rule 131 (pen -> move .)
    TRI             reduce using rule 131 (pen -> move .)
    POL             reduce using rule 131 (pen -> move .)
    LS              reduce using rule 131 (pen -> move .)
    CIR             reduce using rule 131 (pen -> move .)
    SQ              reduce using rule 131 (pen -> move .)
    ARC             reduce using rule 131 (pen -> move .)
    PENC            reduce using rule 131 (pen -> move .)
    SETC            reduce using rule 131 (pen -> move .)
    BACO            reduce using rule 131 (pen -> move .)
    PENW            reduce using rule 131 (pen -> move .)
    LI              reduce using rule 131 (pen -> move .)
    PENP            reduce using rule 131 (pen -> move .)
    PENX            reduce using rule 131 (pen -> move .)
    PENY            reduce using rule 131 (pen -> move .)
    ID              reduce using rule 131 (pen -> move .)
    RB              reduce using rule 131 (pen -> move .)


state 56

    (124) figure -> tria .

    IF              reduce using rule 124 (figure -> tria .)
    RE              reduce using rule 124 (figure -> tria .)
    RT              reduce using rule 124 (figure -> tria .)
    REC             reduce using rule 124 (figure -> tria .)
    TRI             reduce using rule 124 (figure -> tria .)
    POL             reduce using rule 124 (figure -> tria .)
    LS              reduce using rule 124 (figure -> tria .)
    CIR             reduce using rule 124 (figure -> tria .)
    SQ              reduce using rule 124 (figure -> tria .)
    ARC             reduce using rule 124 (figure -> tria .)
    PENC            reduce using rule 124 (figure -> tria .)
    SETC            reduce using rule 124 (figure -> tria .)
    BACO            reduce using rule 124 (figure -> tria .)
    PENW            reduce using rule 124 (figure -> tria .)
    LI              reduce using rule 124 (figure -> tria .)
    PENP            reduce using rule 124 (figure -> tria .)
    PENX            reduce using rule 124 (figure -> tria .)
    PENY            reduce using rule 124 (figure -> tria .)
    ID              reduce using rule 124 (figure -> tria .)
    RB              reduce using rule 124 (figure -> tria .)


state 57

    (125) figure -> poly .

    IF              reduce using rule 125 (figure -> poly .)
    RE              reduce using rule 125 (figure -> poly .)
    RT              reduce using rule 125 (figure -> poly .)
    REC             reduce using rule 125 (figure -> poly .)
    TRI             reduce using rule 125 (figure -> poly .)
    POL             reduce using rule 125 (figure -> poly .)
    LS              reduce using rule 125 (figure -> poly .)
    CIR             reduce using rule 125 (figure -> poly .)
    SQ              reduce using rule 125 (figure -> poly .)
    ARC             reduce using rule 125 (figure -> poly .)
    PENC            reduce using rule 125 (figure -> poly .)
    SETC            reduce using rule 125 (figure -> poly .)
    BACO            reduce using rule 125 (figure -> poly .)
    PENW            reduce using rule 125 (figure -> poly .)
    LI              reduce using rule 125 (figure -> poly .)
    PENP            reduce using rule 125 (figure -> poly .)
    PENX            reduce using rule 125 (figure -> poly .)
    PENY            reduce using rule 125 (figure -> poly .)
    ID              reduce using rule 125 (figure -> poly .)
    RB              reduce using rule 125 (figure -> poly .)


state 58

    (58) one_par -> CIR . LP exp p_fill RP SC

    LP              shift and go to state 115


state 59

    (129) pen -> colors .

    IF              reduce using rule 129 (pen -> colors .)
    RE              reduce using rule 129 (pen -> colors .)
    RT              reduce using rule 129 (pen -> colors .)
    REC             reduce using rule 129 (pen -> colors .)
    TRI             reduce using rule 129 (pen -> colors .)
    POL             reduce using rule 129 (pen -> colors .)
    LS              reduce using rule 129 (pen -> colors .)
    CIR             reduce using rule 129 (pen -> colors .)
    SQ              reduce using rule 129 (pen -> colors .)
    ARC             reduce using rule 129 (pen -> colors .)
    PENC            reduce using rule 129 (pen -> colors .)
    SETC            reduce using rule 129 (pen -> colors .)
    BACO            reduce using rule 129 (pen -> colors .)
    PENW            reduce using rule 129 (pen -> colors .)
    LI              reduce using rule 129 (pen -> colors .)
    PENP            reduce using rule 129 (pen -> colors .)
    PENX            reduce using rule 129 (pen -> colors .)
    PENY            reduce using rule 129 (pen -> colors .)
    ID              reduce using rule 129 (pen -> colors .)
    RB              reduce using rule 129 (pen -> colors .)


state 60

    (54) rect -> REC . LP exp C exp p_fill RP SC

    LP              shift and go to state 116


state 61

    (52) move -> LI . mueve2
    (53) mueve2 -> . LP exp C A exp RP SC

    LP              shift and go to state 117

    mueve2                         shift and go to state 118

state 62

    (139) block2 -> rt .

    IF              reduce using rule 139 (block2 -> rt .)
    RE              reduce using rule 139 (block2 -> rt .)
    RT              reduce using rule 139 (block2 -> rt .)
    REC             reduce using rule 139 (block2 -> rt .)
    TRI             reduce using rule 139 (block2 -> rt .)
    POL             reduce using rule 139 (block2 -> rt .)
    LS              reduce using rule 139 (block2 -> rt .)
    CIR             reduce using rule 139 (block2 -> rt .)
    SQ              reduce using rule 139 (block2 -> rt .)
    ARC             reduce using rule 139 (block2 -> rt .)
    PENC            reduce using rule 139 (block2 -> rt .)
    SETC            reduce using rule 139 (block2 -> rt .)
    BACO            reduce using rule 139 (block2 -> rt .)
    PENW            reduce using rule 139 (block2 -> rt .)
    LI              reduce using rule 139 (block2 -> rt .)
    PENP            reduce using rule 139 (block2 -> rt .)
    PENX            reduce using rule 139 (block2 -> rt .)
    PENY            reduce using rule 139 (block2 -> rt .)
    ID              reduce using rule 139 (block2 -> rt .)
    RB              reduce using rule 139 (block2 -> rt .)


state 63

    (47) colors -> SETC . LP exp C exp C exp RP SC

    LP              shift and go to state 119


state 64

    (138) block2 -> rep .

    IF              reduce using rule 138 (block2 -> rep .)
    RE              reduce using rule 138 (block2 -> rep .)
    RT              reduce using rule 138 (block2 -> rep .)
    REC             reduce using rule 138 (block2 -> rep .)
    TRI             reduce using rule 138 (block2 -> rep .)
    POL             reduce using rule 138 (block2 -> rep .)
    LS              reduce using rule 138 (block2 -> rep .)
    CIR             reduce using rule 138 (block2 -> rep .)
    SQ              reduce using rule 138 (block2 -> rep .)
    ARC             reduce using rule 138 (block2 -> rep .)
    PENC            reduce using rule 138 (block2 -> rep .)
    SETC            reduce using rule 138 (block2 -> rep .)
    BACO            reduce using rule 138 (block2 -> rep .)
    PENW            reduce using rule 138 (block2 -> rep .)
    LI              reduce using rule 138 (block2 -> rep .)
    PENP            reduce using rule 138 (block2 -> rep .)
    PENX            reduce using rule 138 (block2 -> rep .)
    PENY            reduce using rule 138 (block2 -> rep .)
    ID              reduce using rule 138 (block2 -> rep .)
    RB              reduce using rule 138 (block2 -> rep .)


state 65

    (60) poly -> POL . LP idList p_fill RP SC

    LP              shift and go to state 120


state 66

    (51) penwrite -> PENY . exp SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 121
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 67

    (49) p_width -> PENW . LP exp RP SC

    LP              shift and go to state 122


state 68

    (95) rep -> RE . rep3 block
    (96) rep3 -> . exp
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    rep3                           shift and go to state 123
    exp                            shift and go to state 124
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 69

    (136) block2 -> pen .

    IF              reduce using rule 136 (block2 -> pen .)
    RE              reduce using rule 136 (block2 -> pen .)
    RT              reduce using rule 136 (block2 -> pen .)
    REC             reduce using rule 136 (block2 -> pen .)
    TRI             reduce using rule 136 (block2 -> pen .)
    POL             reduce using rule 136 (block2 -> pen .)
    LS              reduce using rule 136 (block2 -> pen .)
    CIR             reduce using rule 136 (block2 -> pen .)
    SQ              reduce using rule 136 (block2 -> pen .)
    ARC             reduce using rule 136 (block2 -> pen .)
    PENC            reduce using rule 136 (block2 -> pen .)
    SETC            reduce using rule 136 (block2 -> pen .)
    BACO            reduce using rule 136 (block2 -> pen .)
    PENW            reduce using rule 136 (block2 -> pen .)
    LI              reduce using rule 136 (block2 -> pen .)
    PENP            reduce using rule 136 (block2 -> pen .)
    PENX            reduce using rule 136 (block2 -> pen .)
    PENY            reduce using rule 136 (block2 -> pen .)
    ID              reduce using rule 136 (block2 -> pen .)
    RB              reduce using rule 136 (block2 -> pen .)


state 70

    (46) colors -> PENC . LP exp C exp C exp RP SC

    LP              shift and go to state 125


state 71

    (135) block2 -> condition .

    IF              reduce using rule 135 (block2 -> condition .)
    RE              reduce using rule 135 (block2 -> condition .)
    RT              reduce using rule 135 (block2 -> condition .)
    REC             reduce using rule 135 (block2 -> condition .)
    TRI             reduce using rule 135 (block2 -> condition .)
    POL             reduce using rule 135 (block2 -> condition .)
    LS              reduce using rule 135 (block2 -> condition .)
    CIR             reduce using rule 135 (block2 -> condition .)
    SQ              reduce using rule 135 (block2 -> condition .)
    ARC             reduce using rule 135 (block2 -> condition .)
    PENC            reduce using rule 135 (block2 -> condition .)
    SETC            reduce using rule 135 (block2 -> condition .)
    BACO            reduce using rule 135 (block2 -> condition .)
    PENW            reduce using rule 135 (block2 -> condition .)
    LI              reduce using rule 135 (block2 -> condition .)
    PENP            reduce using rule 135 (block2 -> condition .)
    PENX            reduce using rule 135 (block2 -> condition .)
    PENY            reduce using rule 135 (block2 -> condition .)
    ID              reduce using rule 135 (block2 -> condition .)
    RB              reduce using rule 135 (block2 -> condition .)


state 72

    (122) block3 -> empty .

    RB              reduce using rule 122 (block3 -> empty .)


state 73

    (61) lstrip -> LS . LP idList RP SC

    LP              shift and go to state 126


state 74

    (57) tria -> TRI . LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC

    LP              shift and go to state 127


state 75

    (117) rt -> RT . rtE SC
    (118) rtE -> . exp
    (119) rtE -> . empty
    (71) exp -> . term exp2
    (140) empty -> .
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    SC              reduce using rule 140 (empty -> .)
    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    rtE                            shift and go to state 128
    term                           shift and go to state 99
    valExp                         shift and go to state 108
    empty                          shift and go to state 130
    exp                            shift and go to state 129
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 76

    (127) figure -> one_par .

    IF              reduce using rule 127 (figure -> one_par .)
    RE              reduce using rule 127 (figure -> one_par .)
    RT              reduce using rule 127 (figure -> one_par .)
    REC             reduce using rule 127 (figure -> one_par .)
    TRI             reduce using rule 127 (figure -> one_par .)
    POL             reduce using rule 127 (figure -> one_par .)
    LS              reduce using rule 127 (figure -> one_par .)
    CIR             reduce using rule 127 (figure -> one_par .)
    SQ              reduce using rule 127 (figure -> one_par .)
    ARC             reduce using rule 127 (figure -> one_par .)
    PENC            reduce using rule 127 (figure -> one_par .)
    SETC            reduce using rule 127 (figure -> one_par .)
    BACO            reduce using rule 127 (figure -> one_par .)
    PENW            reduce using rule 127 (figure -> one_par .)
    LI              reduce using rule 127 (figure -> one_par .)
    PENP            reduce using rule 127 (figure -> one_par .)
    PENX            reduce using rule 127 (figure -> one_par .)
    PENY            reduce using rule 127 (figure -> one_par .)
    ID              reduce using rule 127 (figure -> one_par .)
    RB              reduce using rule 127 (figure -> one_par .)


state 77

    (88) factID -> ID .

    LC              reduce using rule 88 (factID -> ID .)
    LB              reduce using rule 88 (factID -> ID .)
    LP              reduce using rule 88 (factID -> ID .)
    M               reduce using rule 88 (factID -> ID .)
    DIV             reduce using rule 88 (factID -> ID .)
    ADD             reduce using rule 88 (factID -> ID .)
    SUB             reduce using rule 88 (factID -> ID .)
    C               reduce using rule 88 (factID -> ID .)
    RB              reduce using rule 88 (factID -> ID .)
    RC              reduce using rule 88 (factID -> ID .)
    RP              reduce using rule 88 (factID -> ID .)
    SC              reduce using rule 88 (factID -> ID .)
    LT              reduce using rule 88 (factID -> ID .)
    MT              reduce using rule 88 (factID -> ID .)
    D               reduce using rule 88 (factID -> ID .)
    SEQ             reduce using rule 88 (factID -> ID .)
    EQ              reduce using rule 88 (factID -> ID .)


state 78

    (123) figure -> rect .

    IF              reduce using rule 123 (figure -> rect .)
    RE              reduce using rule 123 (figure -> rect .)
    RT              reduce using rule 123 (figure -> rect .)
    REC             reduce using rule 123 (figure -> rect .)
    TRI             reduce using rule 123 (figure -> rect .)
    POL             reduce using rule 123 (figure -> rect .)
    LS              reduce using rule 123 (figure -> rect .)
    CIR             reduce using rule 123 (figure -> rect .)
    SQ              reduce using rule 123 (figure -> rect .)
    ARC             reduce using rule 123 (figure -> rect .)
    PENC            reduce using rule 123 (figure -> rect .)
    SETC            reduce using rule 123 (figure -> rect .)
    BACO            reduce using rule 123 (figure -> rect .)
    PENW            reduce using rule 123 (figure -> rect .)
    LI              reduce using rule 123 (figure -> rect .)
    PENP            reduce using rule 123 (figure -> rect .)
    PENX            reduce using rule 123 (figure -> rect .)
    PENY            reduce using rule 123 (figure -> rect .)
    ID              reduce using rule 123 (figure -> rect .)
    RB              reduce using rule 123 (figure -> rect .)


state 79

    (112) condition -> IF . LP expresion condRP block con2

    LP              shift and go to state 131


state 80

    (137) block2 -> WID .

    IF              reduce using rule 137 (block2 -> WID .)
    RE              reduce using rule 137 (block2 -> WID .)
    RT              reduce using rule 137 (block2 -> WID .)
    REC             reduce using rule 137 (block2 -> WID .)
    TRI             reduce using rule 137 (block2 -> WID .)
    POL             reduce using rule 137 (block2 -> WID .)
    LS              reduce using rule 137 (block2 -> WID .)
    CIR             reduce using rule 137 (block2 -> WID .)
    SQ              reduce using rule 137 (block2 -> WID .)
    ARC             reduce using rule 137 (block2 -> WID .)
    PENC            reduce using rule 137 (block2 -> WID .)
    SETC            reduce using rule 137 (block2 -> WID .)
    BACO            reduce using rule 137 (block2 -> WID .)
    PENW            reduce using rule 137 (block2 -> WID .)
    LI              reduce using rule 137 (block2 -> WID .)
    PENP            reduce using rule 137 (block2 -> WID .)
    PENX            reduce using rule 137 (block2 -> WID .)
    PENY            reduce using rule 137 (block2 -> WID .)
    ID              reduce using rule 137 (block2 -> WID .)
    RB              reduce using rule 137 (block2 -> WID .)


state 81

    (128) figure -> p_arc .

    IF              reduce using rule 128 (figure -> p_arc .)
    RE              reduce using rule 128 (figure -> p_arc .)
    RT              reduce using rule 128 (figure -> p_arc .)
    REC             reduce using rule 128 (figure -> p_arc .)
    TRI             reduce using rule 128 (figure -> p_arc .)
    POL             reduce using rule 128 (figure -> p_arc .)
    LS              reduce using rule 128 (figure -> p_arc .)
    CIR             reduce using rule 128 (figure -> p_arc .)
    SQ              reduce using rule 128 (figure -> p_arc .)
    ARC             reduce using rule 128 (figure -> p_arc .)
    PENC            reduce using rule 128 (figure -> p_arc .)
    SETC            reduce using rule 128 (figure -> p_arc .)
    BACO            reduce using rule 128 (figure -> p_arc .)
    PENW            reduce using rule 128 (figure -> p_arc .)
    LI              reduce using rule 128 (figure -> p_arc .)
    PENP            reduce using rule 128 (figure -> p_arc .)
    PENX            reduce using rule 128 (figure -> p_arc .)
    PENY            reduce using rule 128 (figure -> p_arc .)
    ID              reduce using rule 128 (figure -> p_arc .)
    RB              reduce using rule 128 (figure -> p_arc .)


state 82

    (59) one_par -> SQ . LP exp p_fill RP SC

    LP              shift and go to state 132


state 83

    (45) position -> PENP . LP exp C exp RP SC

    LP              shift and go to state 133


state 84

    (50) penwrite -> PENX . exp SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 134
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 85

    (63) p_arc -> ARC . LP exp RP SC

    LP              shift and go to state 135


state 86

    (97) WID -> factID . fact5 WID2
    (89) fact5 -> . LC exp RC
    (90) fact5 -> . LB exp RB
    (91) fact5 -> . funCall
    (92) fact5 -> . empty
    (104) funCall -> . funEra func2 RP
    (140) empty -> .
    (105) funEra -> . LP

  ! shift/reduce conflict for LP resolved as shift
    LC              shift and go to state 137
    LB              shift and go to state 136
    EQ              reduce using rule 140 (empty -> .)
    LP              shift and go to state 138

  ! LP              [ reduce using rule 140 (empty -> .) ]

    funEra                         shift and go to state 139
    funCall                        shift and go to state 140
    fact5                          shift and go to state 142
    empty                          shift and go to state 141

state 87

    (132) pen -> position .

    IF              reduce using rule 132 (pen -> position .)
    RE              reduce using rule 132 (pen -> position .)
    RT              reduce using rule 132 (pen -> position .)
    REC             reduce using rule 132 (pen -> position .)
    TRI             reduce using rule 132 (pen -> position .)
    POL             reduce using rule 132 (pen -> position .)
    LS              reduce using rule 132 (pen -> position .)
    CIR             reduce using rule 132 (pen -> position .)
    SQ              reduce using rule 132 (pen -> position .)
    ARC             reduce using rule 132 (pen -> position .)
    PENC            reduce using rule 132 (pen -> position .)
    SETC            reduce using rule 132 (pen -> position .)
    BACO            reduce using rule 132 (pen -> position .)
    PENW            reduce using rule 132 (pen -> position .)
    LI              reduce using rule 132 (pen -> position .)
    PENP            reduce using rule 132 (pen -> position .)
    PENX            reduce using rule 132 (pen -> position .)
    PENY            reduce using rule 132 (pen -> position .)
    ID              reduce using rule 132 (pen -> position .)
    RB              reduce using rule 132 (pen -> position .)


state 88

    (130) pen -> p_width .

    IF              reduce using rule 130 (pen -> p_width .)
    RE              reduce using rule 130 (pen -> p_width .)
    RT              reduce using rule 130 (pen -> p_width .)
    REC             reduce using rule 130 (pen -> p_width .)
    TRI             reduce using rule 130 (pen -> p_width .)
    POL             reduce using rule 130 (pen -> p_width .)
    LS              reduce using rule 130 (pen -> p_width .)
    CIR             reduce using rule 130 (pen -> p_width .)
    SQ              reduce using rule 130 (pen -> p_width .)
    ARC             reduce using rule 130 (pen -> p_width .)
    PENC            reduce using rule 130 (pen -> p_width .)
    SETC            reduce using rule 130 (pen -> p_width .)
    BACO            reduce using rule 130 (pen -> p_width .)
    PENW            reduce using rule 130 (pen -> p_width .)
    LI              reduce using rule 130 (pen -> p_width .)
    PENP            reduce using rule 130 (pen -> p_width .)
    PENX            reduce using rule 130 (pen -> p_width .)
    PENY            reduce using rule 130 (pen -> p_width .)
    ID              reduce using rule 130 (pen -> p_width .)
    RB              reduce using rule 130 (pen -> p_width .)


state 89

    (133) pen -> penwrite .

    IF              reduce using rule 133 (pen -> penwrite .)
    RE              reduce using rule 133 (pen -> penwrite .)
    RT              reduce using rule 133 (pen -> penwrite .)
    REC             reduce using rule 133 (pen -> penwrite .)
    TRI             reduce using rule 133 (pen -> penwrite .)
    POL             reduce using rule 133 (pen -> penwrite .)
    LS              reduce using rule 133 (pen -> penwrite .)
    CIR             reduce using rule 133 (pen -> penwrite .)
    SQ              reduce using rule 133 (pen -> penwrite .)
    ARC             reduce using rule 133 (pen -> penwrite .)
    PENC            reduce using rule 133 (pen -> penwrite .)
    SETC            reduce using rule 133 (pen -> penwrite .)
    BACO            reduce using rule 133 (pen -> penwrite .)
    PENW            reduce using rule 133 (pen -> penwrite .)
    LI              reduce using rule 133 (pen -> penwrite .)
    PENP            reduce using rule 133 (pen -> penwrite .)
    PENX            reduce using rule 133 (pen -> penwrite .)
    PENY            reduce using rule 133 (pen -> penwrite .)
    ID              reduce using rule 133 (pen -> penwrite .)
    RB              reduce using rule 133 (pen -> penwrite .)


state 90

    (16) fun3 -> fun5 fun4 .

    RP              reduce using rule 16 (fun3 -> fun5 fun4 .)


state 91

    (18) fun4 -> C . fun5 fun4
    (20) fun5 -> . type ID
    (43) type -> . INT
    (44) type -> . FLOAT

    INT             shift and go to state 22
    FLOAT           shift and go to state 23

    fun5                           shift and go to state 143
    type                           shift and go to state 43

state 92

    (19) fun4 -> empty .

    RP              reduce using rule 19 (fun4 -> empty .)


state 93

    (12) fun2 -> funBlock ID LP fun3 RP .

    DP              reduce using rule 12 (fun2 -> funBlock ID LP fun3 RP .)


state 94

    (20) fun5 -> type ID .

    C               reduce using rule 20 (fun5 -> type ID .)
    RP              reduce using rule 20 (fun5 -> type ID .)


state 95

    (23) var2 -> type var3 SC var2 .

    FUN             reduce using rule 23 (var2 -> type var3 SC var2 .)
    MAIN            reduce using rule 23 (var2 -> type var3 SC var2 .)
    LB              reduce using rule 23 (var2 -> type var3 SC var2 .)


state 96

    (25) var3 -> varSave var5 var4 . var33
    (26) var33 -> . C varSave var5 var4 var33
    (27) var33 -> . empty
    (140) empty -> .

    C               shift and go to state 144
    SC              reduce using rule 140 (empty -> .)

    var33                          shift and go to state 145
    empty                          shift and go to state 146

state 97

    (29) var4 -> EQ . var6
    (34) var6 -> . exp
    (35) var6 -> . LB LP exp C exp RP var61 RB
    (36) var6 -> . LC exp var62 RC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LB              shift and go to state 147
    LC              shift and go to state 148
    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    var6                           shift and go to state 149
    valExp                         shift and go to state 108
    term                           shift and go to state 99
    exp                            shift and go to state 150
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 98

    (30) var4 -> empty .

    C               reduce using rule 30 (var4 -> empty .)
    SC              reduce using rule 30 (var4 -> empty .)


state 99

    (71) exp -> term . exp2
    (72) exp2 -> . exp4 exp3 exp
    (73) exp2 -> . exp4 empty
    (74) exp4 -> . empty
    (140) empty -> .

    ADD             reduce using rule 140 (empty -> .)
    SUB             reduce using rule 140 (empty -> .)
    RB              reduce using rule 140 (empty -> .)
    RC              reduce using rule 140 (empty -> .)
    SC              reduce using rule 140 (empty -> .)
    LB              reduce using rule 140 (empty -> .)
    C               reduce using rule 140 (empty -> .)
    RP              reduce using rule 140 (empty -> .)
    LT              reduce using rule 140 (empty -> .)
    MT              reduce using rule 140 (empty -> .)
    D               reduce using rule 140 (empty -> .)
    SEQ             reduce using rule 140 (empty -> .)

    exp2                           shift and go to state 151
    exp4                           shift and go to state 152
    empty                          shift and go to state 153

state 100

    (42) var52 -> exp . RB

    RB              shift and go to state 154


state 101

    (85) fact2 -> LP .

    LP              reduce using rule 85 (fact2 -> LP .)
    VALI            reduce using rule 85 (fact2 -> LP .)
    VALF            reduce using rule 85 (fact2 -> LP .)
    ID              reduce using rule 85 (fact2 -> LP .)


state 102

    (93) valExp -> VALI .

    M               reduce using rule 93 (valExp -> VALI .)
    DIV             reduce using rule 93 (valExp -> VALI .)
    ADD             reduce using rule 93 (valExp -> VALI .)
    SUB             reduce using rule 93 (valExp -> VALI .)
    C               reduce using rule 93 (valExp -> VALI .)
    RC              reduce using rule 93 (valExp -> VALI .)
    RB              reduce using rule 93 (valExp -> VALI .)
    SC              reduce using rule 93 (valExp -> VALI .)
    LB              reduce using rule 93 (valExp -> VALI .)
    RP              reduce using rule 93 (valExp -> VALI .)
    LT              reduce using rule 93 (valExp -> VALI .)
    MT              reduce using rule 93 (valExp -> VALI .)
    D               reduce using rule 93 (valExp -> VALI .)
    SEQ             reduce using rule 93 (valExp -> VALI .)


state 103

    (94) valExp -> VALF .

    M               reduce using rule 94 (valExp -> VALF .)
    DIV             reduce using rule 94 (valExp -> VALF .)
    ADD             reduce using rule 94 (valExp -> VALF .)
    SUB             reduce using rule 94 (valExp -> VALF .)
    C               reduce using rule 94 (valExp -> VALF .)
    RC              reduce using rule 94 (valExp -> VALF .)
    RB              reduce using rule 94 (valExp -> VALF .)
    SC              reduce using rule 94 (valExp -> VALF .)
    LB              reduce using rule 94 (valExp -> VALF .)
    RP              reduce using rule 94 (valExp -> VALF .)
    LT              reduce using rule 94 (valExp -> VALF .)
    MT              reduce using rule 94 (valExp -> VALF .)
    D               reduce using rule 94 (valExp -> VALF .)
    SEQ             reduce using rule 94 (valExp -> VALF .)


state 104

    (87) fact4 -> factID . fact5
    (89) fact5 -> . LC exp RC
    (90) fact5 -> . LB exp RB
    (91) fact5 -> . funCall
    (92) fact5 -> . empty
    (104) funCall -> . funEra func2 RP
    (140) empty -> .
    (105) funEra -> . LP

  ! shift/reduce conflict for LB resolved as shift
    LC              shift and go to state 137
    LB              shift and go to state 136
    M               reduce using rule 140 (empty -> .)
    DIV             reduce using rule 140 (empty -> .)
    ADD             reduce using rule 140 (empty -> .)
    SUB             reduce using rule 140 (empty -> .)
    RB              reduce using rule 140 (empty -> .)
    RC              reduce using rule 140 (empty -> .)
    SC              reduce using rule 140 (empty -> .)
    C               reduce using rule 140 (empty -> .)
    RP              reduce using rule 140 (empty -> .)
    LT              reduce using rule 140 (empty -> .)
    MT              reduce using rule 140 (empty -> .)
    D               reduce using rule 140 (empty -> .)
    SEQ             reduce using rule 140 (empty -> .)
    LP              shift and go to state 138

  ! LB              [ reduce using rule 140 (empty -> .) ]

    funEra                         shift and go to state 139
    funCall                        shift and go to state 140
    fact5                          shift and go to state 155
    empty                          shift and go to state 141

state 105

    (83) fact -> fact2 . exp RP
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 156
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 106

    (84) fact -> fact4 .

    M               reduce using rule 84 (fact -> fact4 .)
    DIV             reduce using rule 84 (fact -> fact4 .)
    ADD             reduce using rule 84 (fact -> fact4 .)
    SUB             reduce using rule 84 (fact -> fact4 .)
    RB              reduce using rule 84 (fact -> fact4 .)
    C               reduce using rule 84 (fact -> fact4 .)
    RP              reduce using rule 84 (fact -> fact4 .)
    RC              reduce using rule 84 (fact -> fact4 .)
    SC              reduce using rule 84 (fact -> fact4 .)
    LB              reduce using rule 84 (fact -> fact4 .)
    LT              reduce using rule 84 (fact -> fact4 .)
    MT              reduce using rule 84 (fact -> fact4 .)
    D               reduce using rule 84 (fact -> fact4 .)
    SEQ             reduce using rule 84 (fact -> fact4 .)


state 107

    (32) var5 -> LB var52 .

    EQ              reduce using rule 32 (var5 -> LB var52 .)
    C               reduce using rule 32 (var5 -> LB var52 .)
    SC              reduce using rule 32 (var5 -> LB var52 .)


state 108

    (86) fact4 -> valExp .

    M               reduce using rule 86 (fact4 -> valExp .)
    DIV             reduce using rule 86 (fact4 -> valExp .)
    ADD             reduce using rule 86 (fact4 -> valExp .)
    SUB             reduce using rule 86 (fact4 -> valExp .)
    C               reduce using rule 86 (fact4 -> valExp .)
    RP              reduce using rule 86 (fact4 -> valExp .)
    RC              reduce using rule 86 (fact4 -> valExp .)
    LT              reduce using rule 86 (fact4 -> valExp .)
    MT              reduce using rule 86 (fact4 -> valExp .)
    D               reduce using rule 86 (fact4 -> valExp .)
    SEQ             reduce using rule 86 (fact4 -> valExp .)
    SC              reduce using rule 86 (fact4 -> valExp .)
    RB              reduce using rule 86 (fact4 -> valExp .)
    LB              reduce using rule 86 (fact4 -> valExp .)


state 109

    (77) term -> fact . term2
    (78) term2 -> . term4 term3 term
    (79) term2 -> . term4 empty
    (80) term4 -> . empty
    (140) empty -> .

    M               reduce using rule 140 (empty -> .)
    DIV             reduce using rule 140 (empty -> .)
    ADD             reduce using rule 140 (empty -> .)
    SUB             reduce using rule 140 (empty -> .)
    RB              reduce using rule 140 (empty -> .)
    RC              reduce using rule 140 (empty -> .)
    SC              reduce using rule 140 (empty -> .)
    LB              reduce using rule 140 (empty -> .)
    C               reduce using rule 140 (empty -> .)
    RP              reduce using rule 140 (empty -> .)
    LT              reduce using rule 140 (empty -> .)
    MT              reduce using rule 140 (empty -> .)
    D               reduce using rule 140 (empty -> .)
    SEQ             reduce using rule 140 (empty -> .)

    term4                          shift and go to state 157
    term2                          shift and go to state 158
    empty                          shift and go to state 159

state 110

    (41) var51 -> exp . RC

    RC              shift and go to state 160


state 111

    (31) var5 -> LC var51 .

    EQ              reduce using rule 31 (var5 -> LC var51 .)
    C               reduce using rule 31 (var5 -> LC var51 .)
    SC              reduce using rule 31 (var5 -> LC var51 .)


state 112

    (120) block -> LB block3 RB .

    ELSE            reduce using rule 120 (block -> LB block3 RB .)
    IF              reduce using rule 120 (block -> LB block3 RB .)
    RE              reduce using rule 120 (block -> LB block3 RB .)
    RT              reduce using rule 120 (block -> LB block3 RB .)
    REC             reduce using rule 120 (block -> LB block3 RB .)
    TRI             reduce using rule 120 (block -> LB block3 RB .)
    POL             reduce using rule 120 (block -> LB block3 RB .)
    LS              reduce using rule 120 (block -> LB block3 RB .)
    CIR             reduce using rule 120 (block -> LB block3 RB .)
    SQ              reduce using rule 120 (block -> LB block3 RB .)
    ARC             reduce using rule 120 (block -> LB block3 RB .)
    PENC            reduce using rule 120 (block -> LB block3 RB .)
    SETC            reduce using rule 120 (block -> LB block3 RB .)
    BACO            reduce using rule 120 (block -> LB block3 RB .)
    PENW            reduce using rule 120 (block -> LB block3 RB .)
    LI              reduce using rule 120 (block -> LB block3 RB .)
    PENP            reduce using rule 120 (block -> LB block3 RB .)
    PENX            reduce using rule 120 (block -> LB block3 RB .)
    PENY            reduce using rule 120 (block -> LB block3 RB .)
    ID              reduce using rule 120 (block -> LB block3 RB .)
    RB              reduce using rule 120 (block -> LB block3 RB .)
    FUN             reduce using rule 120 (block -> LB block3 RB .)
    MAIN            reduce using rule 120 (block -> LB block3 RB .)
    $end            reduce using rule 120 (block -> LB block3 RB .)


state 113

    (121) block3 -> block2 block3 .

    RB              reduce using rule 121 (block3 -> block2 block3 .)


state 114

    (48) colors -> BACO LP . exp C exp C exp RP SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 161
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 115

    (58) one_par -> CIR LP . exp p_fill RP SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 162
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact4                          shift and go to state 106
    fact                           shift and go to state 109

state 116

    (54) rect -> REC LP . exp C exp p_fill RP SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 163
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact4                          shift and go to state 106
    fact                           shift and go to state 109

state 117

    (53) mueve2 -> LP . exp C A exp RP SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 164
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 118

    (52) move -> LI mueve2 .

    IF              reduce using rule 52 (move -> LI mueve2 .)
    RE              reduce using rule 52 (move -> LI mueve2 .)
    RT              reduce using rule 52 (move -> LI mueve2 .)
    REC             reduce using rule 52 (move -> LI mueve2 .)
    TRI             reduce using rule 52 (move -> LI mueve2 .)
    POL             reduce using rule 52 (move -> LI mueve2 .)
    LS              reduce using rule 52 (move -> LI mueve2 .)
    CIR             reduce using rule 52 (move -> LI mueve2 .)
    SQ              reduce using rule 52 (move -> LI mueve2 .)
    ARC             reduce using rule 52 (move -> LI mueve2 .)
    PENC            reduce using rule 52 (move -> LI mueve2 .)
    SETC            reduce using rule 52 (move -> LI mueve2 .)
    BACO            reduce using rule 52 (move -> LI mueve2 .)
    PENW            reduce using rule 52 (move -> LI mueve2 .)
    LI              reduce using rule 52 (move -> LI mueve2 .)
    PENP            reduce using rule 52 (move -> LI mueve2 .)
    PENX            reduce using rule 52 (move -> LI mueve2 .)
    PENY            reduce using rule 52 (move -> LI mueve2 .)
    ID              reduce using rule 52 (move -> LI mueve2 .)
    RB              reduce using rule 52 (move -> LI mueve2 .)


state 119

    (47) colors -> SETC LP . exp C exp C exp RP SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 165
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 120

    (60) poly -> POL LP . idList p_fill RP SC
    (62) idList -> . ID

    ID              shift and go to state 167

    idList                         shift and go to state 166

state 121

    (51) penwrite -> PENY exp . SC

    SC              shift and go to state 168


state 122

    (49) p_width -> PENW LP . exp RP SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 169
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 123

    (95) rep -> RE rep3 . block
    (120) block -> . LB block3 RB

    LB              shift and go to state 38

    block                          shift and go to state 170

state 124

    (96) rep3 -> exp .

    LB              reduce using rule 96 (rep3 -> exp .)


state 125

    (46) colors -> PENC LP . exp C exp C exp RP SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 171
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 126

    (61) lstrip -> LS LP . idList RP SC
    (62) idList -> . ID

    ID              shift and go to state 167

    idList                         shift and go to state 172

state 127

    (57) tria -> TRI LP . LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC

    LC              shift and go to state 173


state 128

    (117) rt -> RT rtE . SC

    SC              shift and go to state 174


state 129

    (118) rtE -> exp .

    SC              reduce using rule 118 (rtE -> exp .)


state 130

    (119) rtE -> empty .

    SC              reduce using rule 119 (rtE -> empty .)


state 131

    (112) condition -> IF LP . expresion condRP block con2
    (64) expresion -> . exp ex2
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    expresion                      shift and go to state 175
    valExp                         shift and go to state 108
    term                           shift and go to state 99
    fact                           shift and go to state 109
    exp                            shift and go to state 176
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact4                          shift and go to state 106

state 132

    (59) one_par -> SQ LP . exp p_fill RP SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 177
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact4                          shift and go to state 106
    fact                           shift and go to state 109

state 133

    (45) position -> PENP LP . exp C exp RP SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 178
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 134

    (50) penwrite -> PENX exp . SC

    SC              shift and go to state 179


state 135

    (63) p_arc -> ARC LP . exp RP SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 180
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 136

    (90) fact5 -> LB . exp RB
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 181
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 137

    (89) fact5 -> LC . exp RC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 182
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 138

    (105) funEra -> LP .

    LP              reduce using rule 105 (funEra -> LP .)
    VALI            reduce using rule 105 (funEra -> LP .)
    VALF            reduce using rule 105 (funEra -> LP .)
    ID              reduce using rule 105 (funEra -> LP .)
    RP              reduce using rule 105 (funEra -> LP .)


state 139

    (104) funCall -> funEra . func2 RP
    (106) func2 -> . func4 func3
    (107) func2 -> . empty
    (110) func4 -> . exp
    (140) empty -> .
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    RP              reduce using rule 140 (empty -> .)
    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    func2                          shift and go to state 183
    term                           shift and go to state 99
    valExp                         shift and go to state 108
    func4                          shift and go to state 184
    fact                           shift and go to state 109
    exp                            shift and go to state 185
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    empty                          shift and go to state 186
    fact4                          shift and go to state 106

state 140

    (91) fact5 -> funCall .

    M               reduce using rule 91 (fact5 -> funCall .)
    DIV             reduce using rule 91 (fact5 -> funCall .)
    ADD             reduce using rule 91 (fact5 -> funCall .)
    SUB             reduce using rule 91 (fact5 -> funCall .)
    RB              reduce using rule 91 (fact5 -> funCall .)
    RC              reduce using rule 91 (fact5 -> funCall .)
    SC              reduce using rule 91 (fact5 -> funCall .)
    LB              reduce using rule 91 (fact5 -> funCall .)
    C               reduce using rule 91 (fact5 -> funCall .)
    RP              reduce using rule 91 (fact5 -> funCall .)
    LT              reduce using rule 91 (fact5 -> funCall .)
    MT              reduce using rule 91 (fact5 -> funCall .)
    D               reduce using rule 91 (fact5 -> funCall .)
    SEQ             reduce using rule 91 (fact5 -> funCall .)
    EQ              reduce using rule 91 (fact5 -> funCall .)
    LP              reduce using rule 91 (fact5 -> funCall .)


state 141

    (92) fact5 -> empty .

    M               reduce using rule 92 (fact5 -> empty .)
    DIV             reduce using rule 92 (fact5 -> empty .)
    ADD             reduce using rule 92 (fact5 -> empty .)
    SUB             reduce using rule 92 (fact5 -> empty .)
    RB              reduce using rule 92 (fact5 -> empty .)
    RC              reduce using rule 92 (fact5 -> empty .)
    SC              reduce using rule 92 (fact5 -> empty .)
    LB              reduce using rule 92 (fact5 -> empty .)
    C               reduce using rule 92 (fact5 -> empty .)
    RP              reduce using rule 92 (fact5 -> empty .)
    LT              reduce using rule 92 (fact5 -> empty .)
    MT              reduce using rule 92 (fact5 -> empty .)
    D               reduce using rule 92 (fact5 -> empty .)
    SEQ             reduce using rule 92 (fact5 -> empty .)
    EQ              reduce using rule 92 (fact5 -> empty .)
    LP              reduce using rule 92 (fact5 -> empty .)


state 142

    (97) WID -> factID fact5 . WID2
    (98) WID2 -> . assigment
    (99) WID2 -> . funCall SC
    (100) assigment -> . EQ tipeAss
    (104) funCall -> . funEra func2 RP
    (105) funEra -> . LP

    EQ              shift and go to state 190
    LP              shift and go to state 138

    assigment                      shift and go to state 187
    funEra                         shift and go to state 139
    funCall                        shift and go to state 188
    WID2                           shift and go to state 189

state 143

    (18) fun4 -> C fun5 . fun4
    (18) fun4 -> . C fun5 fun4
    (19) fun4 -> . empty
    (140) empty -> .

    C               shift and go to state 91
    RP              reduce using rule 140 (empty -> .)

    fun4                           shift and go to state 191
    empty                          shift and go to state 92

state 144

    (26) var33 -> C . varSave var5 var4 var33
    (28) varSave -> . ID

    ID              shift and go to state 37

    varSave                        shift and go to state 192

state 145

    (25) var3 -> varSave var5 var4 var33 .

    SC              reduce using rule 25 (var3 -> varSave var5 var4 var33 .)


state 146

    (27) var33 -> empty .

    SC              reduce using rule 27 (var33 -> empty .)


state 147

    (35) var6 -> LB . LP exp C exp RP var61 RB

    LP              shift and go to state 193


state 148

    (36) var6 -> LC . exp var62 RC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    valExp                         shift and go to state 108
    term                           shift and go to state 99
    exp                            shift and go to state 194
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 149

    (29) var4 -> EQ var6 .

    C               reduce using rule 29 (var4 -> EQ var6 .)
    SC              reduce using rule 29 (var4 -> EQ var6 .)


state 150

    (34) var6 -> exp .

    C               reduce using rule 34 (var6 -> exp .)
    SC              reduce using rule 34 (var6 -> exp .)


state 151

    (71) exp -> term exp2 .

    C               reduce using rule 71 (exp -> term exp2 .)
    RC              reduce using rule 71 (exp -> term exp2 .)
    RP              reduce using rule 71 (exp -> term exp2 .)
    SC              reduce using rule 71 (exp -> term exp2 .)
    RB              reduce using rule 71 (exp -> term exp2 .)
    LB              reduce using rule 71 (exp -> term exp2 .)
    LT              reduce using rule 71 (exp -> term exp2 .)
    MT              reduce using rule 71 (exp -> term exp2 .)
    D               reduce using rule 71 (exp -> term exp2 .)
    SEQ             reduce using rule 71 (exp -> term exp2 .)


state 152

    (72) exp2 -> exp4 . exp3 exp
    (73) exp2 -> exp4 . empty
    (75) exp3 -> . ADD
    (76) exp3 -> . SUB
    (140) empty -> .

    ADD             shift and go to state 197
    SUB             shift and go to state 195
    RB              reduce using rule 140 (empty -> .)
    RC              reduce using rule 140 (empty -> .)
    SC              reduce using rule 140 (empty -> .)
    LB              reduce using rule 140 (empty -> .)
    C               reduce using rule 140 (empty -> .)
    RP              reduce using rule 140 (empty -> .)
    LT              reduce using rule 140 (empty -> .)
    MT              reduce using rule 140 (empty -> .)
    D               reduce using rule 140 (empty -> .)
    SEQ             reduce using rule 140 (empty -> .)

    exp3                           shift and go to state 196
    empty                          shift and go to state 198

state 153

    (74) exp4 -> empty .

    ADD             reduce using rule 74 (exp4 -> empty .)
    SUB             reduce using rule 74 (exp4 -> empty .)
    RB              reduce using rule 74 (exp4 -> empty .)
    RC              reduce using rule 74 (exp4 -> empty .)
    SC              reduce using rule 74 (exp4 -> empty .)
    LB              reduce using rule 74 (exp4 -> empty .)
    C               reduce using rule 74 (exp4 -> empty .)
    RP              reduce using rule 74 (exp4 -> empty .)
    LT              reduce using rule 74 (exp4 -> empty .)
    MT              reduce using rule 74 (exp4 -> empty .)
    D               reduce using rule 74 (exp4 -> empty .)
    SEQ             reduce using rule 74 (exp4 -> empty .)


state 154

    (42) var52 -> exp RB .

    EQ              reduce using rule 42 (var52 -> exp RB .)
    C               reduce using rule 42 (var52 -> exp RB .)
    SC              reduce using rule 42 (var52 -> exp RB .)


state 155

    (87) fact4 -> factID fact5 .

    M               reduce using rule 87 (fact4 -> factID fact5 .)
    DIV             reduce using rule 87 (fact4 -> factID fact5 .)
    ADD             reduce using rule 87 (fact4 -> factID fact5 .)
    SUB             reduce using rule 87 (fact4 -> factID fact5 .)
    C               reduce using rule 87 (fact4 -> factID fact5 .)
    RP              reduce using rule 87 (fact4 -> factID fact5 .)
    RC              reduce using rule 87 (fact4 -> factID fact5 .)
    LT              reduce using rule 87 (fact4 -> factID fact5 .)
    MT              reduce using rule 87 (fact4 -> factID fact5 .)
    D               reduce using rule 87 (fact4 -> factID fact5 .)
    SEQ             reduce using rule 87 (fact4 -> factID fact5 .)
    SC              reduce using rule 87 (fact4 -> factID fact5 .)
    RB              reduce using rule 87 (fact4 -> factID fact5 .)
    LB              reduce using rule 87 (fact4 -> factID fact5 .)


state 156

    (83) fact -> fact2 exp . RP

    RP              shift and go to state 199


state 157

    (78) term2 -> term4 . term3 term
    (79) term2 -> term4 . empty
    (81) term3 -> . M
    (82) term3 -> . DIV
    (140) empty -> .

    M               shift and go to state 201
    DIV             shift and go to state 202
    ADD             reduce using rule 140 (empty -> .)
    SUB             reduce using rule 140 (empty -> .)
    RB              reduce using rule 140 (empty -> .)
    RC              reduce using rule 140 (empty -> .)
    SC              reduce using rule 140 (empty -> .)
    LB              reduce using rule 140 (empty -> .)
    C               reduce using rule 140 (empty -> .)
    RP              reduce using rule 140 (empty -> .)
    LT              reduce using rule 140 (empty -> .)
    MT              reduce using rule 140 (empty -> .)
    D               reduce using rule 140 (empty -> .)
    SEQ             reduce using rule 140 (empty -> .)

    term3                          shift and go to state 200
    empty                          shift and go to state 203

state 158

    (77) term -> fact term2 .

    ADD             reduce using rule 77 (term -> fact term2 .)
    SUB             reduce using rule 77 (term -> fact term2 .)
    RC              reduce using rule 77 (term -> fact term2 .)
    SC              reduce using rule 77 (term -> fact term2 .)
    RP              reduce using rule 77 (term -> fact term2 .)
    C               reduce using rule 77 (term -> fact term2 .)
    LT              reduce using rule 77 (term -> fact term2 .)
    MT              reduce using rule 77 (term -> fact term2 .)
    D               reduce using rule 77 (term -> fact term2 .)
    SEQ             reduce using rule 77 (term -> fact term2 .)
    RB              reduce using rule 77 (term -> fact term2 .)
    LB              reduce using rule 77 (term -> fact term2 .)


state 159

    (80) term4 -> empty .

    M               reduce using rule 80 (term4 -> empty .)
    DIV             reduce using rule 80 (term4 -> empty .)
    ADD             reduce using rule 80 (term4 -> empty .)
    SUB             reduce using rule 80 (term4 -> empty .)
    RB              reduce using rule 80 (term4 -> empty .)
    RC              reduce using rule 80 (term4 -> empty .)
    SC              reduce using rule 80 (term4 -> empty .)
    LB              reduce using rule 80 (term4 -> empty .)
    C               reduce using rule 80 (term4 -> empty .)
    RP              reduce using rule 80 (term4 -> empty .)
    LT              reduce using rule 80 (term4 -> empty .)
    MT              reduce using rule 80 (term4 -> empty .)
    D               reduce using rule 80 (term4 -> empty .)
    SEQ             reduce using rule 80 (term4 -> empty .)


state 160

    (41) var51 -> exp RC .

    EQ              reduce using rule 41 (var51 -> exp RC .)
    C               reduce using rule 41 (var51 -> exp RC .)
    SC              reduce using rule 41 (var51 -> exp RC .)


state 161

    (48) colors -> BACO LP exp . C exp C exp RP SC

    C               shift and go to state 204


state 162

    (58) one_par -> CIR LP exp . p_fill RP SC
    (55) p_fill -> . C FILL
    (56) p_fill -> . empty
    (140) empty -> .

    C               shift and go to state 205
    RP              reduce using rule 140 (empty -> .)

    empty                          shift and go to state 207
    p_fill                         shift and go to state 206

state 163

    (54) rect -> REC LP exp . C exp p_fill RP SC

    C               shift and go to state 208


state 164

    (53) mueve2 -> LP exp . C A exp RP SC

    C               shift and go to state 209


state 165

    (47) colors -> SETC LP exp . C exp C exp RP SC

    C               shift and go to state 210


state 166

    (60) poly -> POL LP idList . p_fill RP SC
    (55) p_fill -> . C FILL
    (56) p_fill -> . empty
    (140) empty -> .

    C               shift and go to state 205
    RP              reduce using rule 140 (empty -> .)

    empty                          shift and go to state 207
    p_fill                         shift and go to state 211

state 167

    (62) idList -> ID .

    RP              reduce using rule 62 (idList -> ID .)
    C               reduce using rule 62 (idList -> ID .)


state 168

    (51) penwrite -> PENY exp SC .

    IF              reduce using rule 51 (penwrite -> PENY exp SC .)
    RE              reduce using rule 51 (penwrite -> PENY exp SC .)
    RT              reduce using rule 51 (penwrite -> PENY exp SC .)
    REC             reduce using rule 51 (penwrite -> PENY exp SC .)
    TRI             reduce using rule 51 (penwrite -> PENY exp SC .)
    POL             reduce using rule 51 (penwrite -> PENY exp SC .)
    LS              reduce using rule 51 (penwrite -> PENY exp SC .)
    CIR             reduce using rule 51 (penwrite -> PENY exp SC .)
    SQ              reduce using rule 51 (penwrite -> PENY exp SC .)
    ARC             reduce using rule 51 (penwrite -> PENY exp SC .)
    PENC            reduce using rule 51 (penwrite -> PENY exp SC .)
    SETC            reduce using rule 51 (penwrite -> PENY exp SC .)
    BACO            reduce using rule 51 (penwrite -> PENY exp SC .)
    PENW            reduce using rule 51 (penwrite -> PENY exp SC .)
    LI              reduce using rule 51 (penwrite -> PENY exp SC .)
    PENP            reduce using rule 51 (penwrite -> PENY exp SC .)
    PENX            reduce using rule 51 (penwrite -> PENY exp SC .)
    PENY            reduce using rule 51 (penwrite -> PENY exp SC .)
    ID              reduce using rule 51 (penwrite -> PENY exp SC .)
    RB              reduce using rule 51 (penwrite -> PENY exp SC .)


state 169

    (49) p_width -> PENW LP exp . RP SC

    RP              shift and go to state 212


state 170

    (95) rep -> RE rep3 block .

    IF              reduce using rule 95 (rep -> RE rep3 block .)
    RE              reduce using rule 95 (rep -> RE rep3 block .)
    RT              reduce using rule 95 (rep -> RE rep3 block .)
    REC             reduce using rule 95 (rep -> RE rep3 block .)
    TRI             reduce using rule 95 (rep -> RE rep3 block .)
    POL             reduce using rule 95 (rep -> RE rep3 block .)
    LS              reduce using rule 95 (rep -> RE rep3 block .)
    CIR             reduce using rule 95 (rep -> RE rep3 block .)
    SQ              reduce using rule 95 (rep -> RE rep3 block .)
    ARC             reduce using rule 95 (rep -> RE rep3 block .)
    PENC            reduce using rule 95 (rep -> RE rep3 block .)
    SETC            reduce using rule 95 (rep -> RE rep3 block .)
    BACO            reduce using rule 95 (rep -> RE rep3 block .)
    PENW            reduce using rule 95 (rep -> RE rep3 block .)
    LI              reduce using rule 95 (rep -> RE rep3 block .)
    PENP            reduce using rule 95 (rep -> RE rep3 block .)
    PENX            reduce using rule 95 (rep -> RE rep3 block .)
    PENY            reduce using rule 95 (rep -> RE rep3 block .)
    ID              reduce using rule 95 (rep -> RE rep3 block .)
    RB              reduce using rule 95 (rep -> RE rep3 block .)


state 171

    (46) colors -> PENC LP exp . C exp C exp RP SC

    C               shift and go to state 213


state 172

    (61) lstrip -> LS LP idList . RP SC

    RP              shift and go to state 214


state 173

    (57) tria -> TRI LP LC . exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 215
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact4                          shift and go to state 106
    fact                           shift and go to state 109

state 174

    (117) rt -> RT rtE SC .

    IF              reduce using rule 117 (rt -> RT rtE SC .)
    RE              reduce using rule 117 (rt -> RT rtE SC .)
    RT              reduce using rule 117 (rt -> RT rtE SC .)
    REC             reduce using rule 117 (rt -> RT rtE SC .)
    TRI             reduce using rule 117 (rt -> RT rtE SC .)
    POL             reduce using rule 117 (rt -> RT rtE SC .)
    LS              reduce using rule 117 (rt -> RT rtE SC .)
    CIR             reduce using rule 117 (rt -> RT rtE SC .)
    SQ              reduce using rule 117 (rt -> RT rtE SC .)
    ARC             reduce using rule 117 (rt -> RT rtE SC .)
    PENC            reduce using rule 117 (rt -> RT rtE SC .)
    SETC            reduce using rule 117 (rt -> RT rtE SC .)
    BACO            reduce using rule 117 (rt -> RT rtE SC .)
    PENW            reduce using rule 117 (rt -> RT rtE SC .)
    LI              reduce using rule 117 (rt -> RT rtE SC .)
    PENP            reduce using rule 117 (rt -> RT rtE SC .)
    PENX            reduce using rule 117 (rt -> RT rtE SC .)
    PENY            reduce using rule 117 (rt -> RT rtE SC .)
    ID              reduce using rule 117 (rt -> RT rtE SC .)
    RB              reduce using rule 117 (rt -> RT rtE SC .)


state 175

    (112) condition -> IF LP expresion . condRP block con2
    (113) condRP -> . RP

    RP              shift and go to state 216

    condRP                         shift and go to state 217

state 176

    (64) expresion -> exp . ex2
    (65) ex2 -> . ex3 exp
    (66) ex2 -> . empty
    (67) ex3 -> . LT
    (68) ex3 -> . MT
    (69) ex3 -> . D
    (70) ex3 -> . SEQ
    (140) empty -> .

    LT              shift and go to state 221
    MT              shift and go to state 220
    D               shift and go to state 218
    SEQ             shift and go to state 219
    RP              reduce using rule 140 (empty -> .)

    empty                          shift and go to state 224
    ex2                            shift and go to state 222
    ex3                            shift and go to state 223

state 177

    (59) one_par -> SQ LP exp . p_fill RP SC
    (55) p_fill -> . C FILL
    (56) p_fill -> . empty
    (140) empty -> .

    C               shift and go to state 205
    RP              reduce using rule 140 (empty -> .)

    empty                          shift and go to state 207
    p_fill                         shift and go to state 225

state 178

    (45) position -> PENP LP exp . C exp RP SC

    C               shift and go to state 226


state 179

    (50) penwrite -> PENX exp SC .

    IF              reduce using rule 50 (penwrite -> PENX exp SC .)
    RE              reduce using rule 50 (penwrite -> PENX exp SC .)
    RT              reduce using rule 50 (penwrite -> PENX exp SC .)
    REC             reduce using rule 50 (penwrite -> PENX exp SC .)
    TRI             reduce using rule 50 (penwrite -> PENX exp SC .)
    POL             reduce using rule 50 (penwrite -> PENX exp SC .)
    LS              reduce using rule 50 (penwrite -> PENX exp SC .)
    CIR             reduce using rule 50 (penwrite -> PENX exp SC .)
    SQ              reduce using rule 50 (penwrite -> PENX exp SC .)
    ARC             reduce using rule 50 (penwrite -> PENX exp SC .)
    PENC            reduce using rule 50 (penwrite -> PENX exp SC .)
    SETC            reduce using rule 50 (penwrite -> PENX exp SC .)
    BACO            reduce using rule 50 (penwrite -> PENX exp SC .)
    PENW            reduce using rule 50 (penwrite -> PENX exp SC .)
    LI              reduce using rule 50 (penwrite -> PENX exp SC .)
    PENP            reduce using rule 50 (penwrite -> PENX exp SC .)
    PENX            reduce using rule 50 (penwrite -> PENX exp SC .)
    PENY            reduce using rule 50 (penwrite -> PENX exp SC .)
    ID              reduce using rule 50 (penwrite -> PENX exp SC .)
    RB              reduce using rule 50 (penwrite -> PENX exp SC .)


state 180

    (63) p_arc -> ARC LP exp . RP SC

    RP              shift and go to state 227


state 181

    (90) fact5 -> LB exp . RB

    RB              shift and go to state 228


state 182

    (89) fact5 -> LC exp . RC

    RC              shift and go to state 229


state 183

    (104) funCall -> funEra func2 . RP

    RP              shift and go to state 230


state 184

    (106) func2 -> func4 . func3
    (108) func3 -> . C func4 func3
    (109) func3 -> . empty
    (140) empty -> .

    C               shift and go to state 232
    RP              reduce using rule 140 (empty -> .)

    func3                          shift and go to state 231
    empty                          shift and go to state 233

state 185

    (110) func4 -> exp .

    C               reduce using rule 110 (func4 -> exp .)
    RP              reduce using rule 110 (func4 -> exp .)


state 186

    (107) func2 -> empty .

    RP              reduce using rule 107 (func2 -> empty .)


state 187

    (98) WID2 -> assigment .

    IF              reduce using rule 98 (WID2 -> assigment .)
    RE              reduce using rule 98 (WID2 -> assigment .)
    RT              reduce using rule 98 (WID2 -> assigment .)
    REC             reduce using rule 98 (WID2 -> assigment .)
    TRI             reduce using rule 98 (WID2 -> assigment .)
    POL             reduce using rule 98 (WID2 -> assigment .)
    LS              reduce using rule 98 (WID2 -> assigment .)
    CIR             reduce using rule 98 (WID2 -> assigment .)
    SQ              reduce using rule 98 (WID2 -> assigment .)
    ARC             reduce using rule 98 (WID2 -> assigment .)
    PENC            reduce using rule 98 (WID2 -> assigment .)
    SETC            reduce using rule 98 (WID2 -> assigment .)
    BACO            reduce using rule 98 (WID2 -> assigment .)
    PENW            reduce using rule 98 (WID2 -> assigment .)
    LI              reduce using rule 98 (WID2 -> assigment .)
    PENP            reduce using rule 98 (WID2 -> assigment .)
    PENX            reduce using rule 98 (WID2 -> assigment .)
    PENY            reduce using rule 98 (WID2 -> assigment .)
    ID              reduce using rule 98 (WID2 -> assigment .)
    RB              reduce using rule 98 (WID2 -> assigment .)


state 188

    (99) WID2 -> funCall . SC

    SC              shift and go to state 234


state 189

    (97) WID -> factID fact5 WID2 .

    IF              reduce using rule 97 (WID -> factID fact5 WID2 .)
    RE              reduce using rule 97 (WID -> factID fact5 WID2 .)
    RT              reduce using rule 97 (WID -> factID fact5 WID2 .)
    REC             reduce using rule 97 (WID -> factID fact5 WID2 .)
    TRI             reduce using rule 97 (WID -> factID fact5 WID2 .)
    POL             reduce using rule 97 (WID -> factID fact5 WID2 .)
    LS              reduce using rule 97 (WID -> factID fact5 WID2 .)
    CIR             reduce using rule 97 (WID -> factID fact5 WID2 .)
    SQ              reduce using rule 97 (WID -> factID fact5 WID2 .)
    ARC             reduce using rule 97 (WID -> factID fact5 WID2 .)
    PENC            reduce using rule 97 (WID -> factID fact5 WID2 .)
    SETC            reduce using rule 97 (WID -> factID fact5 WID2 .)
    BACO            reduce using rule 97 (WID -> factID fact5 WID2 .)
    PENW            reduce using rule 97 (WID -> factID fact5 WID2 .)
    LI              reduce using rule 97 (WID -> factID fact5 WID2 .)
    PENP            reduce using rule 97 (WID -> factID fact5 WID2 .)
    PENX            reduce using rule 97 (WID -> factID fact5 WID2 .)
    PENY            reduce using rule 97 (WID -> factID fact5 WID2 .)
    ID              reduce using rule 97 (WID -> factID fact5 WID2 .)
    RB              reduce using rule 97 (WID -> factID fact5 WID2 .)


state 190

    (100) assigment -> EQ . tipeAss
    (101) tipeAss -> . exp SC
    (102) tipeAss -> . listAss
    (103) tipeAss -> . WID
    (71) exp -> . term exp2
    (111) listAss -> . LB exp C exp RB SC
    (97) WID -> . factID fact5 WID2
    (77) term -> . fact term2
    (88) factID -> . ID
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF

    LB              shift and go to state 235
    ID              shift and go to state 77
    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103

    term                           shift and go to state 99
    WID                            shift and go to state 237
    valExp                         shift and go to state 108
    tipeAss                        shift and go to state 236
    factID                         shift and go to state 239
    fact                           shift and go to state 109
    exp                            shift and go to state 238
    fact2                          shift and go to state 105
    fact4                          shift and go to state 106
    listAss                        shift and go to state 240

state 191

    (18) fun4 -> C fun5 fun4 .

    RP              reduce using rule 18 (fun4 -> C fun5 fun4 .)


state 192

    (26) var33 -> C varSave . var5 var4 var33
    (31) var5 -> . LC var51
    (32) var5 -> . LB var52
    (33) var5 -> . empty
    (140) empty -> .

    LC              shift and go to state 48
    LB              shift and go to state 47
    EQ              reduce using rule 140 (empty -> .)
    C               reduce using rule 140 (empty -> .)
    SC              reduce using rule 140 (empty -> .)

    var5                           shift and go to state 241
    empty                          shift and go to state 49

state 193

    (35) var6 -> LB LP . exp C exp RP var61 RB
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 242
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 194

    (36) var6 -> LC exp . var62 RC
    (39) var62 -> . C exp var62
    (40) var62 -> . empty
    (140) empty -> .

    C               shift and go to state 243
    RC              reduce using rule 140 (empty -> .)

    var62                          shift and go to state 244
    empty                          shift and go to state 245

state 195

    (76) exp3 -> SUB .

    LP              reduce using rule 76 (exp3 -> SUB .)
    VALI            reduce using rule 76 (exp3 -> SUB .)
    VALF            reduce using rule 76 (exp3 -> SUB .)
    ID              reduce using rule 76 (exp3 -> SUB .)


state 196

    (72) exp2 -> exp4 exp3 . exp
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 246
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 197

    (75) exp3 -> ADD .

    LP              reduce using rule 75 (exp3 -> ADD .)
    VALI            reduce using rule 75 (exp3 -> ADD .)
    VALF            reduce using rule 75 (exp3 -> ADD .)
    ID              reduce using rule 75 (exp3 -> ADD .)


state 198

    (73) exp2 -> exp4 empty .

    RB              reduce using rule 73 (exp2 -> exp4 empty .)
    RC              reduce using rule 73 (exp2 -> exp4 empty .)
    SC              reduce using rule 73 (exp2 -> exp4 empty .)
    LB              reduce using rule 73 (exp2 -> exp4 empty .)
    C               reduce using rule 73 (exp2 -> exp4 empty .)
    RP              reduce using rule 73 (exp2 -> exp4 empty .)
    LT              reduce using rule 73 (exp2 -> exp4 empty .)
    MT              reduce using rule 73 (exp2 -> exp4 empty .)
    D               reduce using rule 73 (exp2 -> exp4 empty .)
    SEQ             reduce using rule 73 (exp2 -> exp4 empty .)


state 199

    (83) fact -> fact2 exp RP .

    M               reduce using rule 83 (fact -> fact2 exp RP .)
    DIV             reduce using rule 83 (fact -> fact2 exp RP .)
    ADD             reduce using rule 83 (fact -> fact2 exp RP .)
    SUB             reduce using rule 83 (fact -> fact2 exp RP .)
    RB              reduce using rule 83 (fact -> fact2 exp RP .)
    C               reduce using rule 83 (fact -> fact2 exp RP .)
    RP              reduce using rule 83 (fact -> fact2 exp RP .)
    RC              reduce using rule 83 (fact -> fact2 exp RP .)
    SC              reduce using rule 83 (fact -> fact2 exp RP .)
    LB              reduce using rule 83 (fact -> fact2 exp RP .)
    LT              reduce using rule 83 (fact -> fact2 exp RP .)
    MT              reduce using rule 83 (fact -> fact2 exp RP .)
    D               reduce using rule 83 (fact -> fact2 exp RP .)
    SEQ             reduce using rule 83 (fact -> fact2 exp RP .)


state 200

    (78) term2 -> term4 term3 . term
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 247
    valExp                         shift and go to state 108
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 201

    (81) term3 -> M .

    LP              reduce using rule 81 (term3 -> M .)
    VALI            reduce using rule 81 (term3 -> M .)
    VALF            reduce using rule 81 (term3 -> M .)
    ID              reduce using rule 81 (term3 -> M .)


state 202

    (82) term3 -> DIV .

    LP              reduce using rule 82 (term3 -> DIV .)
    VALI            reduce using rule 82 (term3 -> DIV .)
    VALF            reduce using rule 82 (term3 -> DIV .)
    ID              reduce using rule 82 (term3 -> DIV .)


state 203

    (79) term2 -> term4 empty .

    ADD             reduce using rule 79 (term2 -> term4 empty .)
    SUB             reduce using rule 79 (term2 -> term4 empty .)
    RB              reduce using rule 79 (term2 -> term4 empty .)
    RC              reduce using rule 79 (term2 -> term4 empty .)
    SC              reduce using rule 79 (term2 -> term4 empty .)
    LB              reduce using rule 79 (term2 -> term4 empty .)
    C               reduce using rule 79 (term2 -> term4 empty .)
    RP              reduce using rule 79 (term2 -> term4 empty .)
    LT              reduce using rule 79 (term2 -> term4 empty .)
    MT              reduce using rule 79 (term2 -> term4 empty .)
    D               reduce using rule 79 (term2 -> term4 empty .)
    SEQ             reduce using rule 79 (term2 -> term4 empty .)


state 204

    (48) colors -> BACO LP exp C . exp C exp RP SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 248
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 205

    (55) p_fill -> C . FILL

    FILL            shift and go to state 249


state 206

    (58) one_par -> CIR LP exp p_fill . RP SC

    RP              shift and go to state 250


state 207

    (56) p_fill -> empty .

    RP              reduce using rule 56 (p_fill -> empty .)


state 208

    (54) rect -> REC LP exp C . exp p_fill RP SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 251
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact4                          shift and go to state 106
    fact                           shift and go to state 109

state 209

    (53) mueve2 -> LP exp C . A exp RP SC

    A               shift and go to state 252


state 210

    (47) colors -> SETC LP exp C . exp C exp RP SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 253
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 211

    (60) poly -> POL LP idList p_fill . RP SC

    RP              shift and go to state 254


state 212

    (49) p_width -> PENW LP exp RP . SC

    SC              shift and go to state 255


state 213

    (46) colors -> PENC LP exp C . exp C exp RP SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 256
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 214

    (61) lstrip -> LS LP idList RP . SC

    SC              shift and go to state 257


state 215

    (57) tria -> TRI LP LC exp . C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC

    C               shift and go to state 258


state 216

    (113) condRP -> RP .

    LB              reduce using rule 113 (condRP -> RP .)


state 217

    (112) condition -> IF LP expresion condRP . block con2
    (120) block -> . LB block3 RB

    LB              shift and go to state 38

    block                          shift and go to state 259

state 218

    (69) ex3 -> D .

    LP              reduce using rule 69 (ex3 -> D .)
    VALI            reduce using rule 69 (ex3 -> D .)
    VALF            reduce using rule 69 (ex3 -> D .)
    ID              reduce using rule 69 (ex3 -> D .)


state 219

    (70) ex3 -> SEQ .

    LP              reduce using rule 70 (ex3 -> SEQ .)
    VALI            reduce using rule 70 (ex3 -> SEQ .)
    VALF            reduce using rule 70 (ex3 -> SEQ .)
    ID              reduce using rule 70 (ex3 -> SEQ .)


state 220

    (68) ex3 -> MT .

    LP              reduce using rule 68 (ex3 -> MT .)
    VALI            reduce using rule 68 (ex3 -> MT .)
    VALF            reduce using rule 68 (ex3 -> MT .)
    ID              reduce using rule 68 (ex3 -> MT .)


state 221

    (67) ex3 -> LT .

    LP              reduce using rule 67 (ex3 -> LT .)
    VALI            reduce using rule 67 (ex3 -> LT .)
    VALF            reduce using rule 67 (ex3 -> LT .)
    ID              reduce using rule 67 (ex3 -> LT .)


state 222

    (64) expresion -> exp ex2 .

    RP              reduce using rule 64 (expresion -> exp ex2 .)


state 223

    (65) ex2 -> ex3 . exp
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 260
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 224

    (66) ex2 -> empty .

    RP              reduce using rule 66 (ex2 -> empty .)


state 225

    (59) one_par -> SQ LP exp p_fill . RP SC

    RP              shift and go to state 261


state 226

    (45) position -> PENP LP exp C . exp RP SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 262
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 227

    (63) p_arc -> ARC LP exp RP . SC

    SC              shift and go to state 263


state 228

    (90) fact5 -> LB exp RB .

    M               reduce using rule 90 (fact5 -> LB exp RB .)
    DIV             reduce using rule 90 (fact5 -> LB exp RB .)
    ADD             reduce using rule 90 (fact5 -> LB exp RB .)
    SUB             reduce using rule 90 (fact5 -> LB exp RB .)
    RB              reduce using rule 90 (fact5 -> LB exp RB .)
    RC              reduce using rule 90 (fact5 -> LB exp RB .)
    SC              reduce using rule 90 (fact5 -> LB exp RB .)
    LB              reduce using rule 90 (fact5 -> LB exp RB .)
    C               reduce using rule 90 (fact5 -> LB exp RB .)
    RP              reduce using rule 90 (fact5 -> LB exp RB .)
    LT              reduce using rule 90 (fact5 -> LB exp RB .)
    MT              reduce using rule 90 (fact5 -> LB exp RB .)
    D               reduce using rule 90 (fact5 -> LB exp RB .)
    SEQ             reduce using rule 90 (fact5 -> LB exp RB .)
    EQ              reduce using rule 90 (fact5 -> LB exp RB .)
    LP              reduce using rule 90 (fact5 -> LB exp RB .)


state 229

    (89) fact5 -> LC exp RC .

    M               reduce using rule 89 (fact5 -> LC exp RC .)
    DIV             reduce using rule 89 (fact5 -> LC exp RC .)
    ADD             reduce using rule 89 (fact5 -> LC exp RC .)
    SUB             reduce using rule 89 (fact5 -> LC exp RC .)
    RB              reduce using rule 89 (fact5 -> LC exp RC .)
    RC              reduce using rule 89 (fact5 -> LC exp RC .)
    SC              reduce using rule 89 (fact5 -> LC exp RC .)
    LB              reduce using rule 89 (fact5 -> LC exp RC .)
    C               reduce using rule 89 (fact5 -> LC exp RC .)
    RP              reduce using rule 89 (fact5 -> LC exp RC .)
    LT              reduce using rule 89 (fact5 -> LC exp RC .)
    MT              reduce using rule 89 (fact5 -> LC exp RC .)
    D               reduce using rule 89 (fact5 -> LC exp RC .)
    SEQ             reduce using rule 89 (fact5 -> LC exp RC .)
    EQ              reduce using rule 89 (fact5 -> LC exp RC .)
    LP              reduce using rule 89 (fact5 -> LC exp RC .)


state 230

    (104) funCall -> funEra func2 RP .

    EQ              reduce using rule 104 (funCall -> funEra func2 RP .)
    LP              reduce using rule 104 (funCall -> funEra func2 RP .)
    M               reduce using rule 104 (funCall -> funEra func2 RP .)
    DIV             reduce using rule 104 (funCall -> funEra func2 RP .)
    ADD             reduce using rule 104 (funCall -> funEra func2 RP .)
    SUB             reduce using rule 104 (funCall -> funEra func2 RP .)
    SC              reduce using rule 104 (funCall -> funEra func2 RP .)
    RB              reduce using rule 104 (funCall -> funEra func2 RP .)
    RC              reduce using rule 104 (funCall -> funEra func2 RP .)
    LB              reduce using rule 104 (funCall -> funEra func2 RP .)
    C               reduce using rule 104 (funCall -> funEra func2 RP .)
    RP              reduce using rule 104 (funCall -> funEra func2 RP .)
    LT              reduce using rule 104 (funCall -> funEra func2 RP .)
    MT              reduce using rule 104 (funCall -> funEra func2 RP .)
    D               reduce using rule 104 (funCall -> funEra func2 RP .)
    SEQ             reduce using rule 104 (funCall -> funEra func2 RP .)


state 231

    (106) func2 -> func4 func3 .

    RP              reduce using rule 106 (func2 -> func4 func3 .)


state 232

    (108) func3 -> C . func4 func3
    (110) func4 -> . exp
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    func4                          shift and go to state 264
    exp                            shift and go to state 185
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 233

    (109) func3 -> empty .

    RP              reduce using rule 109 (func3 -> empty .)


state 234

    (99) WID2 -> funCall SC .

    IF              reduce using rule 99 (WID2 -> funCall SC .)
    RE              reduce using rule 99 (WID2 -> funCall SC .)
    RT              reduce using rule 99 (WID2 -> funCall SC .)
    REC             reduce using rule 99 (WID2 -> funCall SC .)
    TRI             reduce using rule 99 (WID2 -> funCall SC .)
    POL             reduce using rule 99 (WID2 -> funCall SC .)
    LS              reduce using rule 99 (WID2 -> funCall SC .)
    CIR             reduce using rule 99 (WID2 -> funCall SC .)
    SQ              reduce using rule 99 (WID2 -> funCall SC .)
    ARC             reduce using rule 99 (WID2 -> funCall SC .)
    PENC            reduce using rule 99 (WID2 -> funCall SC .)
    SETC            reduce using rule 99 (WID2 -> funCall SC .)
    BACO            reduce using rule 99 (WID2 -> funCall SC .)
    PENW            reduce using rule 99 (WID2 -> funCall SC .)
    LI              reduce using rule 99 (WID2 -> funCall SC .)
    PENP            reduce using rule 99 (WID2 -> funCall SC .)
    PENX            reduce using rule 99 (WID2 -> funCall SC .)
    PENY            reduce using rule 99 (WID2 -> funCall SC .)
    ID              reduce using rule 99 (WID2 -> funCall SC .)
    RB              reduce using rule 99 (WID2 -> funCall SC .)


state 235

    (111) listAss -> LB . exp C exp RB SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 265
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 236

    (100) assigment -> EQ tipeAss .

    IF              reduce using rule 100 (assigment -> EQ tipeAss .)
    RE              reduce using rule 100 (assigment -> EQ tipeAss .)
    RT              reduce using rule 100 (assigment -> EQ tipeAss .)
    REC             reduce using rule 100 (assigment -> EQ tipeAss .)
    TRI             reduce using rule 100 (assigment -> EQ tipeAss .)
    POL             reduce using rule 100 (assigment -> EQ tipeAss .)
    LS              reduce using rule 100 (assigment -> EQ tipeAss .)
    CIR             reduce using rule 100 (assigment -> EQ tipeAss .)
    SQ              reduce using rule 100 (assigment -> EQ tipeAss .)
    ARC             reduce using rule 100 (assigment -> EQ tipeAss .)
    PENC            reduce using rule 100 (assigment -> EQ tipeAss .)
    SETC            reduce using rule 100 (assigment -> EQ tipeAss .)
    BACO            reduce using rule 100 (assigment -> EQ tipeAss .)
    PENW            reduce using rule 100 (assigment -> EQ tipeAss .)
    LI              reduce using rule 100 (assigment -> EQ tipeAss .)
    PENP            reduce using rule 100 (assigment -> EQ tipeAss .)
    PENX            reduce using rule 100 (assigment -> EQ tipeAss .)
    PENY            reduce using rule 100 (assigment -> EQ tipeAss .)
    ID              reduce using rule 100 (assigment -> EQ tipeAss .)
    RB              reduce using rule 100 (assigment -> EQ tipeAss .)


state 237

    (103) tipeAss -> WID .

    IF              reduce using rule 103 (tipeAss -> WID .)
    RE              reduce using rule 103 (tipeAss -> WID .)
    RT              reduce using rule 103 (tipeAss -> WID .)
    REC             reduce using rule 103 (tipeAss -> WID .)
    TRI             reduce using rule 103 (tipeAss -> WID .)
    POL             reduce using rule 103 (tipeAss -> WID .)
    LS              reduce using rule 103 (tipeAss -> WID .)
    CIR             reduce using rule 103 (tipeAss -> WID .)
    SQ              reduce using rule 103 (tipeAss -> WID .)
    ARC             reduce using rule 103 (tipeAss -> WID .)
    PENC            reduce using rule 103 (tipeAss -> WID .)
    SETC            reduce using rule 103 (tipeAss -> WID .)
    BACO            reduce using rule 103 (tipeAss -> WID .)
    PENW            reduce using rule 103 (tipeAss -> WID .)
    LI              reduce using rule 103 (tipeAss -> WID .)
    PENP            reduce using rule 103 (tipeAss -> WID .)
    PENX            reduce using rule 103 (tipeAss -> WID .)
    PENY            reduce using rule 103 (tipeAss -> WID .)
    ID              reduce using rule 103 (tipeAss -> WID .)
    RB              reduce using rule 103 (tipeAss -> WID .)


state 238

    (101) tipeAss -> exp . SC

    SC              shift and go to state 266


state 239

    (97) WID -> factID . fact5 WID2
    (87) fact4 -> factID . fact5
    (89) fact5 -> . LC exp RC
    (90) fact5 -> . LB exp RB
    (91) fact5 -> . funCall
    (92) fact5 -> . empty
    (104) funCall -> . funEra func2 RP
    (140) empty -> .
    (105) funEra -> . LP

  ! shift/reduce conflict for LP resolved as shift
    LC              shift and go to state 137
    LB              shift and go to state 136
    EQ              reduce using rule 140 (empty -> .)
    M               reduce using rule 140 (empty -> .)
    DIV             reduce using rule 140 (empty -> .)
    ADD             reduce using rule 140 (empty -> .)
    SUB             reduce using rule 140 (empty -> .)
    SC              reduce using rule 140 (empty -> .)
    LP              shift and go to state 138

  ! LP              [ reduce using rule 140 (empty -> .) ]

    funEra                         shift and go to state 139
    funCall                        shift and go to state 140
    fact5                          shift and go to state 267
    empty                          shift and go to state 141

state 240

    (102) tipeAss -> listAss .

    IF              reduce using rule 102 (tipeAss -> listAss .)
    RE              reduce using rule 102 (tipeAss -> listAss .)
    RT              reduce using rule 102 (tipeAss -> listAss .)
    REC             reduce using rule 102 (tipeAss -> listAss .)
    TRI             reduce using rule 102 (tipeAss -> listAss .)
    POL             reduce using rule 102 (tipeAss -> listAss .)
    LS              reduce using rule 102 (tipeAss -> listAss .)
    CIR             reduce using rule 102 (tipeAss -> listAss .)
    SQ              reduce using rule 102 (tipeAss -> listAss .)
    ARC             reduce using rule 102 (tipeAss -> listAss .)
    PENC            reduce using rule 102 (tipeAss -> listAss .)
    SETC            reduce using rule 102 (tipeAss -> listAss .)
    BACO            reduce using rule 102 (tipeAss -> listAss .)
    PENW            reduce using rule 102 (tipeAss -> listAss .)
    LI              reduce using rule 102 (tipeAss -> listAss .)
    PENP            reduce using rule 102 (tipeAss -> listAss .)
    PENX            reduce using rule 102 (tipeAss -> listAss .)
    PENY            reduce using rule 102 (tipeAss -> listAss .)
    ID              reduce using rule 102 (tipeAss -> listAss .)
    RB              reduce using rule 102 (tipeAss -> listAss .)


state 241

    (26) var33 -> C varSave var5 . var4 var33
    (29) var4 -> . EQ var6
    (30) var4 -> . empty
    (140) empty -> .

    EQ              shift and go to state 97
    C               reduce using rule 140 (empty -> .)
    SC              reduce using rule 140 (empty -> .)

    var4                           shift and go to state 268
    empty                          shift and go to state 98

state 242

    (35) var6 -> LB LP exp . C exp RP var61 RB

    C               shift and go to state 269


state 243

    (39) var62 -> C . exp var62
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    valExp                         shift and go to state 108
    term                           shift and go to state 99
    exp                            shift and go to state 270
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 244

    (36) var6 -> LC exp var62 . RC

    RC              shift and go to state 271


state 245

    (40) var62 -> empty .

    RC              reduce using rule 40 (var62 -> empty .)


state 246

    (72) exp2 -> exp4 exp3 exp .

    RB              reduce using rule 72 (exp2 -> exp4 exp3 exp .)
    RC              reduce using rule 72 (exp2 -> exp4 exp3 exp .)
    SC              reduce using rule 72 (exp2 -> exp4 exp3 exp .)
    LB              reduce using rule 72 (exp2 -> exp4 exp3 exp .)
    C               reduce using rule 72 (exp2 -> exp4 exp3 exp .)
    RP              reduce using rule 72 (exp2 -> exp4 exp3 exp .)
    LT              reduce using rule 72 (exp2 -> exp4 exp3 exp .)
    MT              reduce using rule 72 (exp2 -> exp4 exp3 exp .)
    D               reduce using rule 72 (exp2 -> exp4 exp3 exp .)
    SEQ             reduce using rule 72 (exp2 -> exp4 exp3 exp .)


state 247

    (78) term2 -> term4 term3 term .

    ADD             reduce using rule 78 (term2 -> term4 term3 term .)
    SUB             reduce using rule 78 (term2 -> term4 term3 term .)
    RB              reduce using rule 78 (term2 -> term4 term3 term .)
    RC              reduce using rule 78 (term2 -> term4 term3 term .)
    SC              reduce using rule 78 (term2 -> term4 term3 term .)
    LB              reduce using rule 78 (term2 -> term4 term3 term .)
    C               reduce using rule 78 (term2 -> term4 term3 term .)
    RP              reduce using rule 78 (term2 -> term4 term3 term .)
    LT              reduce using rule 78 (term2 -> term4 term3 term .)
    MT              reduce using rule 78 (term2 -> term4 term3 term .)
    D               reduce using rule 78 (term2 -> term4 term3 term .)
    SEQ             reduce using rule 78 (term2 -> term4 term3 term .)


state 248

    (48) colors -> BACO LP exp C exp . C exp RP SC

    C               shift and go to state 272


state 249

    (55) p_fill -> C FILL .

    RP              reduce using rule 55 (p_fill -> C FILL .)


state 250

    (58) one_par -> CIR LP exp p_fill RP . SC

    SC              shift and go to state 273


state 251

    (54) rect -> REC LP exp C exp . p_fill RP SC
    (55) p_fill -> . C FILL
    (56) p_fill -> . empty
    (140) empty -> .

    C               shift and go to state 205
    RP              reduce using rule 140 (empty -> .)

    empty                          shift and go to state 207
    p_fill                         shift and go to state 274

state 252

    (53) mueve2 -> LP exp C A . exp RP SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 275
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 253

    (47) colors -> SETC LP exp C exp . C exp RP SC

    C               shift and go to state 276


state 254

    (60) poly -> POL LP idList p_fill RP . SC

    SC              shift and go to state 277


state 255

    (49) p_width -> PENW LP exp RP SC .

    IF              reduce using rule 49 (p_width -> PENW LP exp RP SC .)
    RE              reduce using rule 49 (p_width -> PENW LP exp RP SC .)
    RT              reduce using rule 49 (p_width -> PENW LP exp RP SC .)
    REC             reduce using rule 49 (p_width -> PENW LP exp RP SC .)
    TRI             reduce using rule 49 (p_width -> PENW LP exp RP SC .)
    POL             reduce using rule 49 (p_width -> PENW LP exp RP SC .)
    LS              reduce using rule 49 (p_width -> PENW LP exp RP SC .)
    CIR             reduce using rule 49 (p_width -> PENW LP exp RP SC .)
    SQ              reduce using rule 49 (p_width -> PENW LP exp RP SC .)
    ARC             reduce using rule 49 (p_width -> PENW LP exp RP SC .)
    PENC            reduce using rule 49 (p_width -> PENW LP exp RP SC .)
    SETC            reduce using rule 49 (p_width -> PENW LP exp RP SC .)
    BACO            reduce using rule 49 (p_width -> PENW LP exp RP SC .)
    PENW            reduce using rule 49 (p_width -> PENW LP exp RP SC .)
    LI              reduce using rule 49 (p_width -> PENW LP exp RP SC .)
    PENP            reduce using rule 49 (p_width -> PENW LP exp RP SC .)
    PENX            reduce using rule 49 (p_width -> PENW LP exp RP SC .)
    PENY            reduce using rule 49 (p_width -> PENW LP exp RP SC .)
    ID              reduce using rule 49 (p_width -> PENW LP exp RP SC .)
    RB              reduce using rule 49 (p_width -> PENW LP exp RP SC .)


state 256

    (46) colors -> PENC LP exp C exp . C exp RP SC

    C               shift and go to state 278


state 257

    (61) lstrip -> LS LP idList RP SC .

    IF              reduce using rule 61 (lstrip -> LS LP idList RP SC .)
    RE              reduce using rule 61 (lstrip -> LS LP idList RP SC .)
    RT              reduce using rule 61 (lstrip -> LS LP idList RP SC .)
    REC             reduce using rule 61 (lstrip -> LS LP idList RP SC .)
    TRI             reduce using rule 61 (lstrip -> LS LP idList RP SC .)
    POL             reduce using rule 61 (lstrip -> LS LP idList RP SC .)
    LS              reduce using rule 61 (lstrip -> LS LP idList RP SC .)
    CIR             reduce using rule 61 (lstrip -> LS LP idList RP SC .)
    SQ              reduce using rule 61 (lstrip -> LS LP idList RP SC .)
    ARC             reduce using rule 61 (lstrip -> LS LP idList RP SC .)
    PENC            reduce using rule 61 (lstrip -> LS LP idList RP SC .)
    SETC            reduce using rule 61 (lstrip -> LS LP idList RP SC .)
    BACO            reduce using rule 61 (lstrip -> LS LP idList RP SC .)
    PENW            reduce using rule 61 (lstrip -> LS LP idList RP SC .)
    LI              reduce using rule 61 (lstrip -> LS LP idList RP SC .)
    PENP            reduce using rule 61 (lstrip -> LS LP idList RP SC .)
    PENX            reduce using rule 61 (lstrip -> LS LP idList RP SC .)
    PENY            reduce using rule 61 (lstrip -> LS LP idList RP SC .)
    ID              reduce using rule 61 (lstrip -> LS LP idList RP SC .)
    RB              reduce using rule 61 (lstrip -> LS LP idList RP SC .)


state 258

    (57) tria -> TRI LP LC exp C . exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 279
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact4                          shift and go to state 106
    fact                           shift and go to state 109

state 259

    (112) condition -> IF LP expresion condRP block . con2
    (114) con2 -> . empty
    (115) con2 -> . con3 block
    (140) empty -> .
    (116) con3 -> . ELSE

    IF              reduce using rule 140 (empty -> .)
    RE              reduce using rule 140 (empty -> .)
    RT              reduce using rule 140 (empty -> .)
    REC             reduce using rule 140 (empty -> .)
    TRI             reduce using rule 140 (empty -> .)
    POL             reduce using rule 140 (empty -> .)
    LS              reduce using rule 140 (empty -> .)
    CIR             reduce using rule 140 (empty -> .)
    SQ              reduce using rule 140 (empty -> .)
    ARC             reduce using rule 140 (empty -> .)
    PENC            reduce using rule 140 (empty -> .)
    SETC            reduce using rule 140 (empty -> .)
    BACO            reduce using rule 140 (empty -> .)
    PENW            reduce using rule 140 (empty -> .)
    LI              reduce using rule 140 (empty -> .)
    PENP            reduce using rule 140 (empty -> .)
    PENX            reduce using rule 140 (empty -> .)
    PENY            reduce using rule 140 (empty -> .)
    ID              reduce using rule 140 (empty -> .)
    RB              reduce using rule 140 (empty -> .)
    ELSE            shift and go to state 282

    con2                           shift and go to state 280
    con3                           shift and go to state 281
    empty                          shift and go to state 283

state 260

    (65) ex2 -> ex3 exp .

    RP              reduce using rule 65 (ex2 -> ex3 exp .)


state 261

    (59) one_par -> SQ LP exp p_fill RP . SC

    SC              shift and go to state 284


state 262

    (45) position -> PENP LP exp C exp . RP SC

    RP              shift and go to state 285


state 263

    (63) p_arc -> ARC LP exp RP SC .

    IF              reduce using rule 63 (p_arc -> ARC LP exp RP SC .)
    RE              reduce using rule 63 (p_arc -> ARC LP exp RP SC .)
    RT              reduce using rule 63 (p_arc -> ARC LP exp RP SC .)
    REC             reduce using rule 63 (p_arc -> ARC LP exp RP SC .)
    TRI             reduce using rule 63 (p_arc -> ARC LP exp RP SC .)
    POL             reduce using rule 63 (p_arc -> ARC LP exp RP SC .)
    LS              reduce using rule 63 (p_arc -> ARC LP exp RP SC .)
    CIR             reduce using rule 63 (p_arc -> ARC LP exp RP SC .)
    SQ              reduce using rule 63 (p_arc -> ARC LP exp RP SC .)
    ARC             reduce using rule 63 (p_arc -> ARC LP exp RP SC .)
    PENC            reduce using rule 63 (p_arc -> ARC LP exp RP SC .)
    SETC            reduce using rule 63 (p_arc -> ARC LP exp RP SC .)
    BACO            reduce using rule 63 (p_arc -> ARC LP exp RP SC .)
    PENW            reduce using rule 63 (p_arc -> ARC LP exp RP SC .)
    LI              reduce using rule 63 (p_arc -> ARC LP exp RP SC .)
    PENP            reduce using rule 63 (p_arc -> ARC LP exp RP SC .)
    PENX            reduce using rule 63 (p_arc -> ARC LP exp RP SC .)
    PENY            reduce using rule 63 (p_arc -> ARC LP exp RP SC .)
    ID              reduce using rule 63 (p_arc -> ARC LP exp RP SC .)
    RB              reduce using rule 63 (p_arc -> ARC LP exp RP SC .)


state 264

    (108) func3 -> C func4 . func3
    (108) func3 -> . C func4 func3
    (109) func3 -> . empty
    (140) empty -> .

    C               shift and go to state 232
    RP              reduce using rule 140 (empty -> .)

    func3                          shift and go to state 286
    empty                          shift and go to state 233

state 265

    (111) listAss -> LB exp . C exp RB SC

    C               shift and go to state 287


state 266

    (101) tipeAss -> exp SC .

    IF              reduce using rule 101 (tipeAss -> exp SC .)
    RE              reduce using rule 101 (tipeAss -> exp SC .)
    RT              reduce using rule 101 (tipeAss -> exp SC .)
    REC             reduce using rule 101 (tipeAss -> exp SC .)
    TRI             reduce using rule 101 (tipeAss -> exp SC .)
    POL             reduce using rule 101 (tipeAss -> exp SC .)
    LS              reduce using rule 101 (tipeAss -> exp SC .)
    CIR             reduce using rule 101 (tipeAss -> exp SC .)
    SQ              reduce using rule 101 (tipeAss -> exp SC .)
    ARC             reduce using rule 101 (tipeAss -> exp SC .)
    PENC            reduce using rule 101 (tipeAss -> exp SC .)
    SETC            reduce using rule 101 (tipeAss -> exp SC .)
    BACO            reduce using rule 101 (tipeAss -> exp SC .)
    PENW            reduce using rule 101 (tipeAss -> exp SC .)
    LI              reduce using rule 101 (tipeAss -> exp SC .)
    PENP            reduce using rule 101 (tipeAss -> exp SC .)
    PENX            reduce using rule 101 (tipeAss -> exp SC .)
    PENY            reduce using rule 101 (tipeAss -> exp SC .)
    ID              reduce using rule 101 (tipeAss -> exp SC .)
    RB              reduce using rule 101 (tipeAss -> exp SC .)


state 267

    (97) WID -> factID fact5 . WID2
    (87) fact4 -> factID fact5 .
    (98) WID2 -> . assigment
    (99) WID2 -> . funCall SC
    (100) assigment -> . EQ tipeAss
    (104) funCall -> . funEra func2 RP
    (105) funEra -> . LP

    M               reduce using rule 87 (fact4 -> factID fact5 .)
    DIV             reduce using rule 87 (fact4 -> factID fact5 .)
    ADD             reduce using rule 87 (fact4 -> factID fact5 .)
    SUB             reduce using rule 87 (fact4 -> factID fact5 .)
    SC              reduce using rule 87 (fact4 -> factID fact5 .)
    EQ              shift and go to state 190
    LP              shift and go to state 138

    assigment                      shift and go to state 187
    funEra                         shift and go to state 139
    funCall                        shift and go to state 188
    WID2                           shift and go to state 189

state 268

    (26) var33 -> C varSave var5 var4 . var33
    (26) var33 -> . C varSave var5 var4 var33
    (27) var33 -> . empty
    (140) empty -> .

    C               shift and go to state 144
    SC              reduce using rule 140 (empty -> .)

    var33                          shift and go to state 288
    empty                          shift and go to state 146

state 269

    (35) var6 -> LB LP exp C . exp RP var61 RB
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 289
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 270

    (39) var62 -> C exp . var62
    (39) var62 -> . C exp var62
    (40) var62 -> . empty
    (140) empty -> .

    C               shift and go to state 243
    RC              reduce using rule 140 (empty -> .)

    var62                          shift and go to state 290
    empty                          shift and go to state 245

state 271

    (36) var6 -> LC exp var62 RC .

    C               reduce using rule 36 (var6 -> LC exp var62 RC .)
    SC              reduce using rule 36 (var6 -> LC exp var62 RC .)


state 272

    (48) colors -> BACO LP exp C exp C . exp RP SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 291
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 273

    (58) one_par -> CIR LP exp p_fill RP SC .

    IF              reduce using rule 58 (one_par -> CIR LP exp p_fill RP SC .)
    RE              reduce using rule 58 (one_par -> CIR LP exp p_fill RP SC .)
    RT              reduce using rule 58 (one_par -> CIR LP exp p_fill RP SC .)
    REC             reduce using rule 58 (one_par -> CIR LP exp p_fill RP SC .)
    TRI             reduce using rule 58 (one_par -> CIR LP exp p_fill RP SC .)
    POL             reduce using rule 58 (one_par -> CIR LP exp p_fill RP SC .)
    LS              reduce using rule 58 (one_par -> CIR LP exp p_fill RP SC .)
    CIR             reduce using rule 58 (one_par -> CIR LP exp p_fill RP SC .)
    SQ              reduce using rule 58 (one_par -> CIR LP exp p_fill RP SC .)
    ARC             reduce using rule 58 (one_par -> CIR LP exp p_fill RP SC .)
    PENC            reduce using rule 58 (one_par -> CIR LP exp p_fill RP SC .)
    SETC            reduce using rule 58 (one_par -> CIR LP exp p_fill RP SC .)
    BACO            reduce using rule 58 (one_par -> CIR LP exp p_fill RP SC .)
    PENW            reduce using rule 58 (one_par -> CIR LP exp p_fill RP SC .)
    LI              reduce using rule 58 (one_par -> CIR LP exp p_fill RP SC .)
    PENP            reduce using rule 58 (one_par -> CIR LP exp p_fill RP SC .)
    PENX            reduce using rule 58 (one_par -> CIR LP exp p_fill RP SC .)
    PENY            reduce using rule 58 (one_par -> CIR LP exp p_fill RP SC .)
    ID              reduce using rule 58 (one_par -> CIR LP exp p_fill RP SC .)
    RB              reduce using rule 58 (one_par -> CIR LP exp p_fill RP SC .)


state 274

    (54) rect -> REC LP exp C exp p_fill . RP SC

    RP              shift and go to state 292


state 275

    (53) mueve2 -> LP exp C A exp . RP SC

    RP              shift and go to state 293


state 276

    (47) colors -> SETC LP exp C exp C . exp RP SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 294
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 277

    (60) poly -> POL LP idList p_fill RP SC .

    IF              reduce using rule 60 (poly -> POL LP idList p_fill RP SC .)
    RE              reduce using rule 60 (poly -> POL LP idList p_fill RP SC .)
    RT              reduce using rule 60 (poly -> POL LP idList p_fill RP SC .)
    REC             reduce using rule 60 (poly -> POL LP idList p_fill RP SC .)
    TRI             reduce using rule 60 (poly -> POL LP idList p_fill RP SC .)
    POL             reduce using rule 60 (poly -> POL LP idList p_fill RP SC .)
    LS              reduce using rule 60 (poly -> POL LP idList p_fill RP SC .)
    CIR             reduce using rule 60 (poly -> POL LP idList p_fill RP SC .)
    SQ              reduce using rule 60 (poly -> POL LP idList p_fill RP SC .)
    ARC             reduce using rule 60 (poly -> POL LP idList p_fill RP SC .)
    PENC            reduce using rule 60 (poly -> POL LP idList p_fill RP SC .)
    SETC            reduce using rule 60 (poly -> POL LP idList p_fill RP SC .)
    BACO            reduce using rule 60 (poly -> POL LP idList p_fill RP SC .)
    PENW            reduce using rule 60 (poly -> POL LP idList p_fill RP SC .)
    LI              reduce using rule 60 (poly -> POL LP idList p_fill RP SC .)
    PENP            reduce using rule 60 (poly -> POL LP idList p_fill RP SC .)
    PENX            reduce using rule 60 (poly -> POL LP idList p_fill RP SC .)
    PENY            reduce using rule 60 (poly -> POL LP idList p_fill RP SC .)
    ID              reduce using rule 60 (poly -> POL LP idList p_fill RP SC .)
    RB              reduce using rule 60 (poly -> POL LP idList p_fill RP SC .)


state 278

    (46) colors -> PENC LP exp C exp C . exp RP SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 295
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 279

    (57) tria -> TRI LP LC exp C exp . RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC

    RC              shift and go to state 296


state 280

    (112) condition -> IF LP expresion condRP block con2 .

    IF              reduce using rule 112 (condition -> IF LP expresion condRP block con2 .)
    RE              reduce using rule 112 (condition -> IF LP expresion condRP block con2 .)
    RT              reduce using rule 112 (condition -> IF LP expresion condRP block con2 .)
    REC             reduce using rule 112 (condition -> IF LP expresion condRP block con2 .)
    TRI             reduce using rule 112 (condition -> IF LP expresion condRP block con2 .)
    POL             reduce using rule 112 (condition -> IF LP expresion condRP block con2 .)
    LS              reduce using rule 112 (condition -> IF LP expresion condRP block con2 .)
    CIR             reduce using rule 112 (condition -> IF LP expresion condRP block con2 .)
    SQ              reduce using rule 112 (condition -> IF LP expresion condRP block con2 .)
    ARC             reduce using rule 112 (condition -> IF LP expresion condRP block con2 .)
    PENC            reduce using rule 112 (condition -> IF LP expresion condRP block con2 .)
    SETC            reduce using rule 112 (condition -> IF LP expresion condRP block con2 .)
    BACO            reduce using rule 112 (condition -> IF LP expresion condRP block con2 .)
    PENW            reduce using rule 112 (condition -> IF LP expresion condRP block con2 .)
    LI              reduce using rule 112 (condition -> IF LP expresion condRP block con2 .)
    PENP            reduce using rule 112 (condition -> IF LP expresion condRP block con2 .)
    PENX            reduce using rule 112 (condition -> IF LP expresion condRP block con2 .)
    PENY            reduce using rule 112 (condition -> IF LP expresion condRP block con2 .)
    ID              reduce using rule 112 (condition -> IF LP expresion condRP block con2 .)
    RB              reduce using rule 112 (condition -> IF LP expresion condRP block con2 .)


state 281

    (115) con2 -> con3 . block
    (120) block -> . LB block3 RB

    LB              shift and go to state 38

    block                          shift and go to state 297

state 282

    (116) con3 -> ELSE .

    LB              reduce using rule 116 (con3 -> ELSE .)


state 283

    (114) con2 -> empty .

    IF              reduce using rule 114 (con2 -> empty .)
    RE              reduce using rule 114 (con2 -> empty .)
    RT              reduce using rule 114 (con2 -> empty .)
    REC             reduce using rule 114 (con2 -> empty .)
    TRI             reduce using rule 114 (con2 -> empty .)
    POL             reduce using rule 114 (con2 -> empty .)
    LS              reduce using rule 114 (con2 -> empty .)
    CIR             reduce using rule 114 (con2 -> empty .)
    SQ              reduce using rule 114 (con2 -> empty .)
    ARC             reduce using rule 114 (con2 -> empty .)
    PENC            reduce using rule 114 (con2 -> empty .)
    SETC            reduce using rule 114 (con2 -> empty .)
    BACO            reduce using rule 114 (con2 -> empty .)
    PENW            reduce using rule 114 (con2 -> empty .)
    LI              reduce using rule 114 (con2 -> empty .)
    PENP            reduce using rule 114 (con2 -> empty .)
    PENX            reduce using rule 114 (con2 -> empty .)
    PENY            reduce using rule 114 (con2 -> empty .)
    ID              reduce using rule 114 (con2 -> empty .)
    RB              reduce using rule 114 (con2 -> empty .)


state 284

    (59) one_par -> SQ LP exp p_fill RP SC .

    IF              reduce using rule 59 (one_par -> SQ LP exp p_fill RP SC .)
    RE              reduce using rule 59 (one_par -> SQ LP exp p_fill RP SC .)
    RT              reduce using rule 59 (one_par -> SQ LP exp p_fill RP SC .)
    REC             reduce using rule 59 (one_par -> SQ LP exp p_fill RP SC .)
    TRI             reduce using rule 59 (one_par -> SQ LP exp p_fill RP SC .)
    POL             reduce using rule 59 (one_par -> SQ LP exp p_fill RP SC .)
    LS              reduce using rule 59 (one_par -> SQ LP exp p_fill RP SC .)
    CIR             reduce using rule 59 (one_par -> SQ LP exp p_fill RP SC .)
    SQ              reduce using rule 59 (one_par -> SQ LP exp p_fill RP SC .)
    ARC             reduce using rule 59 (one_par -> SQ LP exp p_fill RP SC .)
    PENC            reduce using rule 59 (one_par -> SQ LP exp p_fill RP SC .)
    SETC            reduce using rule 59 (one_par -> SQ LP exp p_fill RP SC .)
    BACO            reduce using rule 59 (one_par -> SQ LP exp p_fill RP SC .)
    PENW            reduce using rule 59 (one_par -> SQ LP exp p_fill RP SC .)
    LI              reduce using rule 59 (one_par -> SQ LP exp p_fill RP SC .)
    PENP            reduce using rule 59 (one_par -> SQ LP exp p_fill RP SC .)
    PENX            reduce using rule 59 (one_par -> SQ LP exp p_fill RP SC .)
    PENY            reduce using rule 59 (one_par -> SQ LP exp p_fill RP SC .)
    ID              reduce using rule 59 (one_par -> SQ LP exp p_fill RP SC .)
    RB              reduce using rule 59 (one_par -> SQ LP exp p_fill RP SC .)


state 285

    (45) position -> PENP LP exp C exp RP . SC

    SC              shift and go to state 298


state 286

    (108) func3 -> C func4 func3 .

    RP              reduce using rule 108 (func3 -> C func4 func3 .)


state 287

    (111) listAss -> LB exp C . exp RB SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 299
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 288

    (26) var33 -> C varSave var5 var4 var33 .

    SC              reduce using rule 26 (var33 -> C varSave var5 var4 var33 .)


state 289

    (35) var6 -> LB LP exp C exp . RP var61 RB

    RP              shift and go to state 300


state 290

    (39) var62 -> C exp var62 .

    RC              reduce using rule 39 (var62 -> C exp var62 .)


state 291

    (48) colors -> BACO LP exp C exp C exp . RP SC

    RP              shift and go to state 301


state 292

    (54) rect -> REC LP exp C exp p_fill RP . SC

    SC              shift and go to state 302


state 293

    (53) mueve2 -> LP exp C A exp RP . SC

    SC              shift and go to state 303


state 294

    (47) colors -> SETC LP exp C exp C exp . RP SC

    RP              shift and go to state 304


state 295

    (46) colors -> PENC LP exp C exp C exp . RP SC

    RP              shift and go to state 305


state 296

    (57) tria -> TRI LP LC exp C exp RC . C LC exp C exp RC C LC exp C exp RC p_fill RP SC

    C               shift and go to state 306


state 297

    (115) con2 -> con3 block .

    IF              reduce using rule 115 (con2 -> con3 block .)
    RE              reduce using rule 115 (con2 -> con3 block .)
    RT              reduce using rule 115 (con2 -> con3 block .)
    REC             reduce using rule 115 (con2 -> con3 block .)
    TRI             reduce using rule 115 (con2 -> con3 block .)
    POL             reduce using rule 115 (con2 -> con3 block .)
    LS              reduce using rule 115 (con2 -> con3 block .)
    CIR             reduce using rule 115 (con2 -> con3 block .)
    SQ              reduce using rule 115 (con2 -> con3 block .)
    ARC             reduce using rule 115 (con2 -> con3 block .)
    PENC            reduce using rule 115 (con2 -> con3 block .)
    SETC            reduce using rule 115 (con2 -> con3 block .)
    BACO            reduce using rule 115 (con2 -> con3 block .)
    PENW            reduce using rule 115 (con2 -> con3 block .)
    LI              reduce using rule 115 (con2 -> con3 block .)
    PENP            reduce using rule 115 (con2 -> con3 block .)
    PENX            reduce using rule 115 (con2 -> con3 block .)
    PENY            reduce using rule 115 (con2 -> con3 block .)
    ID              reduce using rule 115 (con2 -> con3 block .)
    RB              reduce using rule 115 (con2 -> con3 block .)


state 298

    (45) position -> PENP LP exp C exp RP SC .

    IF              reduce using rule 45 (position -> PENP LP exp C exp RP SC .)
    RE              reduce using rule 45 (position -> PENP LP exp C exp RP SC .)
    RT              reduce using rule 45 (position -> PENP LP exp C exp RP SC .)
    REC             reduce using rule 45 (position -> PENP LP exp C exp RP SC .)
    TRI             reduce using rule 45 (position -> PENP LP exp C exp RP SC .)
    POL             reduce using rule 45 (position -> PENP LP exp C exp RP SC .)
    LS              reduce using rule 45 (position -> PENP LP exp C exp RP SC .)
    CIR             reduce using rule 45 (position -> PENP LP exp C exp RP SC .)
    SQ              reduce using rule 45 (position -> PENP LP exp C exp RP SC .)
    ARC             reduce using rule 45 (position -> PENP LP exp C exp RP SC .)
    PENC            reduce using rule 45 (position -> PENP LP exp C exp RP SC .)
    SETC            reduce using rule 45 (position -> PENP LP exp C exp RP SC .)
    BACO            reduce using rule 45 (position -> PENP LP exp C exp RP SC .)
    PENW            reduce using rule 45 (position -> PENP LP exp C exp RP SC .)
    LI              reduce using rule 45 (position -> PENP LP exp C exp RP SC .)
    PENP            reduce using rule 45 (position -> PENP LP exp C exp RP SC .)
    PENX            reduce using rule 45 (position -> PENP LP exp C exp RP SC .)
    PENY            reduce using rule 45 (position -> PENP LP exp C exp RP SC .)
    ID              reduce using rule 45 (position -> PENP LP exp C exp RP SC .)
    RB              reduce using rule 45 (position -> PENP LP exp C exp RP SC .)


state 299

    (111) listAss -> LB exp C exp . RB SC

    RB              shift and go to state 307


state 300

    (35) var6 -> LB LP exp C exp RP . var61 RB
    (37) var61 -> . C LP exp C exp RP var61
    (38) var61 -> . empty
    (140) empty -> .

    C               shift and go to state 309
    RB              reduce using rule 140 (empty -> .)

    var61                          shift and go to state 308
    empty                          shift and go to state 310

state 301

    (48) colors -> BACO LP exp C exp C exp RP . SC

    SC              shift and go to state 311


state 302

    (54) rect -> REC LP exp C exp p_fill RP SC .

    IF              reduce using rule 54 (rect -> REC LP exp C exp p_fill RP SC .)
    RE              reduce using rule 54 (rect -> REC LP exp C exp p_fill RP SC .)
    RT              reduce using rule 54 (rect -> REC LP exp C exp p_fill RP SC .)
    REC             reduce using rule 54 (rect -> REC LP exp C exp p_fill RP SC .)
    TRI             reduce using rule 54 (rect -> REC LP exp C exp p_fill RP SC .)
    POL             reduce using rule 54 (rect -> REC LP exp C exp p_fill RP SC .)
    LS              reduce using rule 54 (rect -> REC LP exp C exp p_fill RP SC .)
    CIR             reduce using rule 54 (rect -> REC LP exp C exp p_fill RP SC .)
    SQ              reduce using rule 54 (rect -> REC LP exp C exp p_fill RP SC .)
    ARC             reduce using rule 54 (rect -> REC LP exp C exp p_fill RP SC .)
    PENC            reduce using rule 54 (rect -> REC LP exp C exp p_fill RP SC .)
    SETC            reduce using rule 54 (rect -> REC LP exp C exp p_fill RP SC .)
    BACO            reduce using rule 54 (rect -> REC LP exp C exp p_fill RP SC .)
    PENW            reduce using rule 54 (rect -> REC LP exp C exp p_fill RP SC .)
    LI              reduce using rule 54 (rect -> REC LP exp C exp p_fill RP SC .)
    PENP            reduce using rule 54 (rect -> REC LP exp C exp p_fill RP SC .)
    PENX            reduce using rule 54 (rect -> REC LP exp C exp p_fill RP SC .)
    PENY            reduce using rule 54 (rect -> REC LP exp C exp p_fill RP SC .)
    ID              reduce using rule 54 (rect -> REC LP exp C exp p_fill RP SC .)
    RB              reduce using rule 54 (rect -> REC LP exp C exp p_fill RP SC .)


state 303

    (53) mueve2 -> LP exp C A exp RP SC .

    IF              reduce using rule 53 (mueve2 -> LP exp C A exp RP SC .)
    RE              reduce using rule 53 (mueve2 -> LP exp C A exp RP SC .)
    RT              reduce using rule 53 (mueve2 -> LP exp C A exp RP SC .)
    REC             reduce using rule 53 (mueve2 -> LP exp C A exp RP SC .)
    TRI             reduce using rule 53 (mueve2 -> LP exp C A exp RP SC .)
    POL             reduce using rule 53 (mueve2 -> LP exp C A exp RP SC .)
    LS              reduce using rule 53 (mueve2 -> LP exp C A exp RP SC .)
    CIR             reduce using rule 53 (mueve2 -> LP exp C A exp RP SC .)
    SQ              reduce using rule 53 (mueve2 -> LP exp C A exp RP SC .)
    ARC             reduce using rule 53 (mueve2 -> LP exp C A exp RP SC .)
    PENC            reduce using rule 53 (mueve2 -> LP exp C A exp RP SC .)
    SETC            reduce using rule 53 (mueve2 -> LP exp C A exp RP SC .)
    BACO            reduce using rule 53 (mueve2 -> LP exp C A exp RP SC .)
    PENW            reduce using rule 53 (mueve2 -> LP exp C A exp RP SC .)
    LI              reduce using rule 53 (mueve2 -> LP exp C A exp RP SC .)
    PENP            reduce using rule 53 (mueve2 -> LP exp C A exp RP SC .)
    PENX            reduce using rule 53 (mueve2 -> LP exp C A exp RP SC .)
    PENY            reduce using rule 53 (mueve2 -> LP exp C A exp RP SC .)
    ID              reduce using rule 53 (mueve2 -> LP exp C A exp RP SC .)
    RB              reduce using rule 53 (mueve2 -> LP exp C A exp RP SC .)


state 304

    (47) colors -> SETC LP exp C exp C exp RP . SC

    SC              shift and go to state 312


state 305

    (46) colors -> PENC LP exp C exp C exp RP . SC

    SC              shift and go to state 313


state 306

    (57) tria -> TRI LP LC exp C exp RC C . LC exp C exp RC C LC exp C exp RC p_fill RP SC

    LC              shift and go to state 314


state 307

    (111) listAss -> LB exp C exp RB . SC

    SC              shift and go to state 315


state 308

    (35) var6 -> LB LP exp C exp RP var61 . RB

    RB              shift and go to state 316


state 309

    (37) var61 -> C . LP exp C exp RP var61

    LP              shift and go to state 317


state 310

    (38) var61 -> empty .

    RB              reduce using rule 38 (var61 -> empty .)


state 311

    (48) colors -> BACO LP exp C exp C exp RP SC .

    IF              reduce using rule 48 (colors -> BACO LP exp C exp C exp RP SC .)
    RE              reduce using rule 48 (colors -> BACO LP exp C exp C exp RP SC .)
    RT              reduce using rule 48 (colors -> BACO LP exp C exp C exp RP SC .)
    REC             reduce using rule 48 (colors -> BACO LP exp C exp C exp RP SC .)
    TRI             reduce using rule 48 (colors -> BACO LP exp C exp C exp RP SC .)
    POL             reduce using rule 48 (colors -> BACO LP exp C exp C exp RP SC .)
    LS              reduce using rule 48 (colors -> BACO LP exp C exp C exp RP SC .)
    CIR             reduce using rule 48 (colors -> BACO LP exp C exp C exp RP SC .)
    SQ              reduce using rule 48 (colors -> BACO LP exp C exp C exp RP SC .)
    ARC             reduce using rule 48 (colors -> BACO LP exp C exp C exp RP SC .)
    PENC            reduce using rule 48 (colors -> BACO LP exp C exp C exp RP SC .)
    SETC            reduce using rule 48 (colors -> BACO LP exp C exp C exp RP SC .)
    BACO            reduce using rule 48 (colors -> BACO LP exp C exp C exp RP SC .)
    PENW            reduce using rule 48 (colors -> BACO LP exp C exp C exp RP SC .)
    LI              reduce using rule 48 (colors -> BACO LP exp C exp C exp RP SC .)
    PENP            reduce using rule 48 (colors -> BACO LP exp C exp C exp RP SC .)
    PENX            reduce using rule 48 (colors -> BACO LP exp C exp C exp RP SC .)
    PENY            reduce using rule 48 (colors -> BACO LP exp C exp C exp RP SC .)
    ID              reduce using rule 48 (colors -> BACO LP exp C exp C exp RP SC .)
    RB              reduce using rule 48 (colors -> BACO LP exp C exp C exp RP SC .)


state 312

    (47) colors -> SETC LP exp C exp C exp RP SC .

    IF              reduce using rule 47 (colors -> SETC LP exp C exp C exp RP SC .)
    RE              reduce using rule 47 (colors -> SETC LP exp C exp C exp RP SC .)
    RT              reduce using rule 47 (colors -> SETC LP exp C exp C exp RP SC .)
    REC             reduce using rule 47 (colors -> SETC LP exp C exp C exp RP SC .)
    TRI             reduce using rule 47 (colors -> SETC LP exp C exp C exp RP SC .)
    POL             reduce using rule 47 (colors -> SETC LP exp C exp C exp RP SC .)
    LS              reduce using rule 47 (colors -> SETC LP exp C exp C exp RP SC .)
    CIR             reduce using rule 47 (colors -> SETC LP exp C exp C exp RP SC .)
    SQ              reduce using rule 47 (colors -> SETC LP exp C exp C exp RP SC .)
    ARC             reduce using rule 47 (colors -> SETC LP exp C exp C exp RP SC .)
    PENC            reduce using rule 47 (colors -> SETC LP exp C exp C exp RP SC .)
    SETC            reduce using rule 47 (colors -> SETC LP exp C exp C exp RP SC .)
    BACO            reduce using rule 47 (colors -> SETC LP exp C exp C exp RP SC .)
    PENW            reduce using rule 47 (colors -> SETC LP exp C exp C exp RP SC .)
    LI              reduce using rule 47 (colors -> SETC LP exp C exp C exp RP SC .)
    PENP            reduce using rule 47 (colors -> SETC LP exp C exp C exp RP SC .)
    PENX            reduce using rule 47 (colors -> SETC LP exp C exp C exp RP SC .)
    PENY            reduce using rule 47 (colors -> SETC LP exp C exp C exp RP SC .)
    ID              reduce using rule 47 (colors -> SETC LP exp C exp C exp RP SC .)
    RB              reduce using rule 47 (colors -> SETC LP exp C exp C exp RP SC .)


state 313

    (46) colors -> PENC LP exp C exp C exp RP SC .

    IF              reduce using rule 46 (colors -> PENC LP exp C exp C exp RP SC .)
    RE              reduce using rule 46 (colors -> PENC LP exp C exp C exp RP SC .)
    RT              reduce using rule 46 (colors -> PENC LP exp C exp C exp RP SC .)
    REC             reduce using rule 46 (colors -> PENC LP exp C exp C exp RP SC .)
    TRI             reduce using rule 46 (colors -> PENC LP exp C exp C exp RP SC .)
    POL             reduce using rule 46 (colors -> PENC LP exp C exp C exp RP SC .)
    LS              reduce using rule 46 (colors -> PENC LP exp C exp C exp RP SC .)
    CIR             reduce using rule 46 (colors -> PENC LP exp C exp C exp RP SC .)
    SQ              reduce using rule 46 (colors -> PENC LP exp C exp C exp RP SC .)
    ARC             reduce using rule 46 (colors -> PENC LP exp C exp C exp RP SC .)
    PENC            reduce using rule 46 (colors -> PENC LP exp C exp C exp RP SC .)
    SETC            reduce using rule 46 (colors -> PENC LP exp C exp C exp RP SC .)
    BACO            reduce using rule 46 (colors -> PENC LP exp C exp C exp RP SC .)
    PENW            reduce using rule 46 (colors -> PENC LP exp C exp C exp RP SC .)
    LI              reduce using rule 46 (colors -> PENC LP exp C exp C exp RP SC .)
    PENP            reduce using rule 46 (colors -> PENC LP exp C exp C exp RP SC .)
    PENX            reduce using rule 46 (colors -> PENC LP exp C exp C exp RP SC .)
    PENY            reduce using rule 46 (colors -> PENC LP exp C exp C exp RP SC .)
    ID              reduce using rule 46 (colors -> PENC LP exp C exp C exp RP SC .)
    RB              reduce using rule 46 (colors -> PENC LP exp C exp C exp RP SC .)


state 314

    (57) tria -> TRI LP LC exp C exp RC C LC . exp C exp RC C LC exp C exp RC p_fill RP SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 318
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact4                          shift and go to state 106
    fact                           shift and go to state 109

state 315

    (111) listAss -> LB exp C exp RB SC .

    IF              reduce using rule 111 (listAss -> LB exp C exp RB SC .)
    RE              reduce using rule 111 (listAss -> LB exp C exp RB SC .)
    RT              reduce using rule 111 (listAss -> LB exp C exp RB SC .)
    REC             reduce using rule 111 (listAss -> LB exp C exp RB SC .)
    TRI             reduce using rule 111 (listAss -> LB exp C exp RB SC .)
    POL             reduce using rule 111 (listAss -> LB exp C exp RB SC .)
    LS              reduce using rule 111 (listAss -> LB exp C exp RB SC .)
    CIR             reduce using rule 111 (listAss -> LB exp C exp RB SC .)
    SQ              reduce using rule 111 (listAss -> LB exp C exp RB SC .)
    ARC             reduce using rule 111 (listAss -> LB exp C exp RB SC .)
    PENC            reduce using rule 111 (listAss -> LB exp C exp RB SC .)
    SETC            reduce using rule 111 (listAss -> LB exp C exp RB SC .)
    BACO            reduce using rule 111 (listAss -> LB exp C exp RB SC .)
    PENW            reduce using rule 111 (listAss -> LB exp C exp RB SC .)
    LI              reduce using rule 111 (listAss -> LB exp C exp RB SC .)
    PENP            reduce using rule 111 (listAss -> LB exp C exp RB SC .)
    PENX            reduce using rule 111 (listAss -> LB exp C exp RB SC .)
    PENY            reduce using rule 111 (listAss -> LB exp C exp RB SC .)
    ID              reduce using rule 111 (listAss -> LB exp C exp RB SC .)
    RB              reduce using rule 111 (listAss -> LB exp C exp RB SC .)


state 316

    (35) var6 -> LB LP exp C exp RP var61 RB .

    C               reduce using rule 35 (var6 -> LB LP exp C exp RP var61 RB .)
    SC              reduce using rule 35 (var6 -> LB LP exp C exp RP var61 RB .)


state 317

    (37) var61 -> C LP . exp C exp RP var61
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 319
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 318

    (57) tria -> TRI LP LC exp C exp RC C LC exp . C exp RC C LC exp C exp RC p_fill RP SC

    C               shift and go to state 320


state 319

    (37) var61 -> C LP exp . C exp RP var61

    C               shift and go to state 321


state 320

    (57) tria -> TRI LP LC exp C exp RC C LC exp C . exp RC C LC exp C exp RC p_fill RP SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 322
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact4                          shift and go to state 106
    fact                           shift and go to state 109

state 321

    (37) var61 -> C LP exp C . exp RP var61
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 323
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact                           shift and go to state 109
    fact4                          shift and go to state 106

state 322

    (57) tria -> TRI LP LC exp C exp RC C LC exp C exp . RC C LC exp C exp RC p_fill RP SC

    RC              shift and go to state 324


state 323

    (37) var61 -> C LP exp C exp . RP var61

    RP              shift and go to state 325


state 324

    (57) tria -> TRI LP LC exp C exp RC C LC exp C exp RC . C LC exp C exp RC p_fill RP SC

    C               shift and go to state 326


state 325

    (37) var61 -> C LP exp C exp RP . var61
    (37) var61 -> . C LP exp C exp RP var61
    (38) var61 -> . empty
    (140) empty -> .

    C               shift and go to state 309
    RB              reduce using rule 140 (empty -> .)

    var61                          shift and go to state 327
    empty                          shift and go to state 310

state 326

    (57) tria -> TRI LP LC exp C exp RC C LC exp C exp RC C . LC exp C exp RC p_fill RP SC

    LC              shift and go to state 328


state 327

    (37) var61 -> C LP exp C exp RP var61 .

    RB              reduce using rule 37 (var61 -> C LP exp C exp RP var61 .)


state 328

    (57) tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC . exp C exp RC p_fill RP SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 329
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact4                          shift and go to state 106
    fact                           shift and go to state 109

state 329

    (57) tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp . C exp RC p_fill RP SC

    C               shift and go to state 330


state 330

    (57) tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C . exp RC p_fill RP SC
    (71) exp -> . term exp2
    (77) term -> . fact term2
    (83) fact -> . fact2 exp RP
    (84) fact -> . fact4
    (85) fact2 -> . LP
    (86) fact4 -> . valExp
    (87) fact4 -> . factID fact5
    (93) valExp -> . VALI
    (94) valExp -> . VALF
    (88) factID -> . ID

    LP              shift and go to state 101
    VALI            shift and go to state 102
    VALF            shift and go to state 103
    ID              shift and go to state 77

    term                           shift and go to state 99
    valExp                         shift and go to state 108
    exp                            shift and go to state 331
    factID                         shift and go to state 104
    fact2                          shift and go to state 105
    fact4                          shift and go to state 106
    fact                           shift and go to state 109

state 331

    (57) tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp . RC p_fill RP SC

    RC              shift and go to state 332


state 332

    (57) tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC . p_fill RP SC
    (55) p_fill -> . C FILL
    (56) p_fill -> . empty
    (140) empty -> .

    C               shift and go to state 205
    RP              reduce using rule 140 (empty -> .)

    empty                          shift and go to state 207
    p_fill                         shift and go to state 333

state 333

    (57) tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill . RP SC

    RP              shift and go to state 334


state 334

    (57) tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP . SC

    SC              shift and go to state 335


state 335

    (57) tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC .

    IF              reduce using rule 57 (tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC .)
    RE              reduce using rule 57 (tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC .)
    RT              reduce using rule 57 (tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC .)
    REC             reduce using rule 57 (tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC .)
    TRI             reduce using rule 57 (tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC .)
    POL             reduce using rule 57 (tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC .)
    LS              reduce using rule 57 (tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC .)
    CIR             reduce using rule 57 (tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC .)
    SQ              reduce using rule 57 (tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC .)
    ARC             reduce using rule 57 (tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC .)
    PENC            reduce using rule 57 (tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC .)
    SETC            reduce using rule 57 (tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC .)
    BACO            reduce using rule 57 (tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC .)
    PENW            reduce using rule 57 (tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC .)
    LI              reduce using rule 57 (tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC .)
    PENP            reduce using rule 57 (tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC .)
    PENX            reduce using rule 57 (tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC .)
    PENY            reduce using rule 57 (tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC .)
    ID              reduce using rule 57 (tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC .)
    RB              reduce using rule 57 (tria -> TRI LP LC exp C exp RC C LC exp C exp RC C LC exp C exp RC p_fill RP SC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LP in state 86 resolved as shift
WARNING: shift/reduce conflict for LB in state 104 resolved as shift
WARNING: shift/reduce conflict for LP in state 239 resolved as shift
