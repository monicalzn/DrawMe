Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> PR p2 p3 main mainVDir block
Rule 2     main -> MAIN
Rule 3     mainVDir -> vars
Rule 4     p2 -> globals
Rule 5     p2 -> empty
Rule 6     p3 -> functions p3
Rule 7     p3 -> empty
Rule 8     globals -> glob vars
Rule 9     glob -> GL
Rule 10    functions -> fun2 DP funVDir block
Rule 11    funVDir -> vars
Rule 12    fun2 -> funBlock ID LP fun3 RP
Rule 13    funBlock -> FUN
Rule 14    fun3 -> fun5 fun4
Rule 15    fun3 -> empty
Rule 16    fun4 -> C fun5 fun4
Rule 17    fun4 -> empty
Rule 18    fun5 -> type ID
Rule 19    vars -> V var2 var5
Rule 20    vars -> empty
Rule 21    var2 -> type var3 SC var2
Rule 22    var2 -> empty
Rule 23    var3 -> ID var4 var33
Rule 24    var33 -> C ID var4 var33
Rule 25    var33 -> empty
Rule 26    var4 -> EQ exp
Rule 27    var4 -> empty
Rule 28    var5 -> list var5
Rule 29    var5 -> empty
Rule 30    type -> INT
Rule 31    type -> FLOAT
Rule 32    val -> VALI
Rule 33    val -> VALF
Rule 34    position -> PENP LP exp C exp RP SC
Rule 35    colors -> PENC LP exp C exp C exp RP SC
Rule 36    colors -> SETC LP exp C exp C exp RP SC
Rule 37    colors -> BACO LP exp C exp C exp RP SC
Rule 38    p_width -> PENW LP exp RP SC
Rule 39    penwrite -> PENU SC
Rule 40    penwrite -> PEND SC
Rule 41    move -> F mueve2
Rule 42    move -> B mueve2
Rule 43    mueve2 -> LP exp C A exp RP SC
Rule 44    rect -> REC LP exp C exp p_fill RP SC
Rule 45    p_fill -> C FILL
Rule 46    p_fill -> empty
Rule 47    tria -> TRI LP exp C exp C exp p_fill RP SC
Rule 48    one_par -> CIR LP exp p_fill RP SC
Rule 49    one_par -> SQ LP exp p_fill RP SC
Rule 50    poly -> POL LP idList p_fill RP SC
Rule 51    lstrip -> LS LP idList RP SC
Rule 52    idList -> ID
Rule 53    p_arc -> ARC LP exp RP SC
Rule 54    expresion -> exp ex2
Rule 55    ex2 -> ex3 exp
Rule 56    ex2 -> empty
Rule 57    ex3 -> LT
Rule 58    ex3 -> MT
Rule 59    ex3 -> D
Rule 60    ex3 -> SEQ
Rule 61    exp -> term exp2
Rule 62    exp2 -> exp3 exp
Rule 63    exp2 -> empty
Rule 64    exp3 -> ADD
Rule 65    exp3 -> SUB
Rule 66    term -> fact term2
Rule 67    term2 -> term3 term
Rule 68    term2 -> empty
Rule 69    term3 -> M
Rule 70    term3 -> DIV
Rule 71    fact -> fact2 exp RP
Rule 72    fact -> fact4
Rule 73    fact2 -> LP
Rule 74    fact4 -> valExp
Rule 75    fact4 -> ID
Rule 76    valExp -> VALI
Rule 77    valExp -> VALF
Rule 78    rep -> RE rep3 block
Rule 79    rep3 -> exp
Rule 80    WID -> ID WID2
Rule 81    WID2 -> assigment
Rule 82    WID2 -> funCall
Rule 83    assigment -> EQ tipeAss
Rule 84    tipeAss -> varAss
Rule 85    tipeAss -> listAss
Rule 86    varAss -> exp SC
Rule 87    funCall -> LP func2 RP SC
Rule 88    func2 -> func4 func3
Rule 89    func2 -> empty
Rule 90    func3 -> C func4 func3
Rule 91    func3 -> empty
Rule 92    func4 -> exp
Rule 93    list -> L type ID prelistAss
Rule 94    prelistAss -> EQ listAss
Rule 95    prelistAss -> SC
Rule 96    listAss -> LB lista3 RB SC
Rule 97    lista2 -> val
Rule 98    lista2 -> ID
Rule 99    lista3 -> lista2 li4
Rule 100   li4 -> C lista2 li4
Rule 101   li4 -> empty
Rule 102   lab -> LA LP stExp lab2 RP SC
Rule 103   lab2 -> ADD stExp lab2
Rule 104   lab2 -> empty
Rule 105   stExp -> STR
Rule 106   stExp -> exp
Rule 107   condition -> IF LP expresion condRP block con2
Rule 108   condRP -> RP
Rule 109   con2 -> empty
Rule 110   con2 -> con3 block
Rule 111   con3 -> ELSE
Rule 112   block -> LB block3 RB
Rule 113   block3 -> block2 block3
Rule 114   block3 -> empty
Rule 115   figure -> rect
Rule 116   figure -> tria
Rule 117   figure -> poly
Rule 118   figure -> lstrip
Rule 119   figure -> one_par
Rule 120   figure -> p_arc
Rule 121   pen -> colors
Rule 122   pen -> p_width
Rule 123   pen -> move
Rule 124   pen -> position
Rule 125   pen -> penwrite
Rule 126   block2 -> figure
Rule 127   block2 -> condition
Rule 128   block2 -> pen
Rule 129   block2 -> lab
Rule 130   block2 -> list
Rule 131   block2 -> WID
Rule 132   block2 -> rep
Rule 133   empty -> <empty>

Terminals, with rules where they appear

A                    : 43
ADD                  : 64 103
ARC                  : 53
B                    : 42
BACO                 : 37
C                    : 16 24 34 35 35 36 36 37 37 43 44 45 47 47 90 100
CIR                  : 48
D                    : 59
DIV                  : 70
DP                   : 10
ELSE                 : 111
EQ                   : 26 83 94
F                    : 41
FILL                 : 45
FLOAT                : 31
FUN                  : 13
GL                   : 9
ID                   : 12 18 23 24 52 75 80 93 98
IF                   : 107
INT                  : 30
L                    : 93
LA                   : 102
LB                   : 96 112
LP                   : 12 34 35 36 37 38 43 44 47 48 49 50 51 53 73 87 102 107
LS                   : 51
LT                   : 57
M                    : 69
MAIN                 : 2
MT                   : 58
PENC                 : 35
PEND                 : 40
PENP                 : 34
PENU                 : 39
PENW                 : 38
POL                  : 50
PR                   : 1
RB                   : 96 112
RE                   : 78
REC                  : 44
RP                   : 12 34 35 36 37 38 43 44 47 48 49 50 51 53 71 87 102 108
SC                   : 21 34 35 36 37 38 39 40 43 44 47 48 49 50 51 53 86 87 95 96 102
SEQ                  : 60
SETC                 : 36
SQ                   : 49
STR                  : 105
SUB                  : 65
TRI                  : 47
V                    : 19
VALF                 : 33 77
VALI                 : 32 76
error                : 

Nonterminals, with rules where they appear

WID                  : 131
WID2                 : 80
assigment            : 81
block                : 1 10 78 107 110
block2               : 113
block3               : 112 113
colors               : 121
con2                 : 107
con3                 : 110
condRP               : 107
condition            : 127
empty                : 5 7 15 17 20 22 25 27 29 46 56 63 68 89 91 101 104 109 114
ex2                  : 54
ex3                  : 55
exp                  : 26 34 34 35 35 35 36 36 36 37 37 37 38 43 43 44 44 47 47 47 48 49 53 54 55 62 71 79 86 92 106
exp2                 : 61
exp3                 : 62
expresion            : 107
fact                 : 66
fact2                : 71
fact4                : 72
figure               : 126
fun2                 : 10
fun3                 : 12
fun4                 : 14 16
fun5                 : 14 16
funBlock             : 12
funCall              : 82
funVDir              : 10
func2                : 87
func3                : 88 90
func4                : 88 90
functions            : 6
glob                 : 8
globals              : 4
idList               : 50 51
lab                  : 129
lab2                 : 102 103
li4                  : 99 100
list                 : 28 130
listAss              : 85 94
lista2               : 99 100
lista3               : 96
lstrip               : 118
main                 : 1
mainVDir             : 1
move                 : 123
mueve2               : 41 42
one_par              : 119
p2                   : 1
p3                   : 1 6
p_arc                : 120
p_fill               : 44 47 48 49 50
p_width              : 122
pen                  : 128
penwrite             : 125
poly                 : 117
position             : 124
prelistAss           : 93
prog                 : 0
rect                 : 115
rep                  : 132
rep3                 : 78
stExp                : 102 103
term                 : 61 67
term2                : 66
term3                : 67
tipeAss              : 83
tria                 : 116
type                 : 18 21 93
val                  : 97
valExp               : 74
var2                 : 19 21
var3                 : 21
var33                : 23 24
var4                 : 23 24
var5                 : 19 28
varAss               : 84
vars                 : 3 8 11

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . PR p2 p3 main mainVDir block

    PR              shift and go to state 1

    prog                           shift and go to state 2

state 1

    (1) prog -> PR . p2 p3 main mainVDir block
    (4) p2 -> . globals
    (5) p2 -> . empty
    (8) globals -> . glob vars
    (133) empty -> .
    (9) glob -> . GL

    FUN             reduce using rule 133 (empty -> .)
    MAIN            reduce using rule 133 (empty -> .)
    GL              shift and go to state 4

    p2                             shift and go to state 3
    glob                           shift and go to state 5
    globals                        shift and go to state 6
    empty                          shift and go to state 7

state 2

    (0) S' -> prog .



state 3

    (1) prog -> PR p2 . p3 main mainVDir block
    (6) p3 -> . functions p3
    (7) p3 -> . empty
    (10) functions -> . fun2 DP funVDir block
    (133) empty -> .
    (12) fun2 -> . funBlock ID LP fun3 RP
    (13) funBlock -> . FUN

    MAIN            reduce using rule 133 (empty -> .)
    FUN             shift and go to state 12

    p3                             shift and go to state 9
    functions                      shift and go to state 8
    fun2                           shift and go to state 10
    empty                          shift and go to state 11
    funBlock                       shift and go to state 13

state 4

    (9) glob -> GL .

    V               reduce using rule 9 (glob -> GL .)
    FUN             reduce using rule 9 (glob -> GL .)
    MAIN            reduce using rule 9 (glob -> GL .)


state 5

    (8) globals -> glob . vars
    (19) vars -> . V var2 var5
    (20) vars -> . empty
    (133) empty -> .

    V               shift and go to state 15
    FUN             reduce using rule 133 (empty -> .)
    MAIN            reduce using rule 133 (empty -> .)

    empty                          shift and go to state 16
    vars                           shift and go to state 14

state 6

    (4) p2 -> globals .

    FUN             reduce using rule 4 (p2 -> globals .)
    MAIN            reduce using rule 4 (p2 -> globals .)


state 7

    (5) p2 -> empty .

    FUN             reduce using rule 5 (p2 -> empty .)
    MAIN            reduce using rule 5 (p2 -> empty .)


state 8

    (6) p3 -> functions . p3
    (6) p3 -> . functions p3
    (7) p3 -> . empty
    (10) functions -> . fun2 DP funVDir block
    (133) empty -> .
    (12) fun2 -> . funBlock ID LP fun3 RP
    (13) funBlock -> . FUN

    MAIN            reduce using rule 133 (empty -> .)
    FUN             shift and go to state 12

    p3                             shift and go to state 17
    functions                      shift and go to state 8
    fun2                           shift and go to state 10
    empty                          shift and go to state 11
    funBlock                       shift and go to state 13

state 9

    (1) prog -> PR p2 p3 . main mainVDir block
    (2) main -> . MAIN

    MAIN            shift and go to state 18

    main                           shift and go to state 19

state 10

    (10) functions -> fun2 . DP funVDir block

    DP              shift and go to state 20


state 11

    (7) p3 -> empty .

    MAIN            reduce using rule 7 (p3 -> empty .)


state 12

    (13) funBlock -> FUN .

    ID              reduce using rule 13 (funBlock -> FUN .)


state 13

    (12) fun2 -> funBlock . ID LP fun3 RP

    ID              shift and go to state 21


state 14

    (8) globals -> glob vars .

    FUN             reduce using rule 8 (globals -> glob vars .)
    MAIN            reduce using rule 8 (globals -> glob vars .)


state 15

    (19) vars -> V . var2 var5
    (21) var2 -> . type var3 SC var2
    (22) var2 -> . empty
    (30) type -> . INT
    (31) type -> . FLOAT
    (133) empty -> .

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    L               reduce using rule 133 (empty -> .)
    FUN             reduce using rule 133 (empty -> .)
    MAIN            reduce using rule 133 (empty -> .)
    LB              reduce using rule 133 (empty -> .)

    type                           shift and go to state 25
    empty                          shift and go to state 26
    var2                           shift and go to state 22

state 16

    (20) vars -> empty .

    LB              reduce using rule 20 (vars -> empty .)
    FUN             reduce using rule 20 (vars -> empty .)
    MAIN            reduce using rule 20 (vars -> empty .)


state 17

    (6) p3 -> functions p3 .

    MAIN            reduce using rule 6 (p3 -> functions p3 .)


state 18

    (2) main -> MAIN .

    V               reduce using rule 2 (main -> MAIN .)
    LB              reduce using rule 2 (main -> MAIN .)


state 19

    (1) prog -> PR p2 p3 main . mainVDir block
    (3) mainVDir -> . vars
    (19) vars -> . V var2 var5
    (20) vars -> . empty
    (133) empty -> .

    V               shift and go to state 15
    LB              reduce using rule 133 (empty -> .)

    vars                           shift and go to state 27
    mainVDir                       shift and go to state 28
    empty                          shift and go to state 16

state 20

    (10) functions -> fun2 DP . funVDir block
    (11) funVDir -> . vars
    (19) vars -> . V var2 var5
    (20) vars -> . empty
    (133) empty -> .

    V               shift and go to state 15
    LB              reduce using rule 133 (empty -> .)

    vars                           shift and go to state 29
    empty                          shift and go to state 16
    funVDir                        shift and go to state 30

state 21

    (12) fun2 -> funBlock ID . LP fun3 RP

    LP              shift and go to state 31


state 22

    (19) vars -> V var2 . var5
    (28) var5 -> . list var5
    (29) var5 -> . empty
    (93) list -> . L type ID prelistAss
    (133) empty -> .

    L               shift and go to state 34
    FUN             reduce using rule 133 (empty -> .)
    MAIN            reduce using rule 133 (empty -> .)
    LB              reduce using rule 133 (empty -> .)

    var5                           shift and go to state 32
    list                           shift and go to state 33
    empty                          shift and go to state 35

state 23

    (30) type -> INT .

    ID              reduce using rule 30 (type -> INT .)


state 24

    (31) type -> FLOAT .

    ID              reduce using rule 31 (type -> FLOAT .)


state 25

    (21) var2 -> type . var3 SC var2
    (23) var3 -> . ID var4 var33

    ID              shift and go to state 37

    var3                           shift and go to state 36

state 26

    (22) var2 -> empty .

    L               reduce using rule 22 (var2 -> empty .)
    FUN             reduce using rule 22 (var2 -> empty .)
    MAIN            reduce using rule 22 (var2 -> empty .)
    LB              reduce using rule 22 (var2 -> empty .)


state 27

    (3) mainVDir -> vars .

    LB              reduce using rule 3 (mainVDir -> vars .)


state 28

    (1) prog -> PR p2 p3 main mainVDir . block
    (112) block -> . LB block3 RB

    LB              shift and go to state 38

    block                          shift and go to state 39

state 29

    (11) funVDir -> vars .

    LB              reduce using rule 11 (funVDir -> vars .)


state 30

    (10) functions -> fun2 DP funVDir . block
    (112) block -> . LB block3 RB

    LB              shift and go to state 38

    block                          shift and go to state 40

state 31

    (12) fun2 -> funBlock ID LP . fun3 RP
    (14) fun3 -> . fun5 fun4
    (15) fun3 -> . empty
    (18) fun5 -> . type ID
    (133) empty -> .
    (30) type -> . INT
    (31) type -> . FLOAT

    RP              reduce using rule 133 (empty -> .)
    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    fun5                           shift and go to state 41
    fun3                           shift and go to state 42
    type                           shift and go to state 43
    empty                          shift and go to state 44

state 32

    (19) vars -> V var2 var5 .

    LB              reduce using rule 19 (vars -> V var2 var5 .)
    FUN             reduce using rule 19 (vars -> V var2 var5 .)
    MAIN            reduce using rule 19 (vars -> V var2 var5 .)


state 33

    (28) var5 -> list . var5
    (28) var5 -> . list var5
    (29) var5 -> . empty
    (93) list -> . L type ID prelistAss
    (133) empty -> .

    L               shift and go to state 34
    FUN             reduce using rule 133 (empty -> .)
    MAIN            reduce using rule 133 (empty -> .)
    LB              reduce using rule 133 (empty -> .)

    var5                           shift and go to state 45
    list                           shift and go to state 33
    empty                          shift and go to state 35

state 34

    (93) list -> L . type ID prelistAss
    (30) type -> . INT
    (31) type -> . FLOAT

    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    type                           shift and go to state 46

state 35

    (29) var5 -> empty .

    FUN             reduce using rule 29 (var5 -> empty .)
    MAIN            reduce using rule 29 (var5 -> empty .)
    LB              reduce using rule 29 (var5 -> empty .)


state 36

    (21) var2 -> type var3 . SC var2

    SC              shift and go to state 47


state 37

    (23) var3 -> ID . var4 var33
    (26) var4 -> . EQ exp
    (27) var4 -> . empty
    (133) empty -> .

    EQ              shift and go to state 49
    C               reduce using rule 133 (empty -> .)
    SC              reduce using rule 133 (empty -> .)

    var4                           shift and go to state 48
    empty                          shift and go to state 50

state 38

    (112) block -> LB . block3 RB
    (113) block3 -> . block2 block3
    (114) block3 -> . empty
    (126) block2 -> . figure
    (127) block2 -> . condition
    (128) block2 -> . pen
    (129) block2 -> . lab
    (130) block2 -> . list
    (131) block2 -> . WID
    (132) block2 -> . rep
    (133) empty -> .
    (115) figure -> . rect
    (116) figure -> . tria
    (117) figure -> . poly
    (118) figure -> . lstrip
    (119) figure -> . one_par
    (120) figure -> . p_arc
    (107) condition -> . IF LP expresion condRP block con2
    (121) pen -> . colors
    (122) pen -> . p_width
    (123) pen -> . move
    (124) pen -> . position
    (125) pen -> . penwrite
    (102) lab -> . LA LP stExp lab2 RP SC
    (93) list -> . L type ID prelistAss
    (80) WID -> . ID WID2
    (78) rep -> . RE rep3 block
    (44) rect -> . REC LP exp C exp p_fill RP SC
    (47) tria -> . TRI LP exp C exp C exp p_fill RP SC
    (50) poly -> . POL LP idList p_fill RP SC
    (51) lstrip -> . LS LP idList RP SC
    (48) one_par -> . CIR LP exp p_fill RP SC
    (49) one_par -> . SQ LP exp p_fill RP SC
    (53) p_arc -> . ARC LP exp RP SC
    (35) colors -> . PENC LP exp C exp C exp RP SC
    (36) colors -> . SETC LP exp C exp C exp RP SC
    (37) colors -> . BACO LP exp C exp C exp RP SC
    (38) p_width -> . PENW LP exp RP SC
    (41) move -> . F mueve2
    (42) move -> . B mueve2
    (34) position -> . PENP LP exp C exp RP SC
    (39) penwrite -> . PENU SC
    (40) penwrite -> . PEND SC

    RB              reduce using rule 133 (empty -> .)
    IF              shift and go to state 81
    LA              shift and go to state 64
    L               shift and go to state 34
    ID              shift and go to state 79
    RE              shift and go to state 67
    REC             shift and go to state 61
    TRI             shift and go to state 74
    POL             shift and go to state 66
    LS              shift and go to state 73
    CIR             shift and go to state 84
    SQ              shift and go to state 85
    ARC             shift and go to state 88
    PENC            shift and go to state 70
    SETC            shift and go to state 86
    BACO            shift and go to state 56
    PENW            shift and go to state 62
    F               shift and go to state 76
    B               shift and go to state 75
    PENP            shift and go to state 51
    PENU            shift and go to state 63
    PEND            shift and go to state 69

    block3                         shift and go to state 52
    block2                         shift and go to state 53
    figure                         shift and go to state 54
    lstrip                         shift and go to state 55
    move                           shift and go to state 57
    tria                           shift and go to state 58
    poly                           shift and go to state 59
    colors                         shift and go to state 60
    rep                            shift and go to state 65
    pen                            shift and go to state 68
    condition                      shift and go to state 71
    empty                          shift and go to state 72
    lab                            shift and go to state 77
    one_par                        shift and go to state 78
    rect                           shift and go to state 80
    WID                            shift and go to state 82
    p_arc                          shift and go to state 83
    list                           shift and go to state 87
    position                       shift and go to state 89
    p_width                        shift and go to state 90
    penwrite                       shift and go to state 91

state 39

    (1) prog -> PR p2 p3 main mainVDir block .

    $end            reduce using rule 1 (prog -> PR p2 p3 main mainVDir block .)


state 40

    (10) functions -> fun2 DP funVDir block .

    FUN             reduce using rule 10 (functions -> fun2 DP funVDir block .)
    MAIN            reduce using rule 10 (functions -> fun2 DP funVDir block .)


state 41

    (14) fun3 -> fun5 . fun4
    (16) fun4 -> . C fun5 fun4
    (17) fun4 -> . empty
    (133) empty -> .

    C               shift and go to state 93
    RP              reduce using rule 133 (empty -> .)

    fun4                           shift and go to state 92
    empty                          shift and go to state 94

state 42

    (12) fun2 -> funBlock ID LP fun3 . RP

    RP              shift and go to state 95


state 43

    (18) fun5 -> type . ID

    ID              shift and go to state 96


state 44

    (15) fun3 -> empty .

    RP              reduce using rule 15 (fun3 -> empty .)


state 45

    (28) var5 -> list var5 .

    FUN             reduce using rule 28 (var5 -> list var5 .)
    MAIN            reduce using rule 28 (var5 -> list var5 .)
    LB              reduce using rule 28 (var5 -> list var5 .)


state 46

    (93) list -> L type . ID prelistAss

    ID              shift and go to state 97


state 47

    (21) var2 -> type var3 SC . var2
    (21) var2 -> . type var3 SC var2
    (22) var2 -> . empty
    (30) type -> . INT
    (31) type -> . FLOAT
    (133) empty -> .

    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    L               reduce using rule 133 (empty -> .)
    FUN             reduce using rule 133 (empty -> .)
    MAIN            reduce using rule 133 (empty -> .)
    LB              reduce using rule 133 (empty -> .)

    type                           shift and go to state 25
    empty                          shift and go to state 26
    var2                           shift and go to state 98

state 48

    (23) var3 -> ID var4 . var33
    (24) var33 -> . C ID var4 var33
    (25) var33 -> . empty
    (133) empty -> .

    C               shift and go to state 100
    SC              reduce using rule 133 (empty -> .)

    var33                          shift and go to state 99
    empty                          shift and go to state 101

state 49

    (26) var4 -> EQ . exp
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    exp                            shift and go to state 107
    fact2                          shift and go to state 108
    fact                           shift and go to state 110
    fact4                          shift and go to state 111

state 50

    (27) var4 -> empty .

    C               reduce using rule 27 (var4 -> empty .)
    SC              reduce using rule 27 (var4 -> empty .)


state 51

    (34) position -> PENP . LP exp C exp RP SC

    LP              shift and go to state 112


state 52

    (112) block -> LB block3 . RB

    RB              shift and go to state 113


state 53

    (113) block3 -> block2 . block3
    (113) block3 -> . block2 block3
    (114) block3 -> . empty
    (126) block2 -> . figure
    (127) block2 -> . condition
    (128) block2 -> . pen
    (129) block2 -> . lab
    (130) block2 -> . list
    (131) block2 -> . WID
    (132) block2 -> . rep
    (133) empty -> .
    (115) figure -> . rect
    (116) figure -> . tria
    (117) figure -> . poly
    (118) figure -> . lstrip
    (119) figure -> . one_par
    (120) figure -> . p_arc
    (107) condition -> . IF LP expresion condRP block con2
    (121) pen -> . colors
    (122) pen -> . p_width
    (123) pen -> . move
    (124) pen -> . position
    (125) pen -> . penwrite
    (102) lab -> . LA LP stExp lab2 RP SC
    (93) list -> . L type ID prelistAss
    (80) WID -> . ID WID2
    (78) rep -> . RE rep3 block
    (44) rect -> . REC LP exp C exp p_fill RP SC
    (47) tria -> . TRI LP exp C exp C exp p_fill RP SC
    (50) poly -> . POL LP idList p_fill RP SC
    (51) lstrip -> . LS LP idList RP SC
    (48) one_par -> . CIR LP exp p_fill RP SC
    (49) one_par -> . SQ LP exp p_fill RP SC
    (53) p_arc -> . ARC LP exp RP SC
    (35) colors -> . PENC LP exp C exp C exp RP SC
    (36) colors -> . SETC LP exp C exp C exp RP SC
    (37) colors -> . BACO LP exp C exp C exp RP SC
    (38) p_width -> . PENW LP exp RP SC
    (41) move -> . F mueve2
    (42) move -> . B mueve2
    (34) position -> . PENP LP exp C exp RP SC
    (39) penwrite -> . PENU SC
    (40) penwrite -> . PEND SC

    RB              reduce using rule 133 (empty -> .)
    IF              shift and go to state 81
    LA              shift and go to state 64
    L               shift and go to state 34
    ID              shift and go to state 79
    RE              shift and go to state 67
    REC             shift and go to state 61
    TRI             shift and go to state 74
    POL             shift and go to state 66
    LS              shift and go to state 73
    CIR             shift and go to state 84
    SQ              shift and go to state 85
    ARC             shift and go to state 88
    PENC            shift and go to state 70
    SETC            shift and go to state 86
    BACO            shift and go to state 56
    PENW            shift and go to state 62
    F               shift and go to state 76
    B               shift and go to state 75
    PENP            shift and go to state 51
    PENU            shift and go to state 63
    PEND            shift and go to state 69

    block3                         shift and go to state 114
    block2                         shift and go to state 53
    figure                         shift and go to state 54
    lstrip                         shift and go to state 55
    move                           shift and go to state 57
    tria                           shift and go to state 58
    poly                           shift and go to state 59
    colors                         shift and go to state 60
    rep                            shift and go to state 65
    pen                            shift and go to state 68
    condition                      shift and go to state 71
    empty                          shift and go to state 72
    lab                            shift and go to state 77
    one_par                        shift and go to state 78
    rect                           shift and go to state 80
    WID                            shift and go to state 82
    p_arc                          shift and go to state 83
    list                           shift and go to state 87
    position                       shift and go to state 89
    p_width                        shift and go to state 90
    penwrite                       shift and go to state 91

state 54

    (126) block2 -> figure .

    IF              reduce using rule 126 (block2 -> figure .)
    LA              reduce using rule 126 (block2 -> figure .)
    L               reduce using rule 126 (block2 -> figure .)
    ID              reduce using rule 126 (block2 -> figure .)
    RE              reduce using rule 126 (block2 -> figure .)
    REC             reduce using rule 126 (block2 -> figure .)
    TRI             reduce using rule 126 (block2 -> figure .)
    POL             reduce using rule 126 (block2 -> figure .)
    LS              reduce using rule 126 (block2 -> figure .)
    CIR             reduce using rule 126 (block2 -> figure .)
    SQ              reduce using rule 126 (block2 -> figure .)
    ARC             reduce using rule 126 (block2 -> figure .)
    PENC            reduce using rule 126 (block2 -> figure .)
    SETC            reduce using rule 126 (block2 -> figure .)
    BACO            reduce using rule 126 (block2 -> figure .)
    PENW            reduce using rule 126 (block2 -> figure .)
    F               reduce using rule 126 (block2 -> figure .)
    B               reduce using rule 126 (block2 -> figure .)
    PENP            reduce using rule 126 (block2 -> figure .)
    PENU            reduce using rule 126 (block2 -> figure .)
    PEND            reduce using rule 126 (block2 -> figure .)
    RB              reduce using rule 126 (block2 -> figure .)


state 55

    (118) figure -> lstrip .

    IF              reduce using rule 118 (figure -> lstrip .)
    LA              reduce using rule 118 (figure -> lstrip .)
    L               reduce using rule 118 (figure -> lstrip .)
    ID              reduce using rule 118 (figure -> lstrip .)
    RE              reduce using rule 118 (figure -> lstrip .)
    REC             reduce using rule 118 (figure -> lstrip .)
    TRI             reduce using rule 118 (figure -> lstrip .)
    POL             reduce using rule 118 (figure -> lstrip .)
    LS              reduce using rule 118 (figure -> lstrip .)
    CIR             reduce using rule 118 (figure -> lstrip .)
    SQ              reduce using rule 118 (figure -> lstrip .)
    ARC             reduce using rule 118 (figure -> lstrip .)
    PENC            reduce using rule 118 (figure -> lstrip .)
    SETC            reduce using rule 118 (figure -> lstrip .)
    BACO            reduce using rule 118 (figure -> lstrip .)
    PENW            reduce using rule 118 (figure -> lstrip .)
    F               reduce using rule 118 (figure -> lstrip .)
    B               reduce using rule 118 (figure -> lstrip .)
    PENP            reduce using rule 118 (figure -> lstrip .)
    PENU            reduce using rule 118 (figure -> lstrip .)
    PEND            reduce using rule 118 (figure -> lstrip .)
    RB              reduce using rule 118 (figure -> lstrip .)


state 56

    (37) colors -> BACO . LP exp C exp C exp RP SC

    LP              shift and go to state 115


state 57

    (123) pen -> move .

    IF              reduce using rule 123 (pen -> move .)
    LA              reduce using rule 123 (pen -> move .)
    L               reduce using rule 123 (pen -> move .)
    ID              reduce using rule 123 (pen -> move .)
    RE              reduce using rule 123 (pen -> move .)
    REC             reduce using rule 123 (pen -> move .)
    TRI             reduce using rule 123 (pen -> move .)
    POL             reduce using rule 123 (pen -> move .)
    LS              reduce using rule 123 (pen -> move .)
    CIR             reduce using rule 123 (pen -> move .)
    SQ              reduce using rule 123 (pen -> move .)
    ARC             reduce using rule 123 (pen -> move .)
    PENC            reduce using rule 123 (pen -> move .)
    SETC            reduce using rule 123 (pen -> move .)
    BACO            reduce using rule 123 (pen -> move .)
    PENW            reduce using rule 123 (pen -> move .)
    F               reduce using rule 123 (pen -> move .)
    B               reduce using rule 123 (pen -> move .)
    PENP            reduce using rule 123 (pen -> move .)
    PENU            reduce using rule 123 (pen -> move .)
    PEND            reduce using rule 123 (pen -> move .)
    RB              reduce using rule 123 (pen -> move .)


state 58

    (116) figure -> tria .

    IF              reduce using rule 116 (figure -> tria .)
    LA              reduce using rule 116 (figure -> tria .)
    L               reduce using rule 116 (figure -> tria .)
    ID              reduce using rule 116 (figure -> tria .)
    RE              reduce using rule 116 (figure -> tria .)
    REC             reduce using rule 116 (figure -> tria .)
    TRI             reduce using rule 116 (figure -> tria .)
    POL             reduce using rule 116 (figure -> tria .)
    LS              reduce using rule 116 (figure -> tria .)
    CIR             reduce using rule 116 (figure -> tria .)
    SQ              reduce using rule 116 (figure -> tria .)
    ARC             reduce using rule 116 (figure -> tria .)
    PENC            reduce using rule 116 (figure -> tria .)
    SETC            reduce using rule 116 (figure -> tria .)
    BACO            reduce using rule 116 (figure -> tria .)
    PENW            reduce using rule 116 (figure -> tria .)
    F               reduce using rule 116 (figure -> tria .)
    B               reduce using rule 116 (figure -> tria .)
    PENP            reduce using rule 116 (figure -> tria .)
    PENU            reduce using rule 116 (figure -> tria .)
    PEND            reduce using rule 116 (figure -> tria .)
    RB              reduce using rule 116 (figure -> tria .)


state 59

    (117) figure -> poly .

    IF              reduce using rule 117 (figure -> poly .)
    LA              reduce using rule 117 (figure -> poly .)
    L               reduce using rule 117 (figure -> poly .)
    ID              reduce using rule 117 (figure -> poly .)
    RE              reduce using rule 117 (figure -> poly .)
    REC             reduce using rule 117 (figure -> poly .)
    TRI             reduce using rule 117 (figure -> poly .)
    POL             reduce using rule 117 (figure -> poly .)
    LS              reduce using rule 117 (figure -> poly .)
    CIR             reduce using rule 117 (figure -> poly .)
    SQ              reduce using rule 117 (figure -> poly .)
    ARC             reduce using rule 117 (figure -> poly .)
    PENC            reduce using rule 117 (figure -> poly .)
    SETC            reduce using rule 117 (figure -> poly .)
    BACO            reduce using rule 117 (figure -> poly .)
    PENW            reduce using rule 117 (figure -> poly .)
    F               reduce using rule 117 (figure -> poly .)
    B               reduce using rule 117 (figure -> poly .)
    PENP            reduce using rule 117 (figure -> poly .)
    PENU            reduce using rule 117 (figure -> poly .)
    PEND            reduce using rule 117 (figure -> poly .)
    RB              reduce using rule 117 (figure -> poly .)


state 60

    (121) pen -> colors .

    IF              reduce using rule 121 (pen -> colors .)
    LA              reduce using rule 121 (pen -> colors .)
    L               reduce using rule 121 (pen -> colors .)
    ID              reduce using rule 121 (pen -> colors .)
    RE              reduce using rule 121 (pen -> colors .)
    REC             reduce using rule 121 (pen -> colors .)
    TRI             reduce using rule 121 (pen -> colors .)
    POL             reduce using rule 121 (pen -> colors .)
    LS              reduce using rule 121 (pen -> colors .)
    CIR             reduce using rule 121 (pen -> colors .)
    SQ              reduce using rule 121 (pen -> colors .)
    ARC             reduce using rule 121 (pen -> colors .)
    PENC            reduce using rule 121 (pen -> colors .)
    SETC            reduce using rule 121 (pen -> colors .)
    BACO            reduce using rule 121 (pen -> colors .)
    PENW            reduce using rule 121 (pen -> colors .)
    F               reduce using rule 121 (pen -> colors .)
    B               reduce using rule 121 (pen -> colors .)
    PENP            reduce using rule 121 (pen -> colors .)
    PENU            reduce using rule 121 (pen -> colors .)
    PEND            reduce using rule 121 (pen -> colors .)
    RB              reduce using rule 121 (pen -> colors .)


state 61

    (44) rect -> REC . LP exp C exp p_fill RP SC

    LP              shift and go to state 116


state 62

    (38) p_width -> PENW . LP exp RP SC

    LP              shift and go to state 117


state 63

    (39) penwrite -> PENU . SC

    SC              shift and go to state 118


state 64

    (102) lab -> LA . LP stExp lab2 RP SC

    LP              shift and go to state 119


state 65

    (132) block2 -> rep .

    IF              reduce using rule 132 (block2 -> rep .)
    LA              reduce using rule 132 (block2 -> rep .)
    L               reduce using rule 132 (block2 -> rep .)
    ID              reduce using rule 132 (block2 -> rep .)
    RE              reduce using rule 132 (block2 -> rep .)
    REC             reduce using rule 132 (block2 -> rep .)
    TRI             reduce using rule 132 (block2 -> rep .)
    POL             reduce using rule 132 (block2 -> rep .)
    LS              reduce using rule 132 (block2 -> rep .)
    CIR             reduce using rule 132 (block2 -> rep .)
    SQ              reduce using rule 132 (block2 -> rep .)
    ARC             reduce using rule 132 (block2 -> rep .)
    PENC            reduce using rule 132 (block2 -> rep .)
    SETC            reduce using rule 132 (block2 -> rep .)
    BACO            reduce using rule 132 (block2 -> rep .)
    PENW            reduce using rule 132 (block2 -> rep .)
    F               reduce using rule 132 (block2 -> rep .)
    B               reduce using rule 132 (block2 -> rep .)
    PENP            reduce using rule 132 (block2 -> rep .)
    PENU            reduce using rule 132 (block2 -> rep .)
    PEND            reduce using rule 132 (block2 -> rep .)
    RB              reduce using rule 132 (block2 -> rep .)


state 66

    (50) poly -> POL . LP idList p_fill RP SC

    LP              shift and go to state 120


state 67

    (78) rep -> RE . rep3 block
    (79) rep3 -> . exp
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    rep3                           shift and go to state 121
    exp                            shift and go to state 122
    fact2                          shift and go to state 108
    fact                           shift and go to state 110
    fact4                          shift and go to state 111

state 68

    (128) block2 -> pen .

    IF              reduce using rule 128 (block2 -> pen .)
    LA              reduce using rule 128 (block2 -> pen .)
    L               reduce using rule 128 (block2 -> pen .)
    ID              reduce using rule 128 (block2 -> pen .)
    RE              reduce using rule 128 (block2 -> pen .)
    REC             reduce using rule 128 (block2 -> pen .)
    TRI             reduce using rule 128 (block2 -> pen .)
    POL             reduce using rule 128 (block2 -> pen .)
    LS              reduce using rule 128 (block2 -> pen .)
    CIR             reduce using rule 128 (block2 -> pen .)
    SQ              reduce using rule 128 (block2 -> pen .)
    ARC             reduce using rule 128 (block2 -> pen .)
    PENC            reduce using rule 128 (block2 -> pen .)
    SETC            reduce using rule 128 (block2 -> pen .)
    BACO            reduce using rule 128 (block2 -> pen .)
    PENW            reduce using rule 128 (block2 -> pen .)
    F               reduce using rule 128 (block2 -> pen .)
    B               reduce using rule 128 (block2 -> pen .)
    PENP            reduce using rule 128 (block2 -> pen .)
    PENU            reduce using rule 128 (block2 -> pen .)
    PEND            reduce using rule 128 (block2 -> pen .)
    RB              reduce using rule 128 (block2 -> pen .)


state 69

    (40) penwrite -> PEND . SC

    SC              shift and go to state 123


state 70

    (35) colors -> PENC . LP exp C exp C exp RP SC

    LP              shift and go to state 124


state 71

    (127) block2 -> condition .

    IF              reduce using rule 127 (block2 -> condition .)
    LA              reduce using rule 127 (block2 -> condition .)
    L               reduce using rule 127 (block2 -> condition .)
    ID              reduce using rule 127 (block2 -> condition .)
    RE              reduce using rule 127 (block2 -> condition .)
    REC             reduce using rule 127 (block2 -> condition .)
    TRI             reduce using rule 127 (block2 -> condition .)
    POL             reduce using rule 127 (block2 -> condition .)
    LS              reduce using rule 127 (block2 -> condition .)
    CIR             reduce using rule 127 (block2 -> condition .)
    SQ              reduce using rule 127 (block2 -> condition .)
    ARC             reduce using rule 127 (block2 -> condition .)
    PENC            reduce using rule 127 (block2 -> condition .)
    SETC            reduce using rule 127 (block2 -> condition .)
    BACO            reduce using rule 127 (block2 -> condition .)
    PENW            reduce using rule 127 (block2 -> condition .)
    F               reduce using rule 127 (block2 -> condition .)
    B               reduce using rule 127 (block2 -> condition .)
    PENP            reduce using rule 127 (block2 -> condition .)
    PENU            reduce using rule 127 (block2 -> condition .)
    PEND            reduce using rule 127 (block2 -> condition .)
    RB              reduce using rule 127 (block2 -> condition .)


state 72

    (114) block3 -> empty .

    RB              reduce using rule 114 (block3 -> empty .)


state 73

    (51) lstrip -> LS . LP idList RP SC

    LP              shift and go to state 125


state 74

    (47) tria -> TRI . LP exp C exp C exp p_fill RP SC

    LP              shift and go to state 126


state 75

    (42) move -> B . mueve2
    (43) mueve2 -> . LP exp C A exp RP SC

    LP              shift and go to state 127

    mueve2                         shift and go to state 128

state 76

    (41) move -> F . mueve2
    (43) mueve2 -> . LP exp C A exp RP SC

    LP              shift and go to state 127

    mueve2                         shift and go to state 129

state 77

    (129) block2 -> lab .

    IF              reduce using rule 129 (block2 -> lab .)
    LA              reduce using rule 129 (block2 -> lab .)
    L               reduce using rule 129 (block2 -> lab .)
    ID              reduce using rule 129 (block2 -> lab .)
    RE              reduce using rule 129 (block2 -> lab .)
    REC             reduce using rule 129 (block2 -> lab .)
    TRI             reduce using rule 129 (block2 -> lab .)
    POL             reduce using rule 129 (block2 -> lab .)
    LS              reduce using rule 129 (block2 -> lab .)
    CIR             reduce using rule 129 (block2 -> lab .)
    SQ              reduce using rule 129 (block2 -> lab .)
    ARC             reduce using rule 129 (block2 -> lab .)
    PENC            reduce using rule 129 (block2 -> lab .)
    SETC            reduce using rule 129 (block2 -> lab .)
    BACO            reduce using rule 129 (block2 -> lab .)
    PENW            reduce using rule 129 (block2 -> lab .)
    F               reduce using rule 129 (block2 -> lab .)
    B               reduce using rule 129 (block2 -> lab .)
    PENP            reduce using rule 129 (block2 -> lab .)
    PENU            reduce using rule 129 (block2 -> lab .)
    PEND            reduce using rule 129 (block2 -> lab .)
    RB              reduce using rule 129 (block2 -> lab .)


state 78

    (119) figure -> one_par .

    IF              reduce using rule 119 (figure -> one_par .)
    LA              reduce using rule 119 (figure -> one_par .)
    L               reduce using rule 119 (figure -> one_par .)
    ID              reduce using rule 119 (figure -> one_par .)
    RE              reduce using rule 119 (figure -> one_par .)
    REC             reduce using rule 119 (figure -> one_par .)
    TRI             reduce using rule 119 (figure -> one_par .)
    POL             reduce using rule 119 (figure -> one_par .)
    LS              reduce using rule 119 (figure -> one_par .)
    CIR             reduce using rule 119 (figure -> one_par .)
    SQ              reduce using rule 119 (figure -> one_par .)
    ARC             reduce using rule 119 (figure -> one_par .)
    PENC            reduce using rule 119 (figure -> one_par .)
    SETC            reduce using rule 119 (figure -> one_par .)
    BACO            reduce using rule 119 (figure -> one_par .)
    PENW            reduce using rule 119 (figure -> one_par .)
    F               reduce using rule 119 (figure -> one_par .)
    B               reduce using rule 119 (figure -> one_par .)
    PENP            reduce using rule 119 (figure -> one_par .)
    PENU            reduce using rule 119 (figure -> one_par .)
    PEND            reduce using rule 119 (figure -> one_par .)
    RB              reduce using rule 119 (figure -> one_par .)


state 79

    (80) WID -> ID . WID2
    (81) WID2 -> . assigment
    (82) WID2 -> . funCall
    (83) assigment -> . EQ tipeAss
    (87) funCall -> . LP func2 RP SC

    EQ              shift and go to state 132
    LP              shift and go to state 130

    funCall                        shift and go to state 133
    assigment                      shift and go to state 131
    WID2                           shift and go to state 134

state 80

    (115) figure -> rect .

    IF              reduce using rule 115 (figure -> rect .)
    LA              reduce using rule 115 (figure -> rect .)
    L               reduce using rule 115 (figure -> rect .)
    ID              reduce using rule 115 (figure -> rect .)
    RE              reduce using rule 115 (figure -> rect .)
    REC             reduce using rule 115 (figure -> rect .)
    TRI             reduce using rule 115 (figure -> rect .)
    POL             reduce using rule 115 (figure -> rect .)
    LS              reduce using rule 115 (figure -> rect .)
    CIR             reduce using rule 115 (figure -> rect .)
    SQ              reduce using rule 115 (figure -> rect .)
    ARC             reduce using rule 115 (figure -> rect .)
    PENC            reduce using rule 115 (figure -> rect .)
    SETC            reduce using rule 115 (figure -> rect .)
    BACO            reduce using rule 115 (figure -> rect .)
    PENW            reduce using rule 115 (figure -> rect .)
    F               reduce using rule 115 (figure -> rect .)
    B               reduce using rule 115 (figure -> rect .)
    PENP            reduce using rule 115 (figure -> rect .)
    PENU            reduce using rule 115 (figure -> rect .)
    PEND            reduce using rule 115 (figure -> rect .)
    RB              reduce using rule 115 (figure -> rect .)


state 81

    (107) condition -> IF . LP expresion condRP block con2

    LP              shift and go to state 135


state 82

    (131) block2 -> WID .

    IF              reduce using rule 131 (block2 -> WID .)
    LA              reduce using rule 131 (block2 -> WID .)
    L               reduce using rule 131 (block2 -> WID .)
    ID              reduce using rule 131 (block2 -> WID .)
    RE              reduce using rule 131 (block2 -> WID .)
    REC             reduce using rule 131 (block2 -> WID .)
    TRI             reduce using rule 131 (block2 -> WID .)
    POL             reduce using rule 131 (block2 -> WID .)
    LS              reduce using rule 131 (block2 -> WID .)
    CIR             reduce using rule 131 (block2 -> WID .)
    SQ              reduce using rule 131 (block2 -> WID .)
    ARC             reduce using rule 131 (block2 -> WID .)
    PENC            reduce using rule 131 (block2 -> WID .)
    SETC            reduce using rule 131 (block2 -> WID .)
    BACO            reduce using rule 131 (block2 -> WID .)
    PENW            reduce using rule 131 (block2 -> WID .)
    F               reduce using rule 131 (block2 -> WID .)
    B               reduce using rule 131 (block2 -> WID .)
    PENP            reduce using rule 131 (block2 -> WID .)
    PENU            reduce using rule 131 (block2 -> WID .)
    PEND            reduce using rule 131 (block2 -> WID .)
    RB              reduce using rule 131 (block2 -> WID .)


state 83

    (120) figure -> p_arc .

    IF              reduce using rule 120 (figure -> p_arc .)
    LA              reduce using rule 120 (figure -> p_arc .)
    L               reduce using rule 120 (figure -> p_arc .)
    ID              reduce using rule 120 (figure -> p_arc .)
    RE              reduce using rule 120 (figure -> p_arc .)
    REC             reduce using rule 120 (figure -> p_arc .)
    TRI             reduce using rule 120 (figure -> p_arc .)
    POL             reduce using rule 120 (figure -> p_arc .)
    LS              reduce using rule 120 (figure -> p_arc .)
    CIR             reduce using rule 120 (figure -> p_arc .)
    SQ              reduce using rule 120 (figure -> p_arc .)
    ARC             reduce using rule 120 (figure -> p_arc .)
    PENC            reduce using rule 120 (figure -> p_arc .)
    SETC            reduce using rule 120 (figure -> p_arc .)
    BACO            reduce using rule 120 (figure -> p_arc .)
    PENW            reduce using rule 120 (figure -> p_arc .)
    F               reduce using rule 120 (figure -> p_arc .)
    B               reduce using rule 120 (figure -> p_arc .)
    PENP            reduce using rule 120 (figure -> p_arc .)
    PENU            reduce using rule 120 (figure -> p_arc .)
    PEND            reduce using rule 120 (figure -> p_arc .)
    RB              reduce using rule 120 (figure -> p_arc .)


state 84

    (48) one_par -> CIR . LP exp p_fill RP SC

    LP              shift and go to state 136


state 85

    (49) one_par -> SQ . LP exp p_fill RP SC

    LP              shift and go to state 137


state 86

    (36) colors -> SETC . LP exp C exp C exp RP SC

    LP              shift and go to state 138


state 87

    (130) block2 -> list .

    IF              reduce using rule 130 (block2 -> list .)
    LA              reduce using rule 130 (block2 -> list .)
    L               reduce using rule 130 (block2 -> list .)
    ID              reduce using rule 130 (block2 -> list .)
    RE              reduce using rule 130 (block2 -> list .)
    REC             reduce using rule 130 (block2 -> list .)
    TRI             reduce using rule 130 (block2 -> list .)
    POL             reduce using rule 130 (block2 -> list .)
    LS              reduce using rule 130 (block2 -> list .)
    CIR             reduce using rule 130 (block2 -> list .)
    SQ              reduce using rule 130 (block2 -> list .)
    ARC             reduce using rule 130 (block2 -> list .)
    PENC            reduce using rule 130 (block2 -> list .)
    SETC            reduce using rule 130 (block2 -> list .)
    BACO            reduce using rule 130 (block2 -> list .)
    PENW            reduce using rule 130 (block2 -> list .)
    F               reduce using rule 130 (block2 -> list .)
    B               reduce using rule 130 (block2 -> list .)
    PENP            reduce using rule 130 (block2 -> list .)
    PENU            reduce using rule 130 (block2 -> list .)
    PEND            reduce using rule 130 (block2 -> list .)
    RB              reduce using rule 130 (block2 -> list .)


state 88

    (53) p_arc -> ARC . LP exp RP SC

    LP              shift and go to state 139


state 89

    (124) pen -> position .

    IF              reduce using rule 124 (pen -> position .)
    LA              reduce using rule 124 (pen -> position .)
    L               reduce using rule 124 (pen -> position .)
    ID              reduce using rule 124 (pen -> position .)
    RE              reduce using rule 124 (pen -> position .)
    REC             reduce using rule 124 (pen -> position .)
    TRI             reduce using rule 124 (pen -> position .)
    POL             reduce using rule 124 (pen -> position .)
    LS              reduce using rule 124 (pen -> position .)
    CIR             reduce using rule 124 (pen -> position .)
    SQ              reduce using rule 124 (pen -> position .)
    ARC             reduce using rule 124 (pen -> position .)
    PENC            reduce using rule 124 (pen -> position .)
    SETC            reduce using rule 124 (pen -> position .)
    BACO            reduce using rule 124 (pen -> position .)
    PENW            reduce using rule 124 (pen -> position .)
    F               reduce using rule 124 (pen -> position .)
    B               reduce using rule 124 (pen -> position .)
    PENP            reduce using rule 124 (pen -> position .)
    PENU            reduce using rule 124 (pen -> position .)
    PEND            reduce using rule 124 (pen -> position .)
    RB              reduce using rule 124 (pen -> position .)


state 90

    (122) pen -> p_width .

    IF              reduce using rule 122 (pen -> p_width .)
    LA              reduce using rule 122 (pen -> p_width .)
    L               reduce using rule 122 (pen -> p_width .)
    ID              reduce using rule 122 (pen -> p_width .)
    RE              reduce using rule 122 (pen -> p_width .)
    REC             reduce using rule 122 (pen -> p_width .)
    TRI             reduce using rule 122 (pen -> p_width .)
    POL             reduce using rule 122 (pen -> p_width .)
    LS              reduce using rule 122 (pen -> p_width .)
    CIR             reduce using rule 122 (pen -> p_width .)
    SQ              reduce using rule 122 (pen -> p_width .)
    ARC             reduce using rule 122 (pen -> p_width .)
    PENC            reduce using rule 122 (pen -> p_width .)
    SETC            reduce using rule 122 (pen -> p_width .)
    BACO            reduce using rule 122 (pen -> p_width .)
    PENW            reduce using rule 122 (pen -> p_width .)
    F               reduce using rule 122 (pen -> p_width .)
    B               reduce using rule 122 (pen -> p_width .)
    PENP            reduce using rule 122 (pen -> p_width .)
    PENU            reduce using rule 122 (pen -> p_width .)
    PEND            reduce using rule 122 (pen -> p_width .)
    RB              reduce using rule 122 (pen -> p_width .)


state 91

    (125) pen -> penwrite .

    IF              reduce using rule 125 (pen -> penwrite .)
    LA              reduce using rule 125 (pen -> penwrite .)
    L               reduce using rule 125 (pen -> penwrite .)
    ID              reduce using rule 125 (pen -> penwrite .)
    RE              reduce using rule 125 (pen -> penwrite .)
    REC             reduce using rule 125 (pen -> penwrite .)
    TRI             reduce using rule 125 (pen -> penwrite .)
    POL             reduce using rule 125 (pen -> penwrite .)
    LS              reduce using rule 125 (pen -> penwrite .)
    CIR             reduce using rule 125 (pen -> penwrite .)
    SQ              reduce using rule 125 (pen -> penwrite .)
    ARC             reduce using rule 125 (pen -> penwrite .)
    PENC            reduce using rule 125 (pen -> penwrite .)
    SETC            reduce using rule 125 (pen -> penwrite .)
    BACO            reduce using rule 125 (pen -> penwrite .)
    PENW            reduce using rule 125 (pen -> penwrite .)
    F               reduce using rule 125 (pen -> penwrite .)
    B               reduce using rule 125 (pen -> penwrite .)
    PENP            reduce using rule 125 (pen -> penwrite .)
    PENU            reduce using rule 125 (pen -> penwrite .)
    PEND            reduce using rule 125 (pen -> penwrite .)
    RB              reduce using rule 125 (pen -> penwrite .)


state 92

    (14) fun3 -> fun5 fun4 .

    RP              reduce using rule 14 (fun3 -> fun5 fun4 .)


state 93

    (16) fun4 -> C . fun5 fun4
    (18) fun5 -> . type ID
    (30) type -> . INT
    (31) type -> . FLOAT

    INT             shift and go to state 23
    FLOAT           shift and go to state 24

    fun5                           shift and go to state 140
    type                           shift and go to state 43

state 94

    (17) fun4 -> empty .

    RP              reduce using rule 17 (fun4 -> empty .)


state 95

    (12) fun2 -> funBlock ID LP fun3 RP .

    DP              reduce using rule 12 (fun2 -> funBlock ID LP fun3 RP .)


state 96

    (18) fun5 -> type ID .

    C               reduce using rule 18 (fun5 -> type ID .)
    RP              reduce using rule 18 (fun5 -> type ID .)


state 97

    (93) list -> L type ID . prelistAss
    (94) prelistAss -> . EQ listAss
    (95) prelistAss -> . SC

    EQ              shift and go to state 143
    SC              shift and go to state 142

    prelistAss                     shift and go to state 141

state 98

    (21) var2 -> type var3 SC var2 .

    L               reduce using rule 21 (var2 -> type var3 SC var2 .)
    FUN             reduce using rule 21 (var2 -> type var3 SC var2 .)
    MAIN            reduce using rule 21 (var2 -> type var3 SC var2 .)
    LB              reduce using rule 21 (var2 -> type var3 SC var2 .)


state 99

    (23) var3 -> ID var4 var33 .

    SC              reduce using rule 23 (var3 -> ID var4 var33 .)


state 100

    (24) var33 -> C . ID var4 var33

    ID              shift and go to state 144


state 101

    (25) var33 -> empty .

    SC              reduce using rule 25 (var33 -> empty .)


state 102

    (61) exp -> term . exp2
    (62) exp2 -> . exp3 exp
    (63) exp2 -> . empty
    (64) exp3 -> . ADD
    (65) exp3 -> . SUB
    (133) empty -> .

  ! shift/reduce conflict for ADD resolved as shift
    ADD             shift and go to state 148
    SUB             shift and go to state 145
    C               reduce using rule 133 (empty -> .)
    SC              reduce using rule 133 (empty -> .)
    LB              reduce using rule 133 (empty -> .)
    RP              reduce using rule 133 (empty -> .)
    LT              reduce using rule 133 (empty -> .)
    MT              reduce using rule 133 (empty -> .)
    D               reduce using rule 133 (empty -> .)
    SEQ             reduce using rule 133 (empty -> .)

  ! ADD             [ reduce using rule 133 (empty -> .) ]

    exp3                           shift and go to state 146
    exp2                           shift and go to state 147
    empty                          shift and go to state 149

state 103

    (74) fact4 -> valExp .

    M               reduce using rule 74 (fact4 -> valExp .)
    DIV             reduce using rule 74 (fact4 -> valExp .)
    ADD             reduce using rule 74 (fact4 -> valExp .)
    SUB             reduce using rule 74 (fact4 -> valExp .)
    C               reduce using rule 74 (fact4 -> valExp .)
    RP              reduce using rule 74 (fact4 -> valExp .)
    SC              reduce using rule 74 (fact4 -> valExp .)
    LB              reduce using rule 74 (fact4 -> valExp .)
    LT              reduce using rule 74 (fact4 -> valExp .)
    MT              reduce using rule 74 (fact4 -> valExp .)
    D               reduce using rule 74 (fact4 -> valExp .)
    SEQ             reduce using rule 74 (fact4 -> valExp .)


state 104

    (73) fact2 -> LP .

    LP              reduce using rule 73 (fact2 -> LP .)
    ID              reduce using rule 73 (fact2 -> LP .)
    VALI            reduce using rule 73 (fact2 -> LP .)
    VALF            reduce using rule 73 (fact2 -> LP .)


state 105

    (76) valExp -> VALI .

    M               reduce using rule 76 (valExp -> VALI .)
    DIV             reduce using rule 76 (valExp -> VALI .)
    ADD             reduce using rule 76 (valExp -> VALI .)
    SUB             reduce using rule 76 (valExp -> VALI .)
    RP              reduce using rule 76 (valExp -> VALI .)
    C               reduce using rule 76 (valExp -> VALI .)
    LB              reduce using rule 76 (valExp -> VALI .)
    SC              reduce using rule 76 (valExp -> VALI .)
    LT              reduce using rule 76 (valExp -> VALI .)
    MT              reduce using rule 76 (valExp -> VALI .)
    D               reduce using rule 76 (valExp -> VALI .)
    SEQ             reduce using rule 76 (valExp -> VALI .)


state 106

    (77) valExp -> VALF .

    M               reduce using rule 77 (valExp -> VALF .)
    DIV             reduce using rule 77 (valExp -> VALF .)
    ADD             reduce using rule 77 (valExp -> VALF .)
    SUB             reduce using rule 77 (valExp -> VALF .)
    RP              reduce using rule 77 (valExp -> VALF .)
    C               reduce using rule 77 (valExp -> VALF .)
    LB              reduce using rule 77 (valExp -> VALF .)
    SC              reduce using rule 77 (valExp -> VALF .)
    LT              reduce using rule 77 (valExp -> VALF .)
    MT              reduce using rule 77 (valExp -> VALF .)
    D               reduce using rule 77 (valExp -> VALF .)
    SEQ             reduce using rule 77 (valExp -> VALF .)


state 107

    (26) var4 -> EQ exp .

    C               reduce using rule 26 (var4 -> EQ exp .)
    SC              reduce using rule 26 (var4 -> EQ exp .)


state 108

    (71) fact -> fact2 . exp RP
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    exp                            shift and go to state 150
    fact2                          shift and go to state 108
    fact                           shift and go to state 110
    fact4                          shift and go to state 111

state 109

    (75) fact4 -> ID .

    M               reduce using rule 75 (fact4 -> ID .)
    DIV             reduce using rule 75 (fact4 -> ID .)
    ADD             reduce using rule 75 (fact4 -> ID .)
    SUB             reduce using rule 75 (fact4 -> ID .)
    C               reduce using rule 75 (fact4 -> ID .)
    RP              reduce using rule 75 (fact4 -> ID .)
    SC              reduce using rule 75 (fact4 -> ID .)
    LB              reduce using rule 75 (fact4 -> ID .)
    LT              reduce using rule 75 (fact4 -> ID .)
    MT              reduce using rule 75 (fact4 -> ID .)
    D               reduce using rule 75 (fact4 -> ID .)
    SEQ             reduce using rule 75 (fact4 -> ID .)


state 110

    (66) term -> fact . term2
    (67) term2 -> . term3 term
    (68) term2 -> . empty
    (69) term3 -> . M
    (70) term3 -> . DIV
    (133) empty -> .

    M               shift and go to state 153
    DIV             shift and go to state 154
    ADD             reduce using rule 133 (empty -> .)
    SUB             reduce using rule 133 (empty -> .)
    C               reduce using rule 133 (empty -> .)
    SC              reduce using rule 133 (empty -> .)
    LB              reduce using rule 133 (empty -> .)
    RP              reduce using rule 133 (empty -> .)
    LT              reduce using rule 133 (empty -> .)
    MT              reduce using rule 133 (empty -> .)
    D               reduce using rule 133 (empty -> .)
    SEQ             reduce using rule 133 (empty -> .)

    empty                          shift and go to state 155
    term3                          shift and go to state 151
    term2                          shift and go to state 152

state 111

    (72) fact -> fact4 .

    M               reduce using rule 72 (fact -> fact4 .)
    DIV             reduce using rule 72 (fact -> fact4 .)
    ADD             reduce using rule 72 (fact -> fact4 .)
    SUB             reduce using rule 72 (fact -> fact4 .)
    C               reduce using rule 72 (fact -> fact4 .)
    RP              reduce using rule 72 (fact -> fact4 .)
    SC              reduce using rule 72 (fact -> fact4 .)
    LB              reduce using rule 72 (fact -> fact4 .)
    LT              reduce using rule 72 (fact -> fact4 .)
    MT              reduce using rule 72 (fact -> fact4 .)
    D               reduce using rule 72 (fact -> fact4 .)
    SEQ             reduce using rule 72 (fact -> fact4 .)


state 112

    (34) position -> PENP LP . exp C exp RP SC
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    exp                            shift and go to state 156
    fact2                          shift and go to state 108
    fact                           shift and go to state 110
    fact4                          shift and go to state 111

state 113

    (112) block -> LB block3 RB .

    FUN             reduce using rule 112 (block -> LB block3 RB .)
    MAIN            reduce using rule 112 (block -> LB block3 RB .)
    IF              reduce using rule 112 (block -> LB block3 RB .)
    LA              reduce using rule 112 (block -> LB block3 RB .)
    L               reduce using rule 112 (block -> LB block3 RB .)
    ID              reduce using rule 112 (block -> LB block3 RB .)
    RE              reduce using rule 112 (block -> LB block3 RB .)
    REC             reduce using rule 112 (block -> LB block3 RB .)
    TRI             reduce using rule 112 (block -> LB block3 RB .)
    POL             reduce using rule 112 (block -> LB block3 RB .)
    LS              reduce using rule 112 (block -> LB block3 RB .)
    CIR             reduce using rule 112 (block -> LB block3 RB .)
    SQ              reduce using rule 112 (block -> LB block3 RB .)
    ARC             reduce using rule 112 (block -> LB block3 RB .)
    PENC            reduce using rule 112 (block -> LB block3 RB .)
    SETC            reduce using rule 112 (block -> LB block3 RB .)
    BACO            reduce using rule 112 (block -> LB block3 RB .)
    PENW            reduce using rule 112 (block -> LB block3 RB .)
    F               reduce using rule 112 (block -> LB block3 RB .)
    B               reduce using rule 112 (block -> LB block3 RB .)
    PENP            reduce using rule 112 (block -> LB block3 RB .)
    PENU            reduce using rule 112 (block -> LB block3 RB .)
    PEND            reduce using rule 112 (block -> LB block3 RB .)
    RB              reduce using rule 112 (block -> LB block3 RB .)
    ELSE            reduce using rule 112 (block -> LB block3 RB .)
    $end            reduce using rule 112 (block -> LB block3 RB .)


state 114

    (113) block3 -> block2 block3 .

    RB              reduce using rule 113 (block3 -> block2 block3 .)


state 115

    (37) colors -> BACO LP . exp C exp C exp RP SC
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    exp                            shift and go to state 157
    fact2                          shift and go to state 108
    fact                           shift and go to state 110
    fact4                          shift and go to state 111

state 116

    (44) rect -> REC LP . exp C exp p_fill RP SC
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    exp                            shift and go to state 158
    fact2                          shift and go to state 108
    fact4                          shift and go to state 111
    fact                           shift and go to state 110

state 117

    (38) p_width -> PENW LP . exp RP SC
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    exp                            shift and go to state 159
    fact2                          shift and go to state 108
    fact                           shift and go to state 110
    fact4                          shift and go to state 111

state 118

    (39) penwrite -> PENU SC .

    IF              reduce using rule 39 (penwrite -> PENU SC .)
    LA              reduce using rule 39 (penwrite -> PENU SC .)
    L               reduce using rule 39 (penwrite -> PENU SC .)
    ID              reduce using rule 39 (penwrite -> PENU SC .)
    RE              reduce using rule 39 (penwrite -> PENU SC .)
    REC             reduce using rule 39 (penwrite -> PENU SC .)
    TRI             reduce using rule 39 (penwrite -> PENU SC .)
    POL             reduce using rule 39 (penwrite -> PENU SC .)
    LS              reduce using rule 39 (penwrite -> PENU SC .)
    CIR             reduce using rule 39 (penwrite -> PENU SC .)
    SQ              reduce using rule 39 (penwrite -> PENU SC .)
    ARC             reduce using rule 39 (penwrite -> PENU SC .)
    PENC            reduce using rule 39 (penwrite -> PENU SC .)
    SETC            reduce using rule 39 (penwrite -> PENU SC .)
    BACO            reduce using rule 39 (penwrite -> PENU SC .)
    PENW            reduce using rule 39 (penwrite -> PENU SC .)
    F               reduce using rule 39 (penwrite -> PENU SC .)
    B               reduce using rule 39 (penwrite -> PENU SC .)
    PENP            reduce using rule 39 (penwrite -> PENU SC .)
    PENU            reduce using rule 39 (penwrite -> PENU SC .)
    PEND            reduce using rule 39 (penwrite -> PENU SC .)
    RB              reduce using rule 39 (penwrite -> PENU SC .)


state 119

    (102) lab -> LA LP . stExp lab2 RP SC
    (105) stExp -> . STR
    (106) stExp -> . exp
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    STR             shift and go to state 160
    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    stExp                          shift and go to state 161
    exp                            shift and go to state 162
    fact2                          shift and go to state 108
    fact                           shift and go to state 110
    fact4                          shift and go to state 111

state 120

    (50) poly -> POL LP . idList p_fill RP SC
    (52) idList -> . ID

    ID              shift and go to state 164

    idList                         shift and go to state 163

state 121

    (78) rep -> RE rep3 . block
    (112) block -> . LB block3 RB

    LB              shift and go to state 38

    block                          shift and go to state 165

state 122

    (79) rep3 -> exp .

    LB              reduce using rule 79 (rep3 -> exp .)


state 123

    (40) penwrite -> PEND SC .

    IF              reduce using rule 40 (penwrite -> PEND SC .)
    LA              reduce using rule 40 (penwrite -> PEND SC .)
    L               reduce using rule 40 (penwrite -> PEND SC .)
    ID              reduce using rule 40 (penwrite -> PEND SC .)
    RE              reduce using rule 40 (penwrite -> PEND SC .)
    REC             reduce using rule 40 (penwrite -> PEND SC .)
    TRI             reduce using rule 40 (penwrite -> PEND SC .)
    POL             reduce using rule 40 (penwrite -> PEND SC .)
    LS              reduce using rule 40 (penwrite -> PEND SC .)
    CIR             reduce using rule 40 (penwrite -> PEND SC .)
    SQ              reduce using rule 40 (penwrite -> PEND SC .)
    ARC             reduce using rule 40 (penwrite -> PEND SC .)
    PENC            reduce using rule 40 (penwrite -> PEND SC .)
    SETC            reduce using rule 40 (penwrite -> PEND SC .)
    BACO            reduce using rule 40 (penwrite -> PEND SC .)
    PENW            reduce using rule 40 (penwrite -> PEND SC .)
    F               reduce using rule 40 (penwrite -> PEND SC .)
    B               reduce using rule 40 (penwrite -> PEND SC .)
    PENP            reduce using rule 40 (penwrite -> PEND SC .)
    PENU            reduce using rule 40 (penwrite -> PEND SC .)
    PEND            reduce using rule 40 (penwrite -> PEND SC .)
    RB              reduce using rule 40 (penwrite -> PEND SC .)


state 124

    (35) colors -> PENC LP . exp C exp C exp RP SC
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    exp                            shift and go to state 166
    fact2                          shift and go to state 108
    fact                           shift and go to state 110
    fact4                          shift and go to state 111

state 125

    (51) lstrip -> LS LP . idList RP SC
    (52) idList -> . ID

    ID              shift and go to state 164

    idList                         shift and go to state 167

state 126

    (47) tria -> TRI LP . exp C exp C exp p_fill RP SC
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    exp                            shift and go to state 168
    fact2                          shift and go to state 108
    fact4                          shift and go to state 111
    fact                           shift and go to state 110

state 127

    (43) mueve2 -> LP . exp C A exp RP SC
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    exp                            shift and go to state 169
    fact2                          shift and go to state 108
    fact                           shift and go to state 110
    fact4                          shift and go to state 111

state 128

    (42) move -> B mueve2 .

    IF              reduce using rule 42 (move -> B mueve2 .)
    LA              reduce using rule 42 (move -> B mueve2 .)
    L               reduce using rule 42 (move -> B mueve2 .)
    ID              reduce using rule 42 (move -> B mueve2 .)
    RE              reduce using rule 42 (move -> B mueve2 .)
    REC             reduce using rule 42 (move -> B mueve2 .)
    TRI             reduce using rule 42 (move -> B mueve2 .)
    POL             reduce using rule 42 (move -> B mueve2 .)
    LS              reduce using rule 42 (move -> B mueve2 .)
    CIR             reduce using rule 42 (move -> B mueve2 .)
    SQ              reduce using rule 42 (move -> B mueve2 .)
    ARC             reduce using rule 42 (move -> B mueve2 .)
    PENC            reduce using rule 42 (move -> B mueve2 .)
    SETC            reduce using rule 42 (move -> B mueve2 .)
    BACO            reduce using rule 42 (move -> B mueve2 .)
    PENW            reduce using rule 42 (move -> B mueve2 .)
    F               reduce using rule 42 (move -> B mueve2 .)
    B               reduce using rule 42 (move -> B mueve2 .)
    PENP            reduce using rule 42 (move -> B mueve2 .)
    PENU            reduce using rule 42 (move -> B mueve2 .)
    PEND            reduce using rule 42 (move -> B mueve2 .)
    RB              reduce using rule 42 (move -> B mueve2 .)


state 129

    (41) move -> F mueve2 .

    IF              reduce using rule 41 (move -> F mueve2 .)
    LA              reduce using rule 41 (move -> F mueve2 .)
    L               reduce using rule 41 (move -> F mueve2 .)
    ID              reduce using rule 41 (move -> F mueve2 .)
    RE              reduce using rule 41 (move -> F mueve2 .)
    REC             reduce using rule 41 (move -> F mueve2 .)
    TRI             reduce using rule 41 (move -> F mueve2 .)
    POL             reduce using rule 41 (move -> F mueve2 .)
    LS              reduce using rule 41 (move -> F mueve2 .)
    CIR             reduce using rule 41 (move -> F mueve2 .)
    SQ              reduce using rule 41 (move -> F mueve2 .)
    ARC             reduce using rule 41 (move -> F mueve2 .)
    PENC            reduce using rule 41 (move -> F mueve2 .)
    SETC            reduce using rule 41 (move -> F mueve2 .)
    BACO            reduce using rule 41 (move -> F mueve2 .)
    PENW            reduce using rule 41 (move -> F mueve2 .)
    F               reduce using rule 41 (move -> F mueve2 .)
    B               reduce using rule 41 (move -> F mueve2 .)
    PENP            reduce using rule 41 (move -> F mueve2 .)
    PENU            reduce using rule 41 (move -> F mueve2 .)
    PEND            reduce using rule 41 (move -> F mueve2 .)
    RB              reduce using rule 41 (move -> F mueve2 .)


state 130

    (87) funCall -> LP . func2 RP SC
    (88) func2 -> . func4 func3
    (89) func2 -> . empty
    (92) func4 -> . exp
    (133) empty -> .
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    RP              reduce using rule 133 (empty -> .)
    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    func2                          shift and go to state 170
    term                           shift and go to state 102
    valExp                         shift and go to state 103
    func4                          shift and go to state 172
    fact                           shift and go to state 110
    exp                            shift and go to state 171
    fact2                          shift and go to state 108
    empty                          shift and go to state 173
    fact4                          shift and go to state 111

state 131

    (81) WID2 -> assigment .

    IF              reduce using rule 81 (WID2 -> assigment .)
    LA              reduce using rule 81 (WID2 -> assigment .)
    L               reduce using rule 81 (WID2 -> assigment .)
    ID              reduce using rule 81 (WID2 -> assigment .)
    RE              reduce using rule 81 (WID2 -> assigment .)
    REC             reduce using rule 81 (WID2 -> assigment .)
    TRI             reduce using rule 81 (WID2 -> assigment .)
    POL             reduce using rule 81 (WID2 -> assigment .)
    LS              reduce using rule 81 (WID2 -> assigment .)
    CIR             reduce using rule 81 (WID2 -> assigment .)
    SQ              reduce using rule 81 (WID2 -> assigment .)
    ARC             reduce using rule 81 (WID2 -> assigment .)
    PENC            reduce using rule 81 (WID2 -> assigment .)
    SETC            reduce using rule 81 (WID2 -> assigment .)
    BACO            reduce using rule 81 (WID2 -> assigment .)
    PENW            reduce using rule 81 (WID2 -> assigment .)
    F               reduce using rule 81 (WID2 -> assigment .)
    B               reduce using rule 81 (WID2 -> assigment .)
    PENP            reduce using rule 81 (WID2 -> assigment .)
    PENU            reduce using rule 81 (WID2 -> assigment .)
    PEND            reduce using rule 81 (WID2 -> assigment .)
    RB              reduce using rule 81 (WID2 -> assigment .)


state 132

    (83) assigment -> EQ . tipeAss
    (84) tipeAss -> . varAss
    (85) tipeAss -> . listAss
    (86) varAss -> . exp SC
    (96) listAss -> . LB lista3 RB SC
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LB              shift and go to state 174
    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    listAss                        shift and go to state 175
    tipeAss                        shift and go to state 178
    fact                           shift and go to state 110
    exp                            shift and go to state 177
    fact2                          shift and go to state 108
    fact4                          shift and go to state 111
    varAss                         shift and go to state 176

state 133

    (82) WID2 -> funCall .

    IF              reduce using rule 82 (WID2 -> funCall .)
    LA              reduce using rule 82 (WID2 -> funCall .)
    L               reduce using rule 82 (WID2 -> funCall .)
    ID              reduce using rule 82 (WID2 -> funCall .)
    RE              reduce using rule 82 (WID2 -> funCall .)
    REC             reduce using rule 82 (WID2 -> funCall .)
    TRI             reduce using rule 82 (WID2 -> funCall .)
    POL             reduce using rule 82 (WID2 -> funCall .)
    LS              reduce using rule 82 (WID2 -> funCall .)
    CIR             reduce using rule 82 (WID2 -> funCall .)
    SQ              reduce using rule 82 (WID2 -> funCall .)
    ARC             reduce using rule 82 (WID2 -> funCall .)
    PENC            reduce using rule 82 (WID2 -> funCall .)
    SETC            reduce using rule 82 (WID2 -> funCall .)
    BACO            reduce using rule 82 (WID2 -> funCall .)
    PENW            reduce using rule 82 (WID2 -> funCall .)
    F               reduce using rule 82 (WID2 -> funCall .)
    B               reduce using rule 82 (WID2 -> funCall .)
    PENP            reduce using rule 82 (WID2 -> funCall .)
    PENU            reduce using rule 82 (WID2 -> funCall .)
    PEND            reduce using rule 82 (WID2 -> funCall .)
    RB              reduce using rule 82 (WID2 -> funCall .)


state 134

    (80) WID -> ID WID2 .

    IF              reduce using rule 80 (WID -> ID WID2 .)
    LA              reduce using rule 80 (WID -> ID WID2 .)
    L               reduce using rule 80 (WID -> ID WID2 .)
    ID              reduce using rule 80 (WID -> ID WID2 .)
    RE              reduce using rule 80 (WID -> ID WID2 .)
    REC             reduce using rule 80 (WID -> ID WID2 .)
    TRI             reduce using rule 80 (WID -> ID WID2 .)
    POL             reduce using rule 80 (WID -> ID WID2 .)
    LS              reduce using rule 80 (WID -> ID WID2 .)
    CIR             reduce using rule 80 (WID -> ID WID2 .)
    SQ              reduce using rule 80 (WID -> ID WID2 .)
    ARC             reduce using rule 80 (WID -> ID WID2 .)
    PENC            reduce using rule 80 (WID -> ID WID2 .)
    SETC            reduce using rule 80 (WID -> ID WID2 .)
    BACO            reduce using rule 80 (WID -> ID WID2 .)
    PENW            reduce using rule 80 (WID -> ID WID2 .)
    F               reduce using rule 80 (WID -> ID WID2 .)
    B               reduce using rule 80 (WID -> ID WID2 .)
    PENP            reduce using rule 80 (WID -> ID WID2 .)
    PENU            reduce using rule 80 (WID -> ID WID2 .)
    PEND            reduce using rule 80 (WID -> ID WID2 .)
    RB              reduce using rule 80 (WID -> ID WID2 .)


state 135

    (107) condition -> IF LP . expresion condRP block con2
    (54) expresion -> . exp ex2
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    expresion                      shift and go to state 179
    valExp                         shift and go to state 103
    term                           shift and go to state 102
    fact                           shift and go to state 110
    exp                            shift and go to state 180
    fact2                          shift and go to state 108
    fact4                          shift and go to state 111

state 136

    (48) one_par -> CIR LP . exp p_fill RP SC
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    exp                            shift and go to state 181
    fact2                          shift and go to state 108
    fact4                          shift and go to state 111
    fact                           shift and go to state 110

state 137

    (49) one_par -> SQ LP . exp p_fill RP SC
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    exp                            shift and go to state 182
    fact2                          shift and go to state 108
    fact4                          shift and go to state 111
    fact                           shift and go to state 110

state 138

    (36) colors -> SETC LP . exp C exp C exp RP SC
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    exp                            shift and go to state 183
    fact2                          shift and go to state 108
    fact                           shift and go to state 110
    fact4                          shift and go to state 111

state 139

    (53) p_arc -> ARC LP . exp RP SC
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    exp                            shift and go to state 184
    fact2                          shift and go to state 108
    fact                           shift and go to state 110
    fact4                          shift and go to state 111

state 140

    (16) fun4 -> C fun5 . fun4
    (16) fun4 -> . C fun5 fun4
    (17) fun4 -> . empty
    (133) empty -> .

    C               shift and go to state 93
    RP              reduce using rule 133 (empty -> .)

    fun4                           shift and go to state 185
    empty                          shift and go to state 94

state 141

    (93) list -> L type ID prelistAss .

    IF              reduce using rule 93 (list -> L type ID prelistAss .)
    LA              reduce using rule 93 (list -> L type ID prelistAss .)
    L               reduce using rule 93 (list -> L type ID prelistAss .)
    ID              reduce using rule 93 (list -> L type ID prelistAss .)
    RE              reduce using rule 93 (list -> L type ID prelistAss .)
    REC             reduce using rule 93 (list -> L type ID prelistAss .)
    TRI             reduce using rule 93 (list -> L type ID prelistAss .)
    POL             reduce using rule 93 (list -> L type ID prelistAss .)
    LS              reduce using rule 93 (list -> L type ID prelistAss .)
    CIR             reduce using rule 93 (list -> L type ID prelistAss .)
    SQ              reduce using rule 93 (list -> L type ID prelistAss .)
    ARC             reduce using rule 93 (list -> L type ID prelistAss .)
    PENC            reduce using rule 93 (list -> L type ID prelistAss .)
    SETC            reduce using rule 93 (list -> L type ID prelistAss .)
    BACO            reduce using rule 93 (list -> L type ID prelistAss .)
    PENW            reduce using rule 93 (list -> L type ID prelistAss .)
    F               reduce using rule 93 (list -> L type ID prelistAss .)
    B               reduce using rule 93 (list -> L type ID prelistAss .)
    PENP            reduce using rule 93 (list -> L type ID prelistAss .)
    PENU            reduce using rule 93 (list -> L type ID prelistAss .)
    PEND            reduce using rule 93 (list -> L type ID prelistAss .)
    RB              reduce using rule 93 (list -> L type ID prelistAss .)
    FUN             reduce using rule 93 (list -> L type ID prelistAss .)
    MAIN            reduce using rule 93 (list -> L type ID prelistAss .)
    LB              reduce using rule 93 (list -> L type ID prelistAss .)


state 142

    (95) prelistAss -> SC .

    L               reduce using rule 95 (prelistAss -> SC .)
    FUN             reduce using rule 95 (prelistAss -> SC .)
    MAIN            reduce using rule 95 (prelistAss -> SC .)
    LB              reduce using rule 95 (prelistAss -> SC .)
    IF              reduce using rule 95 (prelistAss -> SC .)
    LA              reduce using rule 95 (prelistAss -> SC .)
    ID              reduce using rule 95 (prelistAss -> SC .)
    RE              reduce using rule 95 (prelistAss -> SC .)
    REC             reduce using rule 95 (prelistAss -> SC .)
    TRI             reduce using rule 95 (prelistAss -> SC .)
    POL             reduce using rule 95 (prelistAss -> SC .)
    LS              reduce using rule 95 (prelistAss -> SC .)
    CIR             reduce using rule 95 (prelistAss -> SC .)
    SQ              reduce using rule 95 (prelistAss -> SC .)
    ARC             reduce using rule 95 (prelistAss -> SC .)
    PENC            reduce using rule 95 (prelistAss -> SC .)
    SETC            reduce using rule 95 (prelistAss -> SC .)
    BACO            reduce using rule 95 (prelistAss -> SC .)
    PENW            reduce using rule 95 (prelistAss -> SC .)
    F               reduce using rule 95 (prelistAss -> SC .)
    B               reduce using rule 95 (prelistAss -> SC .)
    PENP            reduce using rule 95 (prelistAss -> SC .)
    PENU            reduce using rule 95 (prelistAss -> SC .)
    PEND            reduce using rule 95 (prelistAss -> SC .)
    RB              reduce using rule 95 (prelistAss -> SC .)


state 143

    (94) prelistAss -> EQ . listAss
    (96) listAss -> . LB lista3 RB SC

    LB              shift and go to state 174

    listAss                        shift and go to state 186

state 144

    (24) var33 -> C ID . var4 var33
    (26) var4 -> . EQ exp
    (27) var4 -> . empty
    (133) empty -> .

    EQ              shift and go to state 49
    C               reduce using rule 133 (empty -> .)
    SC              reduce using rule 133 (empty -> .)

    var4                           shift and go to state 187
    empty                          shift and go to state 50

state 145

    (65) exp3 -> SUB .

    LP              reduce using rule 65 (exp3 -> SUB .)
    ID              reduce using rule 65 (exp3 -> SUB .)
    VALI            reduce using rule 65 (exp3 -> SUB .)
    VALF            reduce using rule 65 (exp3 -> SUB .)


state 146

    (62) exp2 -> exp3 . exp
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    exp                            shift and go to state 188
    fact2                          shift and go to state 108
    fact                           shift and go to state 110
    fact4                          shift and go to state 111

state 147

    (61) exp -> term exp2 .

    C               reduce using rule 61 (exp -> term exp2 .)
    RP              reduce using rule 61 (exp -> term exp2 .)
    ADD             reduce using rule 61 (exp -> term exp2 .)
    LT              reduce using rule 61 (exp -> term exp2 .)
    MT              reduce using rule 61 (exp -> term exp2 .)
    D               reduce using rule 61 (exp -> term exp2 .)
    SEQ             reduce using rule 61 (exp -> term exp2 .)
    SC              reduce using rule 61 (exp -> term exp2 .)
    LB              reduce using rule 61 (exp -> term exp2 .)


state 148

    (64) exp3 -> ADD .

    LP              reduce using rule 64 (exp3 -> ADD .)
    ID              reduce using rule 64 (exp3 -> ADD .)
    VALI            reduce using rule 64 (exp3 -> ADD .)
    VALF            reduce using rule 64 (exp3 -> ADD .)


state 149

    (63) exp2 -> empty .

    C               reduce using rule 63 (exp2 -> empty .)
    SC              reduce using rule 63 (exp2 -> empty .)
    LB              reduce using rule 63 (exp2 -> empty .)
    RP              reduce using rule 63 (exp2 -> empty .)
    ADD             reduce using rule 63 (exp2 -> empty .)
    LT              reduce using rule 63 (exp2 -> empty .)
    MT              reduce using rule 63 (exp2 -> empty .)
    D               reduce using rule 63 (exp2 -> empty .)
    SEQ             reduce using rule 63 (exp2 -> empty .)


state 150

    (71) fact -> fact2 exp . RP

    RP              shift and go to state 189


state 151

    (67) term2 -> term3 . term
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 190
    valExp                         shift and go to state 103
    fact2                          shift and go to state 108
    fact                           shift and go to state 110
    fact4                          shift and go to state 111

state 152

    (66) term -> fact term2 .

    ADD             reduce using rule 66 (term -> fact term2 .)
    SUB             reduce using rule 66 (term -> fact term2 .)
    C               reduce using rule 66 (term -> fact term2 .)
    LT              reduce using rule 66 (term -> fact term2 .)
    MT              reduce using rule 66 (term -> fact term2 .)
    D               reduce using rule 66 (term -> fact term2 .)
    SEQ             reduce using rule 66 (term -> fact term2 .)
    RP              reduce using rule 66 (term -> fact term2 .)
    SC              reduce using rule 66 (term -> fact term2 .)
    LB              reduce using rule 66 (term -> fact term2 .)


state 153

    (69) term3 -> M .

    LP              reduce using rule 69 (term3 -> M .)
    ID              reduce using rule 69 (term3 -> M .)
    VALI            reduce using rule 69 (term3 -> M .)
    VALF            reduce using rule 69 (term3 -> M .)


state 154

    (70) term3 -> DIV .

    LP              reduce using rule 70 (term3 -> DIV .)
    ID              reduce using rule 70 (term3 -> DIV .)
    VALI            reduce using rule 70 (term3 -> DIV .)
    VALF            reduce using rule 70 (term3 -> DIV .)


state 155

    (68) term2 -> empty .

    ADD             reduce using rule 68 (term2 -> empty .)
    SUB             reduce using rule 68 (term2 -> empty .)
    C               reduce using rule 68 (term2 -> empty .)
    SC              reduce using rule 68 (term2 -> empty .)
    LB              reduce using rule 68 (term2 -> empty .)
    RP              reduce using rule 68 (term2 -> empty .)
    LT              reduce using rule 68 (term2 -> empty .)
    MT              reduce using rule 68 (term2 -> empty .)
    D               reduce using rule 68 (term2 -> empty .)
    SEQ             reduce using rule 68 (term2 -> empty .)


state 156

    (34) position -> PENP LP exp . C exp RP SC

    C               shift and go to state 191


state 157

    (37) colors -> BACO LP exp . C exp C exp RP SC

    C               shift and go to state 192


state 158

    (44) rect -> REC LP exp . C exp p_fill RP SC

    C               shift and go to state 193


state 159

    (38) p_width -> PENW LP exp . RP SC

    RP              shift and go to state 194


state 160

    (105) stExp -> STR .

    ADD             reduce using rule 105 (stExp -> STR .)
    RP              reduce using rule 105 (stExp -> STR .)


state 161

    (102) lab -> LA LP stExp . lab2 RP SC
    (103) lab2 -> . ADD stExp lab2
    (104) lab2 -> . empty
    (133) empty -> .

    ADD             shift and go to state 196
    RP              reduce using rule 133 (empty -> .)

    lab2                           shift and go to state 195
    empty                          shift and go to state 197

state 162

    (106) stExp -> exp .

    ADD             reduce using rule 106 (stExp -> exp .)
    RP              reduce using rule 106 (stExp -> exp .)


state 163

    (50) poly -> POL LP idList . p_fill RP SC
    (45) p_fill -> . C FILL
    (46) p_fill -> . empty
    (133) empty -> .

    C               shift and go to state 198
    RP              reduce using rule 133 (empty -> .)

    empty                          shift and go to state 200
    p_fill                         shift and go to state 199

state 164

    (52) idList -> ID .

    C               reduce using rule 52 (idList -> ID .)
    RP              reduce using rule 52 (idList -> ID .)


state 165

    (78) rep -> RE rep3 block .

    IF              reduce using rule 78 (rep -> RE rep3 block .)
    LA              reduce using rule 78 (rep -> RE rep3 block .)
    L               reduce using rule 78 (rep -> RE rep3 block .)
    ID              reduce using rule 78 (rep -> RE rep3 block .)
    RE              reduce using rule 78 (rep -> RE rep3 block .)
    REC             reduce using rule 78 (rep -> RE rep3 block .)
    TRI             reduce using rule 78 (rep -> RE rep3 block .)
    POL             reduce using rule 78 (rep -> RE rep3 block .)
    LS              reduce using rule 78 (rep -> RE rep3 block .)
    CIR             reduce using rule 78 (rep -> RE rep3 block .)
    SQ              reduce using rule 78 (rep -> RE rep3 block .)
    ARC             reduce using rule 78 (rep -> RE rep3 block .)
    PENC            reduce using rule 78 (rep -> RE rep3 block .)
    SETC            reduce using rule 78 (rep -> RE rep3 block .)
    BACO            reduce using rule 78 (rep -> RE rep3 block .)
    PENW            reduce using rule 78 (rep -> RE rep3 block .)
    F               reduce using rule 78 (rep -> RE rep3 block .)
    B               reduce using rule 78 (rep -> RE rep3 block .)
    PENP            reduce using rule 78 (rep -> RE rep3 block .)
    PENU            reduce using rule 78 (rep -> RE rep3 block .)
    PEND            reduce using rule 78 (rep -> RE rep3 block .)
    RB              reduce using rule 78 (rep -> RE rep3 block .)


state 166

    (35) colors -> PENC LP exp . C exp C exp RP SC

    C               shift and go to state 201


state 167

    (51) lstrip -> LS LP idList . RP SC

    RP              shift and go to state 202


state 168

    (47) tria -> TRI LP exp . C exp C exp p_fill RP SC

    C               shift and go to state 203


state 169

    (43) mueve2 -> LP exp . C A exp RP SC

    C               shift and go to state 204


state 170

    (87) funCall -> LP func2 . RP SC

    RP              shift and go to state 205


state 171

    (92) func4 -> exp .

    C               reduce using rule 92 (func4 -> exp .)
    RP              reduce using rule 92 (func4 -> exp .)


state 172

    (88) func2 -> func4 . func3
    (90) func3 -> . C func4 func3
    (91) func3 -> . empty
    (133) empty -> .

    C               shift and go to state 207
    RP              reduce using rule 133 (empty -> .)

    func3                          shift and go to state 206
    empty                          shift and go to state 208

state 173

    (89) func2 -> empty .

    RP              reduce using rule 89 (func2 -> empty .)


state 174

    (96) listAss -> LB . lista3 RB SC
    (99) lista3 -> . lista2 li4
    (97) lista2 -> . val
    (98) lista2 -> . ID
    (32) val -> . VALI
    (33) val -> . VALF

    ID              shift and go to state 212
    VALI            shift and go to state 209
    VALF            shift and go to state 211

    val                            shift and go to state 210
    lista3                         shift and go to state 213
    lista2                         shift and go to state 214

state 175

    (85) tipeAss -> listAss .

    IF              reduce using rule 85 (tipeAss -> listAss .)
    LA              reduce using rule 85 (tipeAss -> listAss .)
    L               reduce using rule 85 (tipeAss -> listAss .)
    ID              reduce using rule 85 (tipeAss -> listAss .)
    RE              reduce using rule 85 (tipeAss -> listAss .)
    REC             reduce using rule 85 (tipeAss -> listAss .)
    TRI             reduce using rule 85 (tipeAss -> listAss .)
    POL             reduce using rule 85 (tipeAss -> listAss .)
    LS              reduce using rule 85 (tipeAss -> listAss .)
    CIR             reduce using rule 85 (tipeAss -> listAss .)
    SQ              reduce using rule 85 (tipeAss -> listAss .)
    ARC             reduce using rule 85 (tipeAss -> listAss .)
    PENC            reduce using rule 85 (tipeAss -> listAss .)
    SETC            reduce using rule 85 (tipeAss -> listAss .)
    BACO            reduce using rule 85 (tipeAss -> listAss .)
    PENW            reduce using rule 85 (tipeAss -> listAss .)
    F               reduce using rule 85 (tipeAss -> listAss .)
    B               reduce using rule 85 (tipeAss -> listAss .)
    PENP            reduce using rule 85 (tipeAss -> listAss .)
    PENU            reduce using rule 85 (tipeAss -> listAss .)
    PEND            reduce using rule 85 (tipeAss -> listAss .)
    RB              reduce using rule 85 (tipeAss -> listAss .)


state 176

    (84) tipeAss -> varAss .

    IF              reduce using rule 84 (tipeAss -> varAss .)
    LA              reduce using rule 84 (tipeAss -> varAss .)
    L               reduce using rule 84 (tipeAss -> varAss .)
    ID              reduce using rule 84 (tipeAss -> varAss .)
    RE              reduce using rule 84 (tipeAss -> varAss .)
    REC             reduce using rule 84 (tipeAss -> varAss .)
    TRI             reduce using rule 84 (tipeAss -> varAss .)
    POL             reduce using rule 84 (tipeAss -> varAss .)
    LS              reduce using rule 84 (tipeAss -> varAss .)
    CIR             reduce using rule 84 (tipeAss -> varAss .)
    SQ              reduce using rule 84 (tipeAss -> varAss .)
    ARC             reduce using rule 84 (tipeAss -> varAss .)
    PENC            reduce using rule 84 (tipeAss -> varAss .)
    SETC            reduce using rule 84 (tipeAss -> varAss .)
    BACO            reduce using rule 84 (tipeAss -> varAss .)
    PENW            reduce using rule 84 (tipeAss -> varAss .)
    F               reduce using rule 84 (tipeAss -> varAss .)
    B               reduce using rule 84 (tipeAss -> varAss .)
    PENP            reduce using rule 84 (tipeAss -> varAss .)
    PENU            reduce using rule 84 (tipeAss -> varAss .)
    PEND            reduce using rule 84 (tipeAss -> varAss .)
    RB              reduce using rule 84 (tipeAss -> varAss .)


state 177

    (86) varAss -> exp . SC

    SC              shift and go to state 215


state 178

    (83) assigment -> EQ tipeAss .

    IF              reduce using rule 83 (assigment -> EQ tipeAss .)
    LA              reduce using rule 83 (assigment -> EQ tipeAss .)
    L               reduce using rule 83 (assigment -> EQ tipeAss .)
    ID              reduce using rule 83 (assigment -> EQ tipeAss .)
    RE              reduce using rule 83 (assigment -> EQ tipeAss .)
    REC             reduce using rule 83 (assigment -> EQ tipeAss .)
    TRI             reduce using rule 83 (assigment -> EQ tipeAss .)
    POL             reduce using rule 83 (assigment -> EQ tipeAss .)
    LS              reduce using rule 83 (assigment -> EQ tipeAss .)
    CIR             reduce using rule 83 (assigment -> EQ tipeAss .)
    SQ              reduce using rule 83 (assigment -> EQ tipeAss .)
    ARC             reduce using rule 83 (assigment -> EQ tipeAss .)
    PENC            reduce using rule 83 (assigment -> EQ tipeAss .)
    SETC            reduce using rule 83 (assigment -> EQ tipeAss .)
    BACO            reduce using rule 83 (assigment -> EQ tipeAss .)
    PENW            reduce using rule 83 (assigment -> EQ tipeAss .)
    F               reduce using rule 83 (assigment -> EQ tipeAss .)
    B               reduce using rule 83 (assigment -> EQ tipeAss .)
    PENP            reduce using rule 83 (assigment -> EQ tipeAss .)
    PENU            reduce using rule 83 (assigment -> EQ tipeAss .)
    PEND            reduce using rule 83 (assigment -> EQ tipeAss .)
    RB              reduce using rule 83 (assigment -> EQ tipeAss .)


state 179

    (107) condition -> IF LP expresion . condRP block con2
    (108) condRP -> . RP

    RP              shift and go to state 216

    condRP                         shift and go to state 217

state 180

    (54) expresion -> exp . ex2
    (55) ex2 -> . ex3 exp
    (56) ex2 -> . empty
    (57) ex3 -> . LT
    (58) ex3 -> . MT
    (59) ex3 -> . D
    (60) ex3 -> . SEQ
    (133) empty -> .

    LT              shift and go to state 221
    MT              shift and go to state 220
    D               shift and go to state 218
    SEQ             shift and go to state 219
    RP              reduce using rule 133 (empty -> .)

    empty                          shift and go to state 224
    ex2                            shift and go to state 222
    ex3                            shift and go to state 223

state 181

    (48) one_par -> CIR LP exp . p_fill RP SC
    (45) p_fill -> . C FILL
    (46) p_fill -> . empty
    (133) empty -> .

    C               shift and go to state 198
    RP              reduce using rule 133 (empty -> .)

    empty                          shift and go to state 200
    p_fill                         shift and go to state 225

state 182

    (49) one_par -> SQ LP exp . p_fill RP SC
    (45) p_fill -> . C FILL
    (46) p_fill -> . empty
    (133) empty -> .

    C               shift and go to state 198
    RP              reduce using rule 133 (empty -> .)

    empty                          shift and go to state 200
    p_fill                         shift and go to state 226

state 183

    (36) colors -> SETC LP exp . C exp C exp RP SC

    C               shift and go to state 227


state 184

    (53) p_arc -> ARC LP exp . RP SC

    RP              shift and go to state 228


state 185

    (16) fun4 -> C fun5 fun4 .

    RP              reduce using rule 16 (fun4 -> C fun5 fun4 .)


state 186

    (94) prelistAss -> EQ listAss .

    L               reduce using rule 94 (prelistAss -> EQ listAss .)
    FUN             reduce using rule 94 (prelistAss -> EQ listAss .)
    MAIN            reduce using rule 94 (prelistAss -> EQ listAss .)
    LB              reduce using rule 94 (prelistAss -> EQ listAss .)
    IF              reduce using rule 94 (prelistAss -> EQ listAss .)
    LA              reduce using rule 94 (prelistAss -> EQ listAss .)
    ID              reduce using rule 94 (prelistAss -> EQ listAss .)
    RE              reduce using rule 94 (prelistAss -> EQ listAss .)
    REC             reduce using rule 94 (prelistAss -> EQ listAss .)
    TRI             reduce using rule 94 (prelistAss -> EQ listAss .)
    POL             reduce using rule 94 (prelistAss -> EQ listAss .)
    LS              reduce using rule 94 (prelistAss -> EQ listAss .)
    CIR             reduce using rule 94 (prelistAss -> EQ listAss .)
    SQ              reduce using rule 94 (prelistAss -> EQ listAss .)
    ARC             reduce using rule 94 (prelistAss -> EQ listAss .)
    PENC            reduce using rule 94 (prelistAss -> EQ listAss .)
    SETC            reduce using rule 94 (prelistAss -> EQ listAss .)
    BACO            reduce using rule 94 (prelistAss -> EQ listAss .)
    PENW            reduce using rule 94 (prelistAss -> EQ listAss .)
    F               reduce using rule 94 (prelistAss -> EQ listAss .)
    B               reduce using rule 94 (prelistAss -> EQ listAss .)
    PENP            reduce using rule 94 (prelistAss -> EQ listAss .)
    PENU            reduce using rule 94 (prelistAss -> EQ listAss .)
    PEND            reduce using rule 94 (prelistAss -> EQ listAss .)
    RB              reduce using rule 94 (prelistAss -> EQ listAss .)


state 187

    (24) var33 -> C ID var4 . var33
    (24) var33 -> . C ID var4 var33
    (25) var33 -> . empty
    (133) empty -> .

    C               shift and go to state 100
    SC              reduce using rule 133 (empty -> .)

    var33                          shift and go to state 229
    empty                          shift and go to state 101

state 188

    (62) exp2 -> exp3 exp .

    C               reduce using rule 62 (exp2 -> exp3 exp .)
    SC              reduce using rule 62 (exp2 -> exp3 exp .)
    LB              reduce using rule 62 (exp2 -> exp3 exp .)
    RP              reduce using rule 62 (exp2 -> exp3 exp .)
    ADD             reduce using rule 62 (exp2 -> exp3 exp .)
    LT              reduce using rule 62 (exp2 -> exp3 exp .)
    MT              reduce using rule 62 (exp2 -> exp3 exp .)
    D               reduce using rule 62 (exp2 -> exp3 exp .)
    SEQ             reduce using rule 62 (exp2 -> exp3 exp .)


state 189

    (71) fact -> fact2 exp RP .

    M               reduce using rule 71 (fact -> fact2 exp RP .)
    DIV             reduce using rule 71 (fact -> fact2 exp RP .)
    ADD             reduce using rule 71 (fact -> fact2 exp RP .)
    SUB             reduce using rule 71 (fact -> fact2 exp RP .)
    C               reduce using rule 71 (fact -> fact2 exp RP .)
    RP              reduce using rule 71 (fact -> fact2 exp RP .)
    SC              reduce using rule 71 (fact -> fact2 exp RP .)
    LB              reduce using rule 71 (fact -> fact2 exp RP .)
    LT              reduce using rule 71 (fact -> fact2 exp RP .)
    MT              reduce using rule 71 (fact -> fact2 exp RP .)
    D               reduce using rule 71 (fact -> fact2 exp RP .)
    SEQ             reduce using rule 71 (fact -> fact2 exp RP .)


state 190

    (67) term2 -> term3 term .

    ADD             reduce using rule 67 (term2 -> term3 term .)
    SUB             reduce using rule 67 (term2 -> term3 term .)
    C               reduce using rule 67 (term2 -> term3 term .)
    SC              reduce using rule 67 (term2 -> term3 term .)
    LB              reduce using rule 67 (term2 -> term3 term .)
    RP              reduce using rule 67 (term2 -> term3 term .)
    LT              reduce using rule 67 (term2 -> term3 term .)
    MT              reduce using rule 67 (term2 -> term3 term .)
    D               reduce using rule 67 (term2 -> term3 term .)
    SEQ             reduce using rule 67 (term2 -> term3 term .)


state 191

    (34) position -> PENP LP exp C . exp RP SC
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    exp                            shift and go to state 230
    fact2                          shift and go to state 108
    fact                           shift and go to state 110
    fact4                          shift and go to state 111

state 192

    (37) colors -> BACO LP exp C . exp C exp RP SC
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    exp                            shift and go to state 231
    fact2                          shift and go to state 108
    fact                           shift and go to state 110
    fact4                          shift and go to state 111

state 193

    (44) rect -> REC LP exp C . exp p_fill RP SC
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    exp                            shift and go to state 232
    fact2                          shift and go to state 108
    fact4                          shift and go to state 111
    fact                           shift and go to state 110

state 194

    (38) p_width -> PENW LP exp RP . SC

    SC              shift and go to state 233


state 195

    (102) lab -> LA LP stExp lab2 . RP SC

    RP              shift and go to state 234


state 196

    (103) lab2 -> ADD . stExp lab2
    (105) stExp -> . STR
    (106) stExp -> . exp
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    STR             shift and go to state 160
    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    stExp                          shift and go to state 235
    exp                            shift and go to state 162
    fact2                          shift and go to state 108
    fact                           shift and go to state 110
    fact4                          shift and go to state 111

state 197

    (104) lab2 -> empty .

    RP              reduce using rule 104 (lab2 -> empty .)


state 198

    (45) p_fill -> C . FILL

    FILL            shift and go to state 236


state 199

    (50) poly -> POL LP idList p_fill . RP SC

    RP              shift and go to state 237


state 200

    (46) p_fill -> empty .

    RP              reduce using rule 46 (p_fill -> empty .)


state 201

    (35) colors -> PENC LP exp C . exp C exp RP SC
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    exp                            shift and go to state 238
    fact2                          shift and go to state 108
    fact                           shift and go to state 110
    fact4                          shift and go to state 111

state 202

    (51) lstrip -> LS LP idList RP . SC

    SC              shift and go to state 239


state 203

    (47) tria -> TRI LP exp C . exp C exp p_fill RP SC
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    exp                            shift and go to state 240
    fact2                          shift and go to state 108
    fact4                          shift and go to state 111
    fact                           shift and go to state 110

state 204

    (43) mueve2 -> LP exp C . A exp RP SC

    A               shift and go to state 241


state 205

    (87) funCall -> LP func2 RP . SC

    SC              shift and go to state 242


state 206

    (88) func2 -> func4 func3 .

    RP              reduce using rule 88 (func2 -> func4 func3 .)


state 207

    (90) func3 -> C . func4 func3
    (92) func4 -> . exp
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    func4                          shift and go to state 243
    exp                            shift and go to state 171
    fact2                          shift and go to state 108
    fact                           shift and go to state 110
    fact4                          shift and go to state 111

state 208

    (91) func3 -> empty .

    RP              reduce using rule 91 (func3 -> empty .)


state 209

    (32) val -> VALI .

    C               reduce using rule 32 (val -> VALI .)
    RB              reduce using rule 32 (val -> VALI .)


state 210

    (97) lista2 -> val .

    C               reduce using rule 97 (lista2 -> val .)
    RB              reduce using rule 97 (lista2 -> val .)


state 211

    (33) val -> VALF .

    C               reduce using rule 33 (val -> VALF .)
    RB              reduce using rule 33 (val -> VALF .)


state 212

    (98) lista2 -> ID .

    C               reduce using rule 98 (lista2 -> ID .)
    RB              reduce using rule 98 (lista2 -> ID .)


state 213

    (96) listAss -> LB lista3 . RB SC

    RB              shift and go to state 244


state 214

    (99) lista3 -> lista2 . li4
    (100) li4 -> . C lista2 li4
    (101) li4 -> . empty
    (133) empty -> .

    C               shift and go to state 246
    RB              reduce using rule 133 (empty -> .)

    li4                            shift and go to state 245
    empty                          shift and go to state 247

state 215

    (86) varAss -> exp SC .

    IF              reduce using rule 86 (varAss -> exp SC .)
    LA              reduce using rule 86 (varAss -> exp SC .)
    L               reduce using rule 86 (varAss -> exp SC .)
    ID              reduce using rule 86 (varAss -> exp SC .)
    RE              reduce using rule 86 (varAss -> exp SC .)
    REC             reduce using rule 86 (varAss -> exp SC .)
    TRI             reduce using rule 86 (varAss -> exp SC .)
    POL             reduce using rule 86 (varAss -> exp SC .)
    LS              reduce using rule 86 (varAss -> exp SC .)
    CIR             reduce using rule 86 (varAss -> exp SC .)
    SQ              reduce using rule 86 (varAss -> exp SC .)
    ARC             reduce using rule 86 (varAss -> exp SC .)
    PENC            reduce using rule 86 (varAss -> exp SC .)
    SETC            reduce using rule 86 (varAss -> exp SC .)
    BACO            reduce using rule 86 (varAss -> exp SC .)
    PENW            reduce using rule 86 (varAss -> exp SC .)
    F               reduce using rule 86 (varAss -> exp SC .)
    B               reduce using rule 86 (varAss -> exp SC .)
    PENP            reduce using rule 86 (varAss -> exp SC .)
    PENU            reduce using rule 86 (varAss -> exp SC .)
    PEND            reduce using rule 86 (varAss -> exp SC .)
    RB              reduce using rule 86 (varAss -> exp SC .)


state 216

    (108) condRP -> RP .

    LB              reduce using rule 108 (condRP -> RP .)


state 217

    (107) condition -> IF LP expresion condRP . block con2
    (112) block -> . LB block3 RB

    LB              shift and go to state 38

    block                          shift and go to state 248

state 218

    (59) ex3 -> D .

    LP              reduce using rule 59 (ex3 -> D .)
    ID              reduce using rule 59 (ex3 -> D .)
    VALI            reduce using rule 59 (ex3 -> D .)
    VALF            reduce using rule 59 (ex3 -> D .)


state 219

    (60) ex3 -> SEQ .

    LP              reduce using rule 60 (ex3 -> SEQ .)
    ID              reduce using rule 60 (ex3 -> SEQ .)
    VALI            reduce using rule 60 (ex3 -> SEQ .)
    VALF            reduce using rule 60 (ex3 -> SEQ .)


state 220

    (58) ex3 -> MT .

    LP              reduce using rule 58 (ex3 -> MT .)
    ID              reduce using rule 58 (ex3 -> MT .)
    VALI            reduce using rule 58 (ex3 -> MT .)
    VALF            reduce using rule 58 (ex3 -> MT .)


state 221

    (57) ex3 -> LT .

    LP              reduce using rule 57 (ex3 -> LT .)
    ID              reduce using rule 57 (ex3 -> LT .)
    VALI            reduce using rule 57 (ex3 -> LT .)
    VALF            reduce using rule 57 (ex3 -> LT .)


state 222

    (54) expresion -> exp ex2 .

    RP              reduce using rule 54 (expresion -> exp ex2 .)


state 223

    (55) ex2 -> ex3 . exp
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    exp                            shift and go to state 249
    fact2                          shift and go to state 108
    fact                           shift and go to state 110
    fact4                          shift and go to state 111

state 224

    (56) ex2 -> empty .

    RP              reduce using rule 56 (ex2 -> empty .)


state 225

    (48) one_par -> CIR LP exp p_fill . RP SC

    RP              shift and go to state 250


state 226

    (49) one_par -> SQ LP exp p_fill . RP SC

    RP              shift and go to state 251


state 227

    (36) colors -> SETC LP exp C . exp C exp RP SC
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    exp                            shift and go to state 252
    fact2                          shift and go to state 108
    fact                           shift and go to state 110
    fact4                          shift and go to state 111

state 228

    (53) p_arc -> ARC LP exp RP . SC

    SC              shift and go to state 253


state 229

    (24) var33 -> C ID var4 var33 .

    SC              reduce using rule 24 (var33 -> C ID var4 var33 .)


state 230

    (34) position -> PENP LP exp C exp . RP SC

    RP              shift and go to state 254


state 231

    (37) colors -> BACO LP exp C exp . C exp RP SC

    C               shift and go to state 255


state 232

    (44) rect -> REC LP exp C exp . p_fill RP SC
    (45) p_fill -> . C FILL
    (46) p_fill -> . empty
    (133) empty -> .

    C               shift and go to state 198
    RP              reduce using rule 133 (empty -> .)

    empty                          shift and go to state 200
    p_fill                         shift and go to state 256

state 233

    (38) p_width -> PENW LP exp RP SC .

    IF              reduce using rule 38 (p_width -> PENW LP exp RP SC .)
    LA              reduce using rule 38 (p_width -> PENW LP exp RP SC .)
    L               reduce using rule 38 (p_width -> PENW LP exp RP SC .)
    ID              reduce using rule 38 (p_width -> PENW LP exp RP SC .)
    RE              reduce using rule 38 (p_width -> PENW LP exp RP SC .)
    REC             reduce using rule 38 (p_width -> PENW LP exp RP SC .)
    TRI             reduce using rule 38 (p_width -> PENW LP exp RP SC .)
    POL             reduce using rule 38 (p_width -> PENW LP exp RP SC .)
    LS              reduce using rule 38 (p_width -> PENW LP exp RP SC .)
    CIR             reduce using rule 38 (p_width -> PENW LP exp RP SC .)
    SQ              reduce using rule 38 (p_width -> PENW LP exp RP SC .)
    ARC             reduce using rule 38 (p_width -> PENW LP exp RP SC .)
    PENC            reduce using rule 38 (p_width -> PENW LP exp RP SC .)
    SETC            reduce using rule 38 (p_width -> PENW LP exp RP SC .)
    BACO            reduce using rule 38 (p_width -> PENW LP exp RP SC .)
    PENW            reduce using rule 38 (p_width -> PENW LP exp RP SC .)
    F               reduce using rule 38 (p_width -> PENW LP exp RP SC .)
    B               reduce using rule 38 (p_width -> PENW LP exp RP SC .)
    PENP            reduce using rule 38 (p_width -> PENW LP exp RP SC .)
    PENU            reduce using rule 38 (p_width -> PENW LP exp RP SC .)
    PEND            reduce using rule 38 (p_width -> PENW LP exp RP SC .)
    RB              reduce using rule 38 (p_width -> PENW LP exp RP SC .)


state 234

    (102) lab -> LA LP stExp lab2 RP . SC

    SC              shift and go to state 257


state 235

    (103) lab2 -> ADD stExp . lab2
    (103) lab2 -> . ADD stExp lab2
    (104) lab2 -> . empty
    (133) empty -> .

    ADD             shift and go to state 196
    RP              reduce using rule 133 (empty -> .)

    lab2                           shift and go to state 258
    empty                          shift and go to state 197

state 236

    (45) p_fill -> C FILL .

    RP              reduce using rule 45 (p_fill -> C FILL .)


state 237

    (50) poly -> POL LP idList p_fill RP . SC

    SC              shift and go to state 259


state 238

    (35) colors -> PENC LP exp C exp . C exp RP SC

    C               shift and go to state 260


state 239

    (51) lstrip -> LS LP idList RP SC .

    IF              reduce using rule 51 (lstrip -> LS LP idList RP SC .)
    LA              reduce using rule 51 (lstrip -> LS LP idList RP SC .)
    L               reduce using rule 51 (lstrip -> LS LP idList RP SC .)
    ID              reduce using rule 51 (lstrip -> LS LP idList RP SC .)
    RE              reduce using rule 51 (lstrip -> LS LP idList RP SC .)
    REC             reduce using rule 51 (lstrip -> LS LP idList RP SC .)
    TRI             reduce using rule 51 (lstrip -> LS LP idList RP SC .)
    POL             reduce using rule 51 (lstrip -> LS LP idList RP SC .)
    LS              reduce using rule 51 (lstrip -> LS LP idList RP SC .)
    CIR             reduce using rule 51 (lstrip -> LS LP idList RP SC .)
    SQ              reduce using rule 51 (lstrip -> LS LP idList RP SC .)
    ARC             reduce using rule 51 (lstrip -> LS LP idList RP SC .)
    PENC            reduce using rule 51 (lstrip -> LS LP idList RP SC .)
    SETC            reduce using rule 51 (lstrip -> LS LP idList RP SC .)
    BACO            reduce using rule 51 (lstrip -> LS LP idList RP SC .)
    PENW            reduce using rule 51 (lstrip -> LS LP idList RP SC .)
    F               reduce using rule 51 (lstrip -> LS LP idList RP SC .)
    B               reduce using rule 51 (lstrip -> LS LP idList RP SC .)
    PENP            reduce using rule 51 (lstrip -> LS LP idList RP SC .)
    PENU            reduce using rule 51 (lstrip -> LS LP idList RP SC .)
    PEND            reduce using rule 51 (lstrip -> LS LP idList RP SC .)
    RB              reduce using rule 51 (lstrip -> LS LP idList RP SC .)


state 240

    (47) tria -> TRI LP exp C exp . C exp p_fill RP SC

    C               shift and go to state 261


state 241

    (43) mueve2 -> LP exp C A . exp RP SC
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    exp                            shift and go to state 262
    fact2                          shift and go to state 108
    fact                           shift and go to state 110
    fact4                          shift and go to state 111

state 242

    (87) funCall -> LP func2 RP SC .

    IF              reduce using rule 87 (funCall -> LP func2 RP SC .)
    LA              reduce using rule 87 (funCall -> LP func2 RP SC .)
    L               reduce using rule 87 (funCall -> LP func2 RP SC .)
    ID              reduce using rule 87 (funCall -> LP func2 RP SC .)
    RE              reduce using rule 87 (funCall -> LP func2 RP SC .)
    REC             reduce using rule 87 (funCall -> LP func2 RP SC .)
    TRI             reduce using rule 87 (funCall -> LP func2 RP SC .)
    POL             reduce using rule 87 (funCall -> LP func2 RP SC .)
    LS              reduce using rule 87 (funCall -> LP func2 RP SC .)
    CIR             reduce using rule 87 (funCall -> LP func2 RP SC .)
    SQ              reduce using rule 87 (funCall -> LP func2 RP SC .)
    ARC             reduce using rule 87 (funCall -> LP func2 RP SC .)
    PENC            reduce using rule 87 (funCall -> LP func2 RP SC .)
    SETC            reduce using rule 87 (funCall -> LP func2 RP SC .)
    BACO            reduce using rule 87 (funCall -> LP func2 RP SC .)
    PENW            reduce using rule 87 (funCall -> LP func2 RP SC .)
    F               reduce using rule 87 (funCall -> LP func2 RP SC .)
    B               reduce using rule 87 (funCall -> LP func2 RP SC .)
    PENP            reduce using rule 87 (funCall -> LP func2 RP SC .)
    PENU            reduce using rule 87 (funCall -> LP func2 RP SC .)
    PEND            reduce using rule 87 (funCall -> LP func2 RP SC .)
    RB              reduce using rule 87 (funCall -> LP func2 RP SC .)


state 243

    (90) func3 -> C func4 . func3
    (90) func3 -> . C func4 func3
    (91) func3 -> . empty
    (133) empty -> .

    C               shift and go to state 207
    RP              reduce using rule 133 (empty -> .)

    func3                          shift and go to state 263
    empty                          shift and go to state 208

state 244

    (96) listAss -> LB lista3 RB . SC

    SC              shift and go to state 264


state 245

    (99) lista3 -> lista2 li4 .

    RB              reduce using rule 99 (lista3 -> lista2 li4 .)


state 246

    (100) li4 -> C . lista2 li4
    (97) lista2 -> . val
    (98) lista2 -> . ID
    (32) val -> . VALI
    (33) val -> . VALF

    ID              shift and go to state 212
    VALI            shift and go to state 209
    VALF            shift and go to state 211

    val                            shift and go to state 210
    lista2                         shift and go to state 265

state 247

    (101) li4 -> empty .

    RB              reduce using rule 101 (li4 -> empty .)


state 248

    (107) condition -> IF LP expresion condRP block . con2
    (109) con2 -> . empty
    (110) con2 -> . con3 block
    (133) empty -> .
    (111) con3 -> . ELSE

    IF              reduce using rule 133 (empty -> .)
    LA              reduce using rule 133 (empty -> .)
    L               reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    RE              reduce using rule 133 (empty -> .)
    REC             reduce using rule 133 (empty -> .)
    TRI             reduce using rule 133 (empty -> .)
    POL             reduce using rule 133 (empty -> .)
    LS              reduce using rule 133 (empty -> .)
    CIR             reduce using rule 133 (empty -> .)
    SQ              reduce using rule 133 (empty -> .)
    ARC             reduce using rule 133 (empty -> .)
    PENC            reduce using rule 133 (empty -> .)
    SETC            reduce using rule 133 (empty -> .)
    BACO            reduce using rule 133 (empty -> .)
    PENW            reduce using rule 133 (empty -> .)
    F               reduce using rule 133 (empty -> .)
    B               reduce using rule 133 (empty -> .)
    PENP            reduce using rule 133 (empty -> .)
    PENU            reduce using rule 133 (empty -> .)
    PEND            reduce using rule 133 (empty -> .)
    RB              reduce using rule 133 (empty -> .)
    ELSE            shift and go to state 268

    con2                           shift and go to state 266
    con3                           shift and go to state 267
    empty                          shift and go to state 269

state 249

    (55) ex2 -> ex3 exp .

    RP              reduce using rule 55 (ex2 -> ex3 exp .)


state 250

    (48) one_par -> CIR LP exp p_fill RP . SC

    SC              shift and go to state 270


state 251

    (49) one_par -> SQ LP exp p_fill RP . SC

    SC              shift and go to state 271


state 252

    (36) colors -> SETC LP exp C exp . C exp RP SC

    C               shift and go to state 272


state 253

    (53) p_arc -> ARC LP exp RP SC .

    IF              reduce using rule 53 (p_arc -> ARC LP exp RP SC .)
    LA              reduce using rule 53 (p_arc -> ARC LP exp RP SC .)
    L               reduce using rule 53 (p_arc -> ARC LP exp RP SC .)
    ID              reduce using rule 53 (p_arc -> ARC LP exp RP SC .)
    RE              reduce using rule 53 (p_arc -> ARC LP exp RP SC .)
    REC             reduce using rule 53 (p_arc -> ARC LP exp RP SC .)
    TRI             reduce using rule 53 (p_arc -> ARC LP exp RP SC .)
    POL             reduce using rule 53 (p_arc -> ARC LP exp RP SC .)
    LS              reduce using rule 53 (p_arc -> ARC LP exp RP SC .)
    CIR             reduce using rule 53 (p_arc -> ARC LP exp RP SC .)
    SQ              reduce using rule 53 (p_arc -> ARC LP exp RP SC .)
    ARC             reduce using rule 53 (p_arc -> ARC LP exp RP SC .)
    PENC            reduce using rule 53 (p_arc -> ARC LP exp RP SC .)
    SETC            reduce using rule 53 (p_arc -> ARC LP exp RP SC .)
    BACO            reduce using rule 53 (p_arc -> ARC LP exp RP SC .)
    PENW            reduce using rule 53 (p_arc -> ARC LP exp RP SC .)
    F               reduce using rule 53 (p_arc -> ARC LP exp RP SC .)
    B               reduce using rule 53 (p_arc -> ARC LP exp RP SC .)
    PENP            reduce using rule 53 (p_arc -> ARC LP exp RP SC .)
    PENU            reduce using rule 53 (p_arc -> ARC LP exp RP SC .)
    PEND            reduce using rule 53 (p_arc -> ARC LP exp RP SC .)
    RB              reduce using rule 53 (p_arc -> ARC LP exp RP SC .)


state 254

    (34) position -> PENP LP exp C exp RP . SC

    SC              shift and go to state 273


state 255

    (37) colors -> BACO LP exp C exp C . exp RP SC
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    exp                            shift and go to state 274
    fact2                          shift and go to state 108
    fact                           shift and go to state 110
    fact4                          shift and go to state 111

state 256

    (44) rect -> REC LP exp C exp p_fill . RP SC

    RP              shift and go to state 275


state 257

    (102) lab -> LA LP stExp lab2 RP SC .

    IF              reduce using rule 102 (lab -> LA LP stExp lab2 RP SC .)
    LA              reduce using rule 102 (lab -> LA LP stExp lab2 RP SC .)
    L               reduce using rule 102 (lab -> LA LP stExp lab2 RP SC .)
    ID              reduce using rule 102 (lab -> LA LP stExp lab2 RP SC .)
    RE              reduce using rule 102 (lab -> LA LP stExp lab2 RP SC .)
    REC             reduce using rule 102 (lab -> LA LP stExp lab2 RP SC .)
    TRI             reduce using rule 102 (lab -> LA LP stExp lab2 RP SC .)
    POL             reduce using rule 102 (lab -> LA LP stExp lab2 RP SC .)
    LS              reduce using rule 102 (lab -> LA LP stExp lab2 RP SC .)
    CIR             reduce using rule 102 (lab -> LA LP stExp lab2 RP SC .)
    SQ              reduce using rule 102 (lab -> LA LP stExp lab2 RP SC .)
    ARC             reduce using rule 102 (lab -> LA LP stExp lab2 RP SC .)
    PENC            reduce using rule 102 (lab -> LA LP stExp lab2 RP SC .)
    SETC            reduce using rule 102 (lab -> LA LP stExp lab2 RP SC .)
    BACO            reduce using rule 102 (lab -> LA LP stExp lab2 RP SC .)
    PENW            reduce using rule 102 (lab -> LA LP stExp lab2 RP SC .)
    F               reduce using rule 102 (lab -> LA LP stExp lab2 RP SC .)
    B               reduce using rule 102 (lab -> LA LP stExp lab2 RP SC .)
    PENP            reduce using rule 102 (lab -> LA LP stExp lab2 RP SC .)
    PENU            reduce using rule 102 (lab -> LA LP stExp lab2 RP SC .)
    PEND            reduce using rule 102 (lab -> LA LP stExp lab2 RP SC .)
    RB              reduce using rule 102 (lab -> LA LP stExp lab2 RP SC .)


state 258

    (103) lab2 -> ADD stExp lab2 .

    RP              reduce using rule 103 (lab2 -> ADD stExp lab2 .)


state 259

    (50) poly -> POL LP idList p_fill RP SC .

    IF              reduce using rule 50 (poly -> POL LP idList p_fill RP SC .)
    LA              reduce using rule 50 (poly -> POL LP idList p_fill RP SC .)
    L               reduce using rule 50 (poly -> POL LP idList p_fill RP SC .)
    ID              reduce using rule 50 (poly -> POL LP idList p_fill RP SC .)
    RE              reduce using rule 50 (poly -> POL LP idList p_fill RP SC .)
    REC             reduce using rule 50 (poly -> POL LP idList p_fill RP SC .)
    TRI             reduce using rule 50 (poly -> POL LP idList p_fill RP SC .)
    POL             reduce using rule 50 (poly -> POL LP idList p_fill RP SC .)
    LS              reduce using rule 50 (poly -> POL LP idList p_fill RP SC .)
    CIR             reduce using rule 50 (poly -> POL LP idList p_fill RP SC .)
    SQ              reduce using rule 50 (poly -> POL LP idList p_fill RP SC .)
    ARC             reduce using rule 50 (poly -> POL LP idList p_fill RP SC .)
    PENC            reduce using rule 50 (poly -> POL LP idList p_fill RP SC .)
    SETC            reduce using rule 50 (poly -> POL LP idList p_fill RP SC .)
    BACO            reduce using rule 50 (poly -> POL LP idList p_fill RP SC .)
    PENW            reduce using rule 50 (poly -> POL LP idList p_fill RP SC .)
    F               reduce using rule 50 (poly -> POL LP idList p_fill RP SC .)
    B               reduce using rule 50 (poly -> POL LP idList p_fill RP SC .)
    PENP            reduce using rule 50 (poly -> POL LP idList p_fill RP SC .)
    PENU            reduce using rule 50 (poly -> POL LP idList p_fill RP SC .)
    PEND            reduce using rule 50 (poly -> POL LP idList p_fill RP SC .)
    RB              reduce using rule 50 (poly -> POL LP idList p_fill RP SC .)


state 260

    (35) colors -> PENC LP exp C exp C . exp RP SC
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    exp                            shift and go to state 276
    fact2                          shift and go to state 108
    fact                           shift and go to state 110
    fact4                          shift and go to state 111

state 261

    (47) tria -> TRI LP exp C exp C . exp p_fill RP SC
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    exp                            shift and go to state 277
    fact2                          shift and go to state 108
    fact4                          shift and go to state 111
    fact                           shift and go to state 110

state 262

    (43) mueve2 -> LP exp C A exp . RP SC

    RP              shift and go to state 278


state 263

    (90) func3 -> C func4 func3 .

    RP              reduce using rule 90 (func3 -> C func4 func3 .)


state 264

    (96) listAss -> LB lista3 RB SC .

    IF              reduce using rule 96 (listAss -> LB lista3 RB SC .)
    LA              reduce using rule 96 (listAss -> LB lista3 RB SC .)
    L               reduce using rule 96 (listAss -> LB lista3 RB SC .)
    ID              reduce using rule 96 (listAss -> LB lista3 RB SC .)
    RE              reduce using rule 96 (listAss -> LB lista3 RB SC .)
    REC             reduce using rule 96 (listAss -> LB lista3 RB SC .)
    TRI             reduce using rule 96 (listAss -> LB lista3 RB SC .)
    POL             reduce using rule 96 (listAss -> LB lista3 RB SC .)
    LS              reduce using rule 96 (listAss -> LB lista3 RB SC .)
    CIR             reduce using rule 96 (listAss -> LB lista3 RB SC .)
    SQ              reduce using rule 96 (listAss -> LB lista3 RB SC .)
    ARC             reduce using rule 96 (listAss -> LB lista3 RB SC .)
    PENC            reduce using rule 96 (listAss -> LB lista3 RB SC .)
    SETC            reduce using rule 96 (listAss -> LB lista3 RB SC .)
    BACO            reduce using rule 96 (listAss -> LB lista3 RB SC .)
    PENW            reduce using rule 96 (listAss -> LB lista3 RB SC .)
    F               reduce using rule 96 (listAss -> LB lista3 RB SC .)
    B               reduce using rule 96 (listAss -> LB lista3 RB SC .)
    PENP            reduce using rule 96 (listAss -> LB lista3 RB SC .)
    PENU            reduce using rule 96 (listAss -> LB lista3 RB SC .)
    PEND            reduce using rule 96 (listAss -> LB lista3 RB SC .)
    RB              reduce using rule 96 (listAss -> LB lista3 RB SC .)
    FUN             reduce using rule 96 (listAss -> LB lista3 RB SC .)
    MAIN            reduce using rule 96 (listAss -> LB lista3 RB SC .)
    LB              reduce using rule 96 (listAss -> LB lista3 RB SC .)


state 265

    (100) li4 -> C lista2 . li4
    (100) li4 -> . C lista2 li4
    (101) li4 -> . empty
    (133) empty -> .

    C               shift and go to state 246
    RB              reduce using rule 133 (empty -> .)

    li4                            shift and go to state 279
    empty                          shift and go to state 247

state 266

    (107) condition -> IF LP expresion condRP block con2 .

    IF              reduce using rule 107 (condition -> IF LP expresion condRP block con2 .)
    LA              reduce using rule 107 (condition -> IF LP expresion condRP block con2 .)
    L               reduce using rule 107 (condition -> IF LP expresion condRP block con2 .)
    ID              reduce using rule 107 (condition -> IF LP expresion condRP block con2 .)
    RE              reduce using rule 107 (condition -> IF LP expresion condRP block con2 .)
    REC             reduce using rule 107 (condition -> IF LP expresion condRP block con2 .)
    TRI             reduce using rule 107 (condition -> IF LP expresion condRP block con2 .)
    POL             reduce using rule 107 (condition -> IF LP expresion condRP block con2 .)
    LS              reduce using rule 107 (condition -> IF LP expresion condRP block con2 .)
    CIR             reduce using rule 107 (condition -> IF LP expresion condRP block con2 .)
    SQ              reduce using rule 107 (condition -> IF LP expresion condRP block con2 .)
    ARC             reduce using rule 107 (condition -> IF LP expresion condRP block con2 .)
    PENC            reduce using rule 107 (condition -> IF LP expresion condRP block con2 .)
    SETC            reduce using rule 107 (condition -> IF LP expresion condRP block con2 .)
    BACO            reduce using rule 107 (condition -> IF LP expresion condRP block con2 .)
    PENW            reduce using rule 107 (condition -> IF LP expresion condRP block con2 .)
    F               reduce using rule 107 (condition -> IF LP expresion condRP block con2 .)
    B               reduce using rule 107 (condition -> IF LP expresion condRP block con2 .)
    PENP            reduce using rule 107 (condition -> IF LP expresion condRP block con2 .)
    PENU            reduce using rule 107 (condition -> IF LP expresion condRP block con2 .)
    PEND            reduce using rule 107 (condition -> IF LP expresion condRP block con2 .)
    RB              reduce using rule 107 (condition -> IF LP expresion condRP block con2 .)


state 267

    (110) con2 -> con3 . block
    (112) block -> . LB block3 RB

    LB              shift and go to state 38

    block                          shift and go to state 280

state 268

    (111) con3 -> ELSE .

    LB              reduce using rule 111 (con3 -> ELSE .)


state 269

    (109) con2 -> empty .

    IF              reduce using rule 109 (con2 -> empty .)
    LA              reduce using rule 109 (con2 -> empty .)
    L               reduce using rule 109 (con2 -> empty .)
    ID              reduce using rule 109 (con2 -> empty .)
    RE              reduce using rule 109 (con2 -> empty .)
    REC             reduce using rule 109 (con2 -> empty .)
    TRI             reduce using rule 109 (con2 -> empty .)
    POL             reduce using rule 109 (con2 -> empty .)
    LS              reduce using rule 109 (con2 -> empty .)
    CIR             reduce using rule 109 (con2 -> empty .)
    SQ              reduce using rule 109 (con2 -> empty .)
    ARC             reduce using rule 109 (con2 -> empty .)
    PENC            reduce using rule 109 (con2 -> empty .)
    SETC            reduce using rule 109 (con2 -> empty .)
    BACO            reduce using rule 109 (con2 -> empty .)
    PENW            reduce using rule 109 (con2 -> empty .)
    F               reduce using rule 109 (con2 -> empty .)
    B               reduce using rule 109 (con2 -> empty .)
    PENP            reduce using rule 109 (con2 -> empty .)
    PENU            reduce using rule 109 (con2 -> empty .)
    PEND            reduce using rule 109 (con2 -> empty .)
    RB              reduce using rule 109 (con2 -> empty .)


state 270

    (48) one_par -> CIR LP exp p_fill RP SC .

    IF              reduce using rule 48 (one_par -> CIR LP exp p_fill RP SC .)
    LA              reduce using rule 48 (one_par -> CIR LP exp p_fill RP SC .)
    L               reduce using rule 48 (one_par -> CIR LP exp p_fill RP SC .)
    ID              reduce using rule 48 (one_par -> CIR LP exp p_fill RP SC .)
    RE              reduce using rule 48 (one_par -> CIR LP exp p_fill RP SC .)
    REC             reduce using rule 48 (one_par -> CIR LP exp p_fill RP SC .)
    TRI             reduce using rule 48 (one_par -> CIR LP exp p_fill RP SC .)
    POL             reduce using rule 48 (one_par -> CIR LP exp p_fill RP SC .)
    LS              reduce using rule 48 (one_par -> CIR LP exp p_fill RP SC .)
    CIR             reduce using rule 48 (one_par -> CIR LP exp p_fill RP SC .)
    SQ              reduce using rule 48 (one_par -> CIR LP exp p_fill RP SC .)
    ARC             reduce using rule 48 (one_par -> CIR LP exp p_fill RP SC .)
    PENC            reduce using rule 48 (one_par -> CIR LP exp p_fill RP SC .)
    SETC            reduce using rule 48 (one_par -> CIR LP exp p_fill RP SC .)
    BACO            reduce using rule 48 (one_par -> CIR LP exp p_fill RP SC .)
    PENW            reduce using rule 48 (one_par -> CIR LP exp p_fill RP SC .)
    F               reduce using rule 48 (one_par -> CIR LP exp p_fill RP SC .)
    B               reduce using rule 48 (one_par -> CIR LP exp p_fill RP SC .)
    PENP            reduce using rule 48 (one_par -> CIR LP exp p_fill RP SC .)
    PENU            reduce using rule 48 (one_par -> CIR LP exp p_fill RP SC .)
    PEND            reduce using rule 48 (one_par -> CIR LP exp p_fill RP SC .)
    RB              reduce using rule 48 (one_par -> CIR LP exp p_fill RP SC .)


state 271

    (49) one_par -> SQ LP exp p_fill RP SC .

    IF              reduce using rule 49 (one_par -> SQ LP exp p_fill RP SC .)
    LA              reduce using rule 49 (one_par -> SQ LP exp p_fill RP SC .)
    L               reduce using rule 49 (one_par -> SQ LP exp p_fill RP SC .)
    ID              reduce using rule 49 (one_par -> SQ LP exp p_fill RP SC .)
    RE              reduce using rule 49 (one_par -> SQ LP exp p_fill RP SC .)
    REC             reduce using rule 49 (one_par -> SQ LP exp p_fill RP SC .)
    TRI             reduce using rule 49 (one_par -> SQ LP exp p_fill RP SC .)
    POL             reduce using rule 49 (one_par -> SQ LP exp p_fill RP SC .)
    LS              reduce using rule 49 (one_par -> SQ LP exp p_fill RP SC .)
    CIR             reduce using rule 49 (one_par -> SQ LP exp p_fill RP SC .)
    SQ              reduce using rule 49 (one_par -> SQ LP exp p_fill RP SC .)
    ARC             reduce using rule 49 (one_par -> SQ LP exp p_fill RP SC .)
    PENC            reduce using rule 49 (one_par -> SQ LP exp p_fill RP SC .)
    SETC            reduce using rule 49 (one_par -> SQ LP exp p_fill RP SC .)
    BACO            reduce using rule 49 (one_par -> SQ LP exp p_fill RP SC .)
    PENW            reduce using rule 49 (one_par -> SQ LP exp p_fill RP SC .)
    F               reduce using rule 49 (one_par -> SQ LP exp p_fill RP SC .)
    B               reduce using rule 49 (one_par -> SQ LP exp p_fill RP SC .)
    PENP            reduce using rule 49 (one_par -> SQ LP exp p_fill RP SC .)
    PENU            reduce using rule 49 (one_par -> SQ LP exp p_fill RP SC .)
    PEND            reduce using rule 49 (one_par -> SQ LP exp p_fill RP SC .)
    RB              reduce using rule 49 (one_par -> SQ LP exp p_fill RP SC .)


state 272

    (36) colors -> SETC LP exp C exp C . exp RP SC
    (61) exp -> . term exp2
    (66) term -> . fact term2
    (71) fact -> . fact2 exp RP
    (72) fact -> . fact4
    (73) fact2 -> . LP
    (74) fact4 -> . valExp
    (75) fact4 -> . ID
    (76) valExp -> . VALI
    (77) valExp -> . VALF

    LP              shift and go to state 104
    ID              shift and go to state 109
    VALI            shift and go to state 105
    VALF            shift and go to state 106

    term                           shift and go to state 102
    valExp                         shift and go to state 103
    exp                            shift and go to state 281
    fact2                          shift and go to state 108
    fact                           shift and go to state 110
    fact4                          shift and go to state 111

state 273

    (34) position -> PENP LP exp C exp RP SC .

    IF              reduce using rule 34 (position -> PENP LP exp C exp RP SC .)
    LA              reduce using rule 34 (position -> PENP LP exp C exp RP SC .)
    L               reduce using rule 34 (position -> PENP LP exp C exp RP SC .)
    ID              reduce using rule 34 (position -> PENP LP exp C exp RP SC .)
    RE              reduce using rule 34 (position -> PENP LP exp C exp RP SC .)
    REC             reduce using rule 34 (position -> PENP LP exp C exp RP SC .)
    TRI             reduce using rule 34 (position -> PENP LP exp C exp RP SC .)
    POL             reduce using rule 34 (position -> PENP LP exp C exp RP SC .)
    LS              reduce using rule 34 (position -> PENP LP exp C exp RP SC .)
    CIR             reduce using rule 34 (position -> PENP LP exp C exp RP SC .)
    SQ              reduce using rule 34 (position -> PENP LP exp C exp RP SC .)
    ARC             reduce using rule 34 (position -> PENP LP exp C exp RP SC .)
    PENC            reduce using rule 34 (position -> PENP LP exp C exp RP SC .)
    SETC            reduce using rule 34 (position -> PENP LP exp C exp RP SC .)
    BACO            reduce using rule 34 (position -> PENP LP exp C exp RP SC .)
    PENW            reduce using rule 34 (position -> PENP LP exp C exp RP SC .)
    F               reduce using rule 34 (position -> PENP LP exp C exp RP SC .)
    B               reduce using rule 34 (position -> PENP LP exp C exp RP SC .)
    PENP            reduce using rule 34 (position -> PENP LP exp C exp RP SC .)
    PENU            reduce using rule 34 (position -> PENP LP exp C exp RP SC .)
    PEND            reduce using rule 34 (position -> PENP LP exp C exp RP SC .)
    RB              reduce using rule 34 (position -> PENP LP exp C exp RP SC .)


state 274

    (37) colors -> BACO LP exp C exp C exp . RP SC

    RP              shift and go to state 282


state 275

    (44) rect -> REC LP exp C exp p_fill RP . SC

    SC              shift and go to state 283


state 276

    (35) colors -> PENC LP exp C exp C exp . RP SC

    RP              shift and go to state 284


state 277

    (47) tria -> TRI LP exp C exp C exp . p_fill RP SC
    (45) p_fill -> . C FILL
    (46) p_fill -> . empty
    (133) empty -> .

    C               shift and go to state 198
    RP              reduce using rule 133 (empty -> .)

    empty                          shift and go to state 200
    p_fill                         shift and go to state 285

state 278

    (43) mueve2 -> LP exp C A exp RP . SC

    SC              shift and go to state 286


state 279

    (100) li4 -> C lista2 li4 .

    RB              reduce using rule 100 (li4 -> C lista2 li4 .)


state 280

    (110) con2 -> con3 block .

    IF              reduce using rule 110 (con2 -> con3 block .)
    LA              reduce using rule 110 (con2 -> con3 block .)
    L               reduce using rule 110 (con2 -> con3 block .)
    ID              reduce using rule 110 (con2 -> con3 block .)
    RE              reduce using rule 110 (con2 -> con3 block .)
    REC             reduce using rule 110 (con2 -> con3 block .)
    TRI             reduce using rule 110 (con2 -> con3 block .)
    POL             reduce using rule 110 (con2 -> con3 block .)
    LS              reduce using rule 110 (con2 -> con3 block .)
    CIR             reduce using rule 110 (con2 -> con3 block .)
    SQ              reduce using rule 110 (con2 -> con3 block .)
    ARC             reduce using rule 110 (con2 -> con3 block .)
    PENC            reduce using rule 110 (con2 -> con3 block .)
    SETC            reduce using rule 110 (con2 -> con3 block .)
    BACO            reduce using rule 110 (con2 -> con3 block .)
    PENW            reduce using rule 110 (con2 -> con3 block .)
    F               reduce using rule 110 (con2 -> con3 block .)
    B               reduce using rule 110 (con2 -> con3 block .)
    PENP            reduce using rule 110 (con2 -> con3 block .)
    PENU            reduce using rule 110 (con2 -> con3 block .)
    PEND            reduce using rule 110 (con2 -> con3 block .)
    RB              reduce using rule 110 (con2 -> con3 block .)


state 281

    (36) colors -> SETC LP exp C exp C exp . RP SC

    RP              shift and go to state 287


state 282

    (37) colors -> BACO LP exp C exp C exp RP . SC

    SC              shift and go to state 288


state 283

    (44) rect -> REC LP exp C exp p_fill RP SC .

    IF              reduce using rule 44 (rect -> REC LP exp C exp p_fill RP SC .)
    LA              reduce using rule 44 (rect -> REC LP exp C exp p_fill RP SC .)
    L               reduce using rule 44 (rect -> REC LP exp C exp p_fill RP SC .)
    ID              reduce using rule 44 (rect -> REC LP exp C exp p_fill RP SC .)
    RE              reduce using rule 44 (rect -> REC LP exp C exp p_fill RP SC .)
    REC             reduce using rule 44 (rect -> REC LP exp C exp p_fill RP SC .)
    TRI             reduce using rule 44 (rect -> REC LP exp C exp p_fill RP SC .)
    POL             reduce using rule 44 (rect -> REC LP exp C exp p_fill RP SC .)
    LS              reduce using rule 44 (rect -> REC LP exp C exp p_fill RP SC .)
    CIR             reduce using rule 44 (rect -> REC LP exp C exp p_fill RP SC .)
    SQ              reduce using rule 44 (rect -> REC LP exp C exp p_fill RP SC .)
    ARC             reduce using rule 44 (rect -> REC LP exp C exp p_fill RP SC .)
    PENC            reduce using rule 44 (rect -> REC LP exp C exp p_fill RP SC .)
    SETC            reduce using rule 44 (rect -> REC LP exp C exp p_fill RP SC .)
    BACO            reduce using rule 44 (rect -> REC LP exp C exp p_fill RP SC .)
    PENW            reduce using rule 44 (rect -> REC LP exp C exp p_fill RP SC .)
    F               reduce using rule 44 (rect -> REC LP exp C exp p_fill RP SC .)
    B               reduce using rule 44 (rect -> REC LP exp C exp p_fill RP SC .)
    PENP            reduce using rule 44 (rect -> REC LP exp C exp p_fill RP SC .)
    PENU            reduce using rule 44 (rect -> REC LP exp C exp p_fill RP SC .)
    PEND            reduce using rule 44 (rect -> REC LP exp C exp p_fill RP SC .)
    RB              reduce using rule 44 (rect -> REC LP exp C exp p_fill RP SC .)


state 284

    (35) colors -> PENC LP exp C exp C exp RP . SC

    SC              shift and go to state 289


state 285

    (47) tria -> TRI LP exp C exp C exp p_fill . RP SC

    RP              shift and go to state 290


state 286

    (43) mueve2 -> LP exp C A exp RP SC .

    IF              reduce using rule 43 (mueve2 -> LP exp C A exp RP SC .)
    LA              reduce using rule 43 (mueve2 -> LP exp C A exp RP SC .)
    L               reduce using rule 43 (mueve2 -> LP exp C A exp RP SC .)
    ID              reduce using rule 43 (mueve2 -> LP exp C A exp RP SC .)
    RE              reduce using rule 43 (mueve2 -> LP exp C A exp RP SC .)
    REC             reduce using rule 43 (mueve2 -> LP exp C A exp RP SC .)
    TRI             reduce using rule 43 (mueve2 -> LP exp C A exp RP SC .)
    POL             reduce using rule 43 (mueve2 -> LP exp C A exp RP SC .)
    LS              reduce using rule 43 (mueve2 -> LP exp C A exp RP SC .)
    CIR             reduce using rule 43 (mueve2 -> LP exp C A exp RP SC .)
    SQ              reduce using rule 43 (mueve2 -> LP exp C A exp RP SC .)
    ARC             reduce using rule 43 (mueve2 -> LP exp C A exp RP SC .)
    PENC            reduce using rule 43 (mueve2 -> LP exp C A exp RP SC .)
    SETC            reduce using rule 43 (mueve2 -> LP exp C A exp RP SC .)
    BACO            reduce using rule 43 (mueve2 -> LP exp C A exp RP SC .)
    PENW            reduce using rule 43 (mueve2 -> LP exp C A exp RP SC .)
    F               reduce using rule 43 (mueve2 -> LP exp C A exp RP SC .)
    B               reduce using rule 43 (mueve2 -> LP exp C A exp RP SC .)
    PENP            reduce using rule 43 (mueve2 -> LP exp C A exp RP SC .)
    PENU            reduce using rule 43 (mueve2 -> LP exp C A exp RP SC .)
    PEND            reduce using rule 43 (mueve2 -> LP exp C A exp RP SC .)
    RB              reduce using rule 43 (mueve2 -> LP exp C A exp RP SC .)


state 287

    (36) colors -> SETC LP exp C exp C exp RP . SC

    SC              shift and go to state 291


state 288

    (37) colors -> BACO LP exp C exp C exp RP SC .

    IF              reduce using rule 37 (colors -> BACO LP exp C exp C exp RP SC .)
    LA              reduce using rule 37 (colors -> BACO LP exp C exp C exp RP SC .)
    L               reduce using rule 37 (colors -> BACO LP exp C exp C exp RP SC .)
    ID              reduce using rule 37 (colors -> BACO LP exp C exp C exp RP SC .)
    RE              reduce using rule 37 (colors -> BACO LP exp C exp C exp RP SC .)
    REC             reduce using rule 37 (colors -> BACO LP exp C exp C exp RP SC .)
    TRI             reduce using rule 37 (colors -> BACO LP exp C exp C exp RP SC .)
    POL             reduce using rule 37 (colors -> BACO LP exp C exp C exp RP SC .)
    LS              reduce using rule 37 (colors -> BACO LP exp C exp C exp RP SC .)
    CIR             reduce using rule 37 (colors -> BACO LP exp C exp C exp RP SC .)
    SQ              reduce using rule 37 (colors -> BACO LP exp C exp C exp RP SC .)
    ARC             reduce using rule 37 (colors -> BACO LP exp C exp C exp RP SC .)
    PENC            reduce using rule 37 (colors -> BACO LP exp C exp C exp RP SC .)
    SETC            reduce using rule 37 (colors -> BACO LP exp C exp C exp RP SC .)
    BACO            reduce using rule 37 (colors -> BACO LP exp C exp C exp RP SC .)
    PENW            reduce using rule 37 (colors -> BACO LP exp C exp C exp RP SC .)
    F               reduce using rule 37 (colors -> BACO LP exp C exp C exp RP SC .)
    B               reduce using rule 37 (colors -> BACO LP exp C exp C exp RP SC .)
    PENP            reduce using rule 37 (colors -> BACO LP exp C exp C exp RP SC .)
    PENU            reduce using rule 37 (colors -> BACO LP exp C exp C exp RP SC .)
    PEND            reduce using rule 37 (colors -> BACO LP exp C exp C exp RP SC .)
    RB              reduce using rule 37 (colors -> BACO LP exp C exp C exp RP SC .)


state 289

    (35) colors -> PENC LP exp C exp C exp RP SC .

    IF              reduce using rule 35 (colors -> PENC LP exp C exp C exp RP SC .)
    LA              reduce using rule 35 (colors -> PENC LP exp C exp C exp RP SC .)
    L               reduce using rule 35 (colors -> PENC LP exp C exp C exp RP SC .)
    ID              reduce using rule 35 (colors -> PENC LP exp C exp C exp RP SC .)
    RE              reduce using rule 35 (colors -> PENC LP exp C exp C exp RP SC .)
    REC             reduce using rule 35 (colors -> PENC LP exp C exp C exp RP SC .)
    TRI             reduce using rule 35 (colors -> PENC LP exp C exp C exp RP SC .)
    POL             reduce using rule 35 (colors -> PENC LP exp C exp C exp RP SC .)
    LS              reduce using rule 35 (colors -> PENC LP exp C exp C exp RP SC .)
    CIR             reduce using rule 35 (colors -> PENC LP exp C exp C exp RP SC .)
    SQ              reduce using rule 35 (colors -> PENC LP exp C exp C exp RP SC .)
    ARC             reduce using rule 35 (colors -> PENC LP exp C exp C exp RP SC .)
    PENC            reduce using rule 35 (colors -> PENC LP exp C exp C exp RP SC .)
    SETC            reduce using rule 35 (colors -> PENC LP exp C exp C exp RP SC .)
    BACO            reduce using rule 35 (colors -> PENC LP exp C exp C exp RP SC .)
    PENW            reduce using rule 35 (colors -> PENC LP exp C exp C exp RP SC .)
    F               reduce using rule 35 (colors -> PENC LP exp C exp C exp RP SC .)
    B               reduce using rule 35 (colors -> PENC LP exp C exp C exp RP SC .)
    PENP            reduce using rule 35 (colors -> PENC LP exp C exp C exp RP SC .)
    PENU            reduce using rule 35 (colors -> PENC LP exp C exp C exp RP SC .)
    PEND            reduce using rule 35 (colors -> PENC LP exp C exp C exp RP SC .)
    RB              reduce using rule 35 (colors -> PENC LP exp C exp C exp RP SC .)


state 290

    (47) tria -> TRI LP exp C exp C exp p_fill RP . SC

    SC              shift and go to state 292


state 291

    (36) colors -> SETC LP exp C exp C exp RP SC .

    IF              reduce using rule 36 (colors -> SETC LP exp C exp C exp RP SC .)
    LA              reduce using rule 36 (colors -> SETC LP exp C exp C exp RP SC .)
    L               reduce using rule 36 (colors -> SETC LP exp C exp C exp RP SC .)
    ID              reduce using rule 36 (colors -> SETC LP exp C exp C exp RP SC .)
    RE              reduce using rule 36 (colors -> SETC LP exp C exp C exp RP SC .)
    REC             reduce using rule 36 (colors -> SETC LP exp C exp C exp RP SC .)
    TRI             reduce using rule 36 (colors -> SETC LP exp C exp C exp RP SC .)
    POL             reduce using rule 36 (colors -> SETC LP exp C exp C exp RP SC .)
    LS              reduce using rule 36 (colors -> SETC LP exp C exp C exp RP SC .)
    CIR             reduce using rule 36 (colors -> SETC LP exp C exp C exp RP SC .)
    SQ              reduce using rule 36 (colors -> SETC LP exp C exp C exp RP SC .)
    ARC             reduce using rule 36 (colors -> SETC LP exp C exp C exp RP SC .)
    PENC            reduce using rule 36 (colors -> SETC LP exp C exp C exp RP SC .)
    SETC            reduce using rule 36 (colors -> SETC LP exp C exp C exp RP SC .)
    BACO            reduce using rule 36 (colors -> SETC LP exp C exp C exp RP SC .)
    PENW            reduce using rule 36 (colors -> SETC LP exp C exp C exp RP SC .)
    F               reduce using rule 36 (colors -> SETC LP exp C exp C exp RP SC .)
    B               reduce using rule 36 (colors -> SETC LP exp C exp C exp RP SC .)
    PENP            reduce using rule 36 (colors -> SETC LP exp C exp C exp RP SC .)
    PENU            reduce using rule 36 (colors -> SETC LP exp C exp C exp RP SC .)
    PEND            reduce using rule 36 (colors -> SETC LP exp C exp C exp RP SC .)
    RB              reduce using rule 36 (colors -> SETC LP exp C exp C exp RP SC .)


state 292

    (47) tria -> TRI LP exp C exp C exp p_fill RP SC .

    IF              reduce using rule 47 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    LA              reduce using rule 47 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    L               reduce using rule 47 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    ID              reduce using rule 47 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    RE              reduce using rule 47 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    REC             reduce using rule 47 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    TRI             reduce using rule 47 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    POL             reduce using rule 47 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    LS              reduce using rule 47 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    CIR             reduce using rule 47 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    SQ              reduce using rule 47 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    ARC             reduce using rule 47 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    PENC            reduce using rule 47 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    SETC            reduce using rule 47 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    BACO            reduce using rule 47 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    PENW            reduce using rule 47 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    F               reduce using rule 47 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    B               reduce using rule 47 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    PENP            reduce using rule 47 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    PENU            reduce using rule 47 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    PEND            reduce using rule 47 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    RB              reduce using rule 47 (tria -> TRI LP exp C exp C exp p_fill RP SC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ADD in state 102 resolved as shift
