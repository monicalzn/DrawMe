Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> PR p2 p3 MAIN vars block
Rule 2     p2 -> globals
Rule 3     p2 -> empty
Rule 4     p3 -> functions p3
Rule 5     p3 -> empty
Rule 6     globals -> GL vars
Rule 7     functions -> fun2 DP vars block
Rule 8     fun2 -> FUN ID LP fun3 RP
Rule 9     fun3 -> type ID fun4
Rule 10    fun3 -> empty
Rule 11    fun4 -> C type ID fun4
Rule 12    fun4 -> empty
Rule 13    vars -> V var2 var5
Rule 14    vars -> empty
Rule 15    var2 -> type var3 SC var2
Rule 16    var2 -> empty
Rule 17    var3 -> ID var4 var33
Rule 18    var33 -> C ID var4 var33
Rule 19    var33 -> empty
Rule 20    var4 -> EQ exp
Rule 21    var4 -> empty
Rule 22    var5 -> list var5
Rule 23    var5 -> empty
Rule 24    type -> INT
Rule 25    type -> FLOAT
Rule 26    val -> VALI
Rule 27    val -> VALF
Rule 28    position -> PENP LP exp C exp RP SC
Rule 29    colors -> PENC colors2
Rule 30    colors -> SETC colors2
Rule 31    colors -> BACO colors2
Rule 32    colors2 -> LP exp C exp C exp RP SC
Rule 33    p_width -> PENW LP exp RP SC
Rule 34    penwrite -> PENU SC
Rule 35    penwrite -> PEND SC
Rule 36    move -> F mueve2
Rule 37    move -> B mueve2
Rule 38    mueve2 -> LP exp C A exp RP SC
Rule 39    rect -> REC LP exp C exp p_fill RP SC
Rule 40    p_fill -> C FILL
Rule 41    p_fill -> empty
Rule 42    tria -> TRI LP exp C exp C exp p_fill RP SC
Rule 43    one_par -> CIR LP exp p_fill RP SC
Rule 44    one_par -> SQ LP exp p_fill RP SC
Rule 45    poly -> POL LP idList p_fill RP SC
Rule 46    lstrip -> LS LP idList RP SC
Rule 47    idList -> list
Rule 48    idList -> ID
Rule 49    p_arc -> ARC LP exp RP SC
Rule 50    expresion -> exp ex2
Rule 51    ex2 -> ex3 exp
Rule 52    ex2 -> empty
Rule 53    ex3 -> LT
Rule 54    ex3 -> MT
Rule 55    ex3 -> D
Rule 56    ex3 -> SEQ
Rule 57    exp -> term exp2
Rule 58    exp2 -> exp3 exp
Rule 59    exp2 -> empty
Rule 60    exp3 -> ADD
Rule 61    exp3 -> SUB
Rule 62    term -> fact term2
Rule 63    term2 -> term3 term
Rule 64    term2 -> empty
Rule 65    term3 -> M
Rule 66    term3 -> DIV
Rule 67    fact -> fact2 exp RP
Rule 68    fact -> fact4
Rule 69    fact2 -> LP
Rule 70    fact4 -> valExp
Rule 71    fact4 -> ID
Rule 72    valExp -> VALI
Rule 73    valExp -> VALF
Rule 74    rep -> RE exp block
Rule 75    WID -> ID WID2
Rule 76    WID2 -> assigment
Rule 77    WID2 -> funCall
Rule 78    assigment -> EQ tipeAss
Rule 79    tipeAss -> varAss
Rule 80    tipeAss -> listAss
Rule 81    varAss -> exp SC
Rule 82    funCall -> LP func2 RP SC
Rule 83    func2 -> exp func3
Rule 84    func2 -> empty
Rule 85    func3 -> C exp func3
Rule 86    func3 -> empty
Rule 87    list -> L type ID prelistAss
Rule 88    prelistAss -> EQ listAss
Rule 89    prelistAss -> SC
Rule 90    listAss -> LB lista3 RB SC
Rule 91    lista2 -> val
Rule 92    lista2 -> ID
Rule 93    lista3 -> lista2 li4
Rule 94    li4 -> C lista2 li4
Rule 95    li4 -> empty
Rule 96    lab -> LA LP stExp lab2 RP SC
Rule 97    lab2 -> ADD stExp lab2
Rule 98    lab2 -> empty
Rule 99    stExp -> STR
Rule 100   stExp -> exp
Rule 101   condition -> IF LP expresion RP block con2
Rule 102   con2 -> empty
Rule 103   con2 -> ELSE block
Rule 104   block -> LB block3 RB
Rule 105   block3 -> block2 block3
Rule 106   block3 -> empty
Rule 107   figure -> rect
Rule 108   figure -> tria
Rule 109   figure -> poly
Rule 110   figure -> lstrip
Rule 111   figure -> one_par
Rule 112   figure -> p_arc
Rule 113   pen -> colors
Rule 114   pen -> p_width
Rule 115   pen -> move
Rule 116   pen -> position
Rule 117   pen -> penwrite
Rule 118   block2 -> figure
Rule 119   block2 -> condition
Rule 120   block2 -> pen
Rule 121   block2 -> lab
Rule 122   block2 -> list
Rule 123   block2 -> WID
Rule 124   block2 -> rep
Rule 125   empty -> <empty>

Terminals, with rules where they appear

A                    : 38
ADD                  : 60 97
ARC                  : 49
B                    : 37
BACO                 : 31
C                    : 11 18 28 32 32 38 39 40 42 42 85 94
CIR                  : 43
D                    : 55
DIV                  : 66
DP                   : 7
ELSE                 : 103
EQ                   : 20 78 88
F                    : 36
FILL                 : 40
FLOAT                : 25
FUN                  : 8
GL                   : 6
ID                   : 8 9 11 17 18 48 71 75 87 92
IF                   : 101
INT                  : 24
L                    : 87
LA                   : 96
LB                   : 90 104
LP                   : 8 28 32 33 38 39 42 43 44 45 46 49 69 82 96 101
LS                   : 46
LT                   : 53
M                    : 65
MAIN                 : 1
MT                   : 54
PENC                 : 29
PEND                 : 35
PENP                 : 28
PENU                 : 34
PENW                 : 33
POL                  : 45
PR                   : 1
RB                   : 90 104
RE                   : 74
REC                  : 39
RP                   : 8 28 32 33 38 39 42 43 44 45 46 49 67 82 96 101
SC                   : 15 28 32 33 34 35 38 39 42 43 44 45 46 49 81 82 89 90 96
SEQ                  : 56
SETC                 : 30
SQ                   : 44
STR                  : 99
SUB                  : 61
TRI                  : 42
V                    : 13
VALF                 : 27 73
VALI                 : 26 72
error                : 

Nonterminals, with rules where they appear

WID                  : 123
WID2                 : 75
assigment            : 76
block                : 1 7 74 101 103
block2               : 105
block3               : 104 105
colors               : 113
colors2              : 29 30 31
con2                 : 101
condition            : 119
empty                : 3 5 10 12 14 16 19 21 23 41 52 59 64 84 86 95 98 102 106
ex2                  : 50
ex3                  : 51
exp                  : 20 28 28 32 32 32 33 38 38 39 39 42 42 42 43 44 49 50 51 58 67 74 81 83 85 100
exp2                 : 57
exp3                 : 58
expresion            : 101
fact                 : 62
fact2                : 67
fact4                : 68
figure               : 118
fun2                 : 7
fun3                 : 8
fun4                 : 9 11
funCall              : 77
func2                : 82
func3                : 83 85
functions            : 4
globals              : 2
idList               : 45 46
lab                  : 121
lab2                 : 96 97
li4                  : 93 94
list                 : 22 47 122
listAss              : 80 88
lista2               : 93 94
lista3               : 90
lstrip               : 110
move                 : 115
mueve2               : 36 37
one_par              : 111
p2                   : 1
p3                   : 1 4
p_arc                : 112
p_fill               : 39 42 43 44 45
p_width              : 114
pen                  : 120
penwrite             : 117
poly                 : 109
position             : 116
prelistAss           : 87
prog                 : 0
rect                 : 107
rep                  : 124
stExp                : 96 97
term                 : 57 63
term2                : 62
term3                : 63
tipeAss              : 78
tria                 : 108
type                 : 9 11 15 87
val                  : 91
valExp               : 70
var2                 : 13 15
var3                 : 15
var33                : 17 18
var4                 : 17 18
var5                 : 13 22
varAss               : 79
vars                 : 1 6 7

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . PR p2 p3 MAIN vars block

    PR              shift and go to state 1

    prog                           shift and go to state 2

state 1

    (1) prog -> PR . p2 p3 MAIN vars block
    (2) p2 -> . globals
    (3) p2 -> . empty
    (6) globals -> . GL vars
    (125) empty -> .

    GL              shift and go to state 4
    FUN             reduce using rule 125 (empty -> .)
    MAIN            reduce using rule 125 (empty -> .)

    p2                             shift and go to state 3
    globals                        shift and go to state 5
    empty                          shift and go to state 6

state 2

    (0) S' -> prog .



state 3

    (1) prog -> PR p2 . p3 MAIN vars block
    (4) p3 -> . functions p3
    (5) p3 -> . empty
    (7) functions -> . fun2 DP vars block
    (125) empty -> .
    (8) fun2 -> . FUN ID LP fun3 RP

    MAIN            reduce using rule 125 (empty -> .)
    FUN             shift and go to state 11

    p3                             shift and go to state 8
    functions                      shift and go to state 7
    fun2                           shift and go to state 9
    empty                          shift and go to state 10

state 4

    (6) globals -> GL . vars
    (13) vars -> . V var2 var5
    (14) vars -> . empty
    (125) empty -> .

    V               shift and go to state 13
    FUN             reduce using rule 125 (empty -> .)
    MAIN            reduce using rule 125 (empty -> .)

    empty                          shift and go to state 14
    vars                           shift and go to state 12

state 5

    (2) p2 -> globals .

    FUN             reduce using rule 2 (p2 -> globals .)
    MAIN            reduce using rule 2 (p2 -> globals .)


state 6

    (3) p2 -> empty .

    FUN             reduce using rule 3 (p2 -> empty .)
    MAIN            reduce using rule 3 (p2 -> empty .)


state 7

    (4) p3 -> functions . p3
    (4) p3 -> . functions p3
    (5) p3 -> . empty
    (7) functions -> . fun2 DP vars block
    (125) empty -> .
    (8) fun2 -> . FUN ID LP fun3 RP

    MAIN            reduce using rule 125 (empty -> .)
    FUN             shift and go to state 11

    p3                             shift and go to state 15
    functions                      shift and go to state 7
    fun2                           shift and go to state 9
    empty                          shift and go to state 10

state 8

    (1) prog -> PR p2 p3 . MAIN vars block

    MAIN            shift and go to state 16


state 9

    (7) functions -> fun2 . DP vars block

    DP              shift and go to state 17


state 10

    (5) p3 -> empty .

    MAIN            reduce using rule 5 (p3 -> empty .)


state 11

    (8) fun2 -> FUN . ID LP fun3 RP

    ID              shift and go to state 18


state 12

    (6) globals -> GL vars .

    FUN             reduce using rule 6 (globals -> GL vars .)
    MAIN            reduce using rule 6 (globals -> GL vars .)


state 13

    (13) vars -> V . var2 var5
    (15) var2 -> . type var3 SC var2
    (16) var2 -> . empty
    (24) type -> . INT
    (25) type -> . FLOAT
    (125) empty -> .

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    L               reduce using rule 125 (empty -> .)
    FUN             reduce using rule 125 (empty -> .)
    MAIN            reduce using rule 125 (empty -> .)
    LB              reduce using rule 125 (empty -> .)

    type                           shift and go to state 22
    empty                          shift and go to state 23
    var2                           shift and go to state 19

state 14

    (14) vars -> empty .

    LB              reduce using rule 14 (vars -> empty .)
    FUN             reduce using rule 14 (vars -> empty .)
    MAIN            reduce using rule 14 (vars -> empty .)


state 15

    (4) p3 -> functions p3 .

    MAIN            reduce using rule 4 (p3 -> functions p3 .)


state 16

    (1) prog -> PR p2 p3 MAIN . vars block
    (13) vars -> . V var2 var5
    (14) vars -> . empty
    (125) empty -> .

    V               shift and go to state 13
    LB              reduce using rule 125 (empty -> .)

    vars                           shift and go to state 24
    empty                          shift and go to state 14

state 17

    (7) functions -> fun2 DP . vars block
    (13) vars -> . V var2 var5
    (14) vars -> . empty
    (125) empty -> .

    V               shift and go to state 13
    LB              reduce using rule 125 (empty -> .)

    vars                           shift and go to state 25
    empty                          shift and go to state 14

state 18

    (8) fun2 -> FUN ID . LP fun3 RP

    LP              shift and go to state 26


state 19

    (13) vars -> V var2 . var5
    (22) var5 -> . list var5
    (23) var5 -> . empty
    (87) list -> . L type ID prelistAss
    (125) empty -> .

    L               shift and go to state 29
    FUN             reduce using rule 125 (empty -> .)
    MAIN            reduce using rule 125 (empty -> .)
    LB              reduce using rule 125 (empty -> .)

    var5                           shift and go to state 27
    list                           shift and go to state 28
    empty                          shift and go to state 30

state 20

    (24) type -> INT .

    ID              reduce using rule 24 (type -> INT .)


state 21

    (25) type -> FLOAT .

    ID              reduce using rule 25 (type -> FLOAT .)


state 22

    (15) var2 -> type . var3 SC var2
    (17) var3 -> . ID var4 var33

    ID              shift and go to state 32

    var3                           shift and go to state 31

state 23

    (16) var2 -> empty .

    L               reduce using rule 16 (var2 -> empty .)
    FUN             reduce using rule 16 (var2 -> empty .)
    MAIN            reduce using rule 16 (var2 -> empty .)
    LB              reduce using rule 16 (var2 -> empty .)


state 24

    (1) prog -> PR p2 p3 MAIN vars . block
    (104) block -> . LB block3 RB

    LB              shift and go to state 33

    block                          shift and go to state 34

state 25

    (7) functions -> fun2 DP vars . block
    (104) block -> . LB block3 RB

    LB              shift and go to state 33

    block                          shift and go to state 35

state 26

    (8) fun2 -> FUN ID LP . fun3 RP
    (9) fun3 -> . type ID fun4
    (10) fun3 -> . empty
    (24) type -> . INT
    (25) type -> . FLOAT
    (125) empty -> .

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    RP              reduce using rule 125 (empty -> .)

    type                           shift and go to state 37
    empty                          shift and go to state 38
    fun3                           shift and go to state 36

state 27

    (13) vars -> V var2 var5 .

    LB              reduce using rule 13 (vars -> V var2 var5 .)
    FUN             reduce using rule 13 (vars -> V var2 var5 .)
    MAIN            reduce using rule 13 (vars -> V var2 var5 .)


state 28

    (22) var5 -> list . var5
    (22) var5 -> . list var5
    (23) var5 -> . empty
    (87) list -> . L type ID prelistAss
    (125) empty -> .

    L               shift and go to state 29
    FUN             reduce using rule 125 (empty -> .)
    MAIN            reduce using rule 125 (empty -> .)
    LB              reduce using rule 125 (empty -> .)

    var5                           shift and go to state 39
    list                           shift and go to state 28
    empty                          shift and go to state 30

state 29

    (87) list -> L . type ID prelistAss
    (24) type -> . INT
    (25) type -> . FLOAT

    INT             shift and go to state 20
    FLOAT           shift and go to state 21

    type                           shift and go to state 40

state 30

    (23) var5 -> empty .

    FUN             reduce using rule 23 (var5 -> empty .)
    MAIN            reduce using rule 23 (var5 -> empty .)
    LB              reduce using rule 23 (var5 -> empty .)


state 31

    (15) var2 -> type var3 . SC var2

    SC              shift and go to state 41


state 32

    (17) var3 -> ID . var4 var33
    (20) var4 -> . EQ exp
    (21) var4 -> . empty
    (125) empty -> .

    EQ              shift and go to state 43
    C               reduce using rule 125 (empty -> .)
    SC              reduce using rule 125 (empty -> .)

    var4                           shift and go to state 42
    empty                          shift and go to state 44

state 33

    (104) block -> LB . block3 RB
    (105) block3 -> . block2 block3
    (106) block3 -> . empty
    (118) block2 -> . figure
    (119) block2 -> . condition
    (120) block2 -> . pen
    (121) block2 -> . lab
    (122) block2 -> . list
    (123) block2 -> . WID
    (124) block2 -> . rep
    (125) empty -> .
    (107) figure -> . rect
    (108) figure -> . tria
    (109) figure -> . poly
    (110) figure -> . lstrip
    (111) figure -> . one_par
    (112) figure -> . p_arc
    (101) condition -> . IF LP expresion RP block con2
    (113) pen -> . colors
    (114) pen -> . p_width
    (115) pen -> . move
    (116) pen -> . position
    (117) pen -> . penwrite
    (96) lab -> . LA LP stExp lab2 RP SC
    (87) list -> . L type ID prelistAss
    (75) WID -> . ID WID2
    (74) rep -> . RE exp block
    (39) rect -> . REC LP exp C exp p_fill RP SC
    (42) tria -> . TRI LP exp C exp C exp p_fill RP SC
    (45) poly -> . POL LP idList p_fill RP SC
    (46) lstrip -> . LS LP idList RP SC
    (43) one_par -> . CIR LP exp p_fill RP SC
    (44) one_par -> . SQ LP exp p_fill RP SC
    (49) p_arc -> . ARC LP exp RP SC
    (29) colors -> . PENC colors2
    (30) colors -> . SETC colors2
    (31) colors -> . BACO colors2
    (33) p_width -> . PENW LP exp RP SC
    (36) move -> . F mueve2
    (37) move -> . B mueve2
    (28) position -> . PENP LP exp C exp RP SC
    (34) penwrite -> . PENU SC
    (35) penwrite -> . PEND SC

    RB              reduce using rule 125 (empty -> .)
    IF              shift and go to state 75
    LA              shift and go to state 57
    L               shift and go to state 29
    ID              shift and go to state 73
    RE              shift and go to state 60
    REC             shift and go to state 54
    TRI             shift and go to state 68
    POL             shift and go to state 59
    LS              shift and go to state 67
    CIR             shift and go to state 78
    SQ              shift and go to state 79
    ARC             shift and go to state 82
    PENC            shift and go to state 63
    SETC            shift and go to state 80
    BACO            shift and go to state 65
    PENW            shift and go to state 55
    F               shift and go to state 70
    B               shift and go to state 69
    PENP            shift and go to state 45
    PENU            shift and go to state 56
    PEND            shift and go to state 62

    block3                         shift and go to state 46
    block2                         shift and go to state 47
    figure                         shift and go to state 48
    lstrip                         shift and go to state 49
    move                           shift and go to state 50
    tria                           shift and go to state 51
    poly                           shift and go to state 52
    colors                         shift and go to state 53
    rep                            shift and go to state 58
    pen                            shift and go to state 61
    condition                      shift and go to state 64
    empty                          shift and go to state 66
    lab                            shift and go to state 71
    one_par                        shift and go to state 72
    rect                           shift and go to state 74
    WID                            shift and go to state 76
    p_arc                          shift and go to state 77
    list                           shift and go to state 81
    position                       shift and go to state 83
    p_width                        shift and go to state 84
    penwrite                       shift and go to state 85

state 34

    (1) prog -> PR p2 p3 MAIN vars block .

    $end            reduce using rule 1 (prog -> PR p2 p3 MAIN vars block .)


state 35

    (7) functions -> fun2 DP vars block .

    FUN             reduce using rule 7 (functions -> fun2 DP vars block .)
    MAIN            reduce using rule 7 (functions -> fun2 DP vars block .)


state 36

    (8) fun2 -> FUN ID LP fun3 . RP

    RP              shift and go to state 86


state 37

    (9) fun3 -> type . ID fun4

    ID              shift and go to state 87


state 38

    (10) fun3 -> empty .

    RP              reduce using rule 10 (fun3 -> empty .)


state 39

    (22) var5 -> list var5 .

    FUN             reduce using rule 22 (var5 -> list var5 .)
    MAIN            reduce using rule 22 (var5 -> list var5 .)
    LB              reduce using rule 22 (var5 -> list var5 .)


state 40

    (87) list -> L type . ID prelistAss

    ID              shift and go to state 88


state 41

    (15) var2 -> type var3 SC . var2
    (15) var2 -> . type var3 SC var2
    (16) var2 -> . empty
    (24) type -> . INT
    (25) type -> . FLOAT
    (125) empty -> .

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    L               reduce using rule 125 (empty -> .)
    FUN             reduce using rule 125 (empty -> .)
    MAIN            reduce using rule 125 (empty -> .)
    LB              reduce using rule 125 (empty -> .)

    type                           shift and go to state 22
    empty                          shift and go to state 23
    var2                           shift and go to state 89

state 42

    (17) var3 -> ID var4 . var33
    (18) var33 -> . C ID var4 var33
    (19) var33 -> . empty
    (125) empty -> .

    C               shift and go to state 91
    SC              reduce using rule 125 (empty -> .)

    var33                          shift and go to state 90
    empty                          shift and go to state 92

state 43

    (20) var4 -> EQ . exp
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    term                           shift and go to state 93
    valExp                         shift and go to state 94
    exp                            shift and go to state 98
    fact2                          shift and go to state 99
    fact                           shift and go to state 101
    fact4                          shift and go to state 102

state 44

    (21) var4 -> empty .

    C               reduce using rule 21 (var4 -> empty .)
    SC              reduce using rule 21 (var4 -> empty .)


state 45

    (28) position -> PENP . LP exp C exp RP SC

    LP              shift and go to state 103


state 46

    (104) block -> LB block3 . RB

    RB              shift and go to state 104


state 47

    (105) block3 -> block2 . block3
    (105) block3 -> . block2 block3
    (106) block3 -> . empty
    (118) block2 -> . figure
    (119) block2 -> . condition
    (120) block2 -> . pen
    (121) block2 -> . lab
    (122) block2 -> . list
    (123) block2 -> . WID
    (124) block2 -> . rep
    (125) empty -> .
    (107) figure -> . rect
    (108) figure -> . tria
    (109) figure -> . poly
    (110) figure -> . lstrip
    (111) figure -> . one_par
    (112) figure -> . p_arc
    (101) condition -> . IF LP expresion RP block con2
    (113) pen -> . colors
    (114) pen -> . p_width
    (115) pen -> . move
    (116) pen -> . position
    (117) pen -> . penwrite
    (96) lab -> . LA LP stExp lab2 RP SC
    (87) list -> . L type ID prelistAss
    (75) WID -> . ID WID2
    (74) rep -> . RE exp block
    (39) rect -> . REC LP exp C exp p_fill RP SC
    (42) tria -> . TRI LP exp C exp C exp p_fill RP SC
    (45) poly -> . POL LP idList p_fill RP SC
    (46) lstrip -> . LS LP idList RP SC
    (43) one_par -> . CIR LP exp p_fill RP SC
    (44) one_par -> . SQ LP exp p_fill RP SC
    (49) p_arc -> . ARC LP exp RP SC
    (29) colors -> . PENC colors2
    (30) colors -> . SETC colors2
    (31) colors -> . BACO colors2
    (33) p_width -> . PENW LP exp RP SC
    (36) move -> . F mueve2
    (37) move -> . B mueve2
    (28) position -> . PENP LP exp C exp RP SC
    (34) penwrite -> . PENU SC
    (35) penwrite -> . PEND SC

    RB              reduce using rule 125 (empty -> .)
    IF              shift and go to state 75
    LA              shift and go to state 57
    L               shift and go to state 29
    ID              shift and go to state 73
    RE              shift and go to state 60
    REC             shift and go to state 54
    TRI             shift and go to state 68
    POL             shift and go to state 59
    LS              shift and go to state 67
    CIR             shift and go to state 78
    SQ              shift and go to state 79
    ARC             shift and go to state 82
    PENC            shift and go to state 63
    SETC            shift and go to state 80
    BACO            shift and go to state 65
    PENW            shift and go to state 55
    F               shift and go to state 70
    B               shift and go to state 69
    PENP            shift and go to state 45
    PENU            shift and go to state 56
    PEND            shift and go to state 62

    block3                         shift and go to state 105
    block2                         shift and go to state 47
    figure                         shift and go to state 48
    lstrip                         shift and go to state 49
    move                           shift and go to state 50
    tria                           shift and go to state 51
    poly                           shift and go to state 52
    colors                         shift and go to state 53
    rep                            shift and go to state 58
    pen                            shift and go to state 61
    condition                      shift and go to state 64
    empty                          shift and go to state 66
    lab                            shift and go to state 71
    one_par                        shift and go to state 72
    rect                           shift and go to state 74
    WID                            shift and go to state 76
    p_arc                          shift and go to state 77
    list                           shift and go to state 81
    position                       shift and go to state 83
    p_width                        shift and go to state 84
    penwrite                       shift and go to state 85

state 48

    (118) block2 -> figure .

    IF              reduce using rule 118 (block2 -> figure .)
    LA              reduce using rule 118 (block2 -> figure .)
    L               reduce using rule 118 (block2 -> figure .)
    ID              reduce using rule 118 (block2 -> figure .)
    RE              reduce using rule 118 (block2 -> figure .)
    REC             reduce using rule 118 (block2 -> figure .)
    TRI             reduce using rule 118 (block2 -> figure .)
    POL             reduce using rule 118 (block2 -> figure .)
    LS              reduce using rule 118 (block2 -> figure .)
    CIR             reduce using rule 118 (block2 -> figure .)
    SQ              reduce using rule 118 (block2 -> figure .)
    ARC             reduce using rule 118 (block2 -> figure .)
    PENC            reduce using rule 118 (block2 -> figure .)
    SETC            reduce using rule 118 (block2 -> figure .)
    BACO            reduce using rule 118 (block2 -> figure .)
    PENW            reduce using rule 118 (block2 -> figure .)
    F               reduce using rule 118 (block2 -> figure .)
    B               reduce using rule 118 (block2 -> figure .)
    PENP            reduce using rule 118 (block2 -> figure .)
    PENU            reduce using rule 118 (block2 -> figure .)
    PEND            reduce using rule 118 (block2 -> figure .)
    RB              reduce using rule 118 (block2 -> figure .)


state 49

    (110) figure -> lstrip .

    IF              reduce using rule 110 (figure -> lstrip .)
    LA              reduce using rule 110 (figure -> lstrip .)
    L               reduce using rule 110 (figure -> lstrip .)
    ID              reduce using rule 110 (figure -> lstrip .)
    RE              reduce using rule 110 (figure -> lstrip .)
    REC             reduce using rule 110 (figure -> lstrip .)
    TRI             reduce using rule 110 (figure -> lstrip .)
    POL             reduce using rule 110 (figure -> lstrip .)
    LS              reduce using rule 110 (figure -> lstrip .)
    CIR             reduce using rule 110 (figure -> lstrip .)
    SQ              reduce using rule 110 (figure -> lstrip .)
    ARC             reduce using rule 110 (figure -> lstrip .)
    PENC            reduce using rule 110 (figure -> lstrip .)
    SETC            reduce using rule 110 (figure -> lstrip .)
    BACO            reduce using rule 110 (figure -> lstrip .)
    PENW            reduce using rule 110 (figure -> lstrip .)
    F               reduce using rule 110 (figure -> lstrip .)
    B               reduce using rule 110 (figure -> lstrip .)
    PENP            reduce using rule 110 (figure -> lstrip .)
    PENU            reduce using rule 110 (figure -> lstrip .)
    PEND            reduce using rule 110 (figure -> lstrip .)
    RB              reduce using rule 110 (figure -> lstrip .)


state 50

    (115) pen -> move .

    IF              reduce using rule 115 (pen -> move .)
    LA              reduce using rule 115 (pen -> move .)
    L               reduce using rule 115 (pen -> move .)
    ID              reduce using rule 115 (pen -> move .)
    RE              reduce using rule 115 (pen -> move .)
    REC             reduce using rule 115 (pen -> move .)
    TRI             reduce using rule 115 (pen -> move .)
    POL             reduce using rule 115 (pen -> move .)
    LS              reduce using rule 115 (pen -> move .)
    CIR             reduce using rule 115 (pen -> move .)
    SQ              reduce using rule 115 (pen -> move .)
    ARC             reduce using rule 115 (pen -> move .)
    PENC            reduce using rule 115 (pen -> move .)
    SETC            reduce using rule 115 (pen -> move .)
    BACO            reduce using rule 115 (pen -> move .)
    PENW            reduce using rule 115 (pen -> move .)
    F               reduce using rule 115 (pen -> move .)
    B               reduce using rule 115 (pen -> move .)
    PENP            reduce using rule 115 (pen -> move .)
    PENU            reduce using rule 115 (pen -> move .)
    PEND            reduce using rule 115 (pen -> move .)
    RB              reduce using rule 115 (pen -> move .)


state 51

    (108) figure -> tria .

    IF              reduce using rule 108 (figure -> tria .)
    LA              reduce using rule 108 (figure -> tria .)
    L               reduce using rule 108 (figure -> tria .)
    ID              reduce using rule 108 (figure -> tria .)
    RE              reduce using rule 108 (figure -> tria .)
    REC             reduce using rule 108 (figure -> tria .)
    TRI             reduce using rule 108 (figure -> tria .)
    POL             reduce using rule 108 (figure -> tria .)
    LS              reduce using rule 108 (figure -> tria .)
    CIR             reduce using rule 108 (figure -> tria .)
    SQ              reduce using rule 108 (figure -> tria .)
    ARC             reduce using rule 108 (figure -> tria .)
    PENC            reduce using rule 108 (figure -> tria .)
    SETC            reduce using rule 108 (figure -> tria .)
    BACO            reduce using rule 108 (figure -> tria .)
    PENW            reduce using rule 108 (figure -> tria .)
    F               reduce using rule 108 (figure -> tria .)
    B               reduce using rule 108 (figure -> tria .)
    PENP            reduce using rule 108 (figure -> tria .)
    PENU            reduce using rule 108 (figure -> tria .)
    PEND            reduce using rule 108 (figure -> tria .)
    RB              reduce using rule 108 (figure -> tria .)


state 52

    (109) figure -> poly .

    IF              reduce using rule 109 (figure -> poly .)
    LA              reduce using rule 109 (figure -> poly .)
    L               reduce using rule 109 (figure -> poly .)
    ID              reduce using rule 109 (figure -> poly .)
    RE              reduce using rule 109 (figure -> poly .)
    REC             reduce using rule 109 (figure -> poly .)
    TRI             reduce using rule 109 (figure -> poly .)
    POL             reduce using rule 109 (figure -> poly .)
    LS              reduce using rule 109 (figure -> poly .)
    CIR             reduce using rule 109 (figure -> poly .)
    SQ              reduce using rule 109 (figure -> poly .)
    ARC             reduce using rule 109 (figure -> poly .)
    PENC            reduce using rule 109 (figure -> poly .)
    SETC            reduce using rule 109 (figure -> poly .)
    BACO            reduce using rule 109 (figure -> poly .)
    PENW            reduce using rule 109 (figure -> poly .)
    F               reduce using rule 109 (figure -> poly .)
    B               reduce using rule 109 (figure -> poly .)
    PENP            reduce using rule 109 (figure -> poly .)
    PENU            reduce using rule 109 (figure -> poly .)
    PEND            reduce using rule 109 (figure -> poly .)
    RB              reduce using rule 109 (figure -> poly .)


state 53

    (113) pen -> colors .

    IF              reduce using rule 113 (pen -> colors .)
    LA              reduce using rule 113 (pen -> colors .)
    L               reduce using rule 113 (pen -> colors .)
    ID              reduce using rule 113 (pen -> colors .)
    RE              reduce using rule 113 (pen -> colors .)
    REC             reduce using rule 113 (pen -> colors .)
    TRI             reduce using rule 113 (pen -> colors .)
    POL             reduce using rule 113 (pen -> colors .)
    LS              reduce using rule 113 (pen -> colors .)
    CIR             reduce using rule 113 (pen -> colors .)
    SQ              reduce using rule 113 (pen -> colors .)
    ARC             reduce using rule 113 (pen -> colors .)
    PENC            reduce using rule 113 (pen -> colors .)
    SETC            reduce using rule 113 (pen -> colors .)
    BACO            reduce using rule 113 (pen -> colors .)
    PENW            reduce using rule 113 (pen -> colors .)
    F               reduce using rule 113 (pen -> colors .)
    B               reduce using rule 113 (pen -> colors .)
    PENP            reduce using rule 113 (pen -> colors .)
    PENU            reduce using rule 113 (pen -> colors .)
    PEND            reduce using rule 113 (pen -> colors .)
    RB              reduce using rule 113 (pen -> colors .)


state 54

    (39) rect -> REC . LP exp C exp p_fill RP SC

    LP              shift and go to state 106


state 55

    (33) p_width -> PENW . LP exp RP SC

    LP              shift and go to state 107


state 56

    (34) penwrite -> PENU . SC

    SC              shift and go to state 108


state 57

    (96) lab -> LA . LP stExp lab2 RP SC

    LP              shift and go to state 109


state 58

    (124) block2 -> rep .

    IF              reduce using rule 124 (block2 -> rep .)
    LA              reduce using rule 124 (block2 -> rep .)
    L               reduce using rule 124 (block2 -> rep .)
    ID              reduce using rule 124 (block2 -> rep .)
    RE              reduce using rule 124 (block2 -> rep .)
    REC             reduce using rule 124 (block2 -> rep .)
    TRI             reduce using rule 124 (block2 -> rep .)
    POL             reduce using rule 124 (block2 -> rep .)
    LS              reduce using rule 124 (block2 -> rep .)
    CIR             reduce using rule 124 (block2 -> rep .)
    SQ              reduce using rule 124 (block2 -> rep .)
    ARC             reduce using rule 124 (block2 -> rep .)
    PENC            reduce using rule 124 (block2 -> rep .)
    SETC            reduce using rule 124 (block2 -> rep .)
    BACO            reduce using rule 124 (block2 -> rep .)
    PENW            reduce using rule 124 (block2 -> rep .)
    F               reduce using rule 124 (block2 -> rep .)
    B               reduce using rule 124 (block2 -> rep .)
    PENP            reduce using rule 124 (block2 -> rep .)
    PENU            reduce using rule 124 (block2 -> rep .)
    PEND            reduce using rule 124 (block2 -> rep .)
    RB              reduce using rule 124 (block2 -> rep .)


state 59

    (45) poly -> POL . LP idList p_fill RP SC

    LP              shift and go to state 110


state 60

    (74) rep -> RE . exp block
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    term                           shift and go to state 93
    valExp                         shift and go to state 94
    exp                            shift and go to state 111
    fact2                          shift and go to state 99
    fact                           shift and go to state 101
    fact4                          shift and go to state 102

state 61

    (120) block2 -> pen .

    IF              reduce using rule 120 (block2 -> pen .)
    LA              reduce using rule 120 (block2 -> pen .)
    L               reduce using rule 120 (block2 -> pen .)
    ID              reduce using rule 120 (block2 -> pen .)
    RE              reduce using rule 120 (block2 -> pen .)
    REC             reduce using rule 120 (block2 -> pen .)
    TRI             reduce using rule 120 (block2 -> pen .)
    POL             reduce using rule 120 (block2 -> pen .)
    LS              reduce using rule 120 (block2 -> pen .)
    CIR             reduce using rule 120 (block2 -> pen .)
    SQ              reduce using rule 120 (block2 -> pen .)
    ARC             reduce using rule 120 (block2 -> pen .)
    PENC            reduce using rule 120 (block2 -> pen .)
    SETC            reduce using rule 120 (block2 -> pen .)
    BACO            reduce using rule 120 (block2 -> pen .)
    PENW            reduce using rule 120 (block2 -> pen .)
    F               reduce using rule 120 (block2 -> pen .)
    B               reduce using rule 120 (block2 -> pen .)
    PENP            reduce using rule 120 (block2 -> pen .)
    PENU            reduce using rule 120 (block2 -> pen .)
    PEND            reduce using rule 120 (block2 -> pen .)
    RB              reduce using rule 120 (block2 -> pen .)


state 62

    (35) penwrite -> PEND . SC

    SC              shift and go to state 112


state 63

    (29) colors -> PENC . colors2
    (32) colors2 -> . LP exp C exp C exp RP SC

    LP              shift and go to state 113

    colors2                        shift and go to state 114

state 64

    (119) block2 -> condition .

    IF              reduce using rule 119 (block2 -> condition .)
    LA              reduce using rule 119 (block2 -> condition .)
    L               reduce using rule 119 (block2 -> condition .)
    ID              reduce using rule 119 (block2 -> condition .)
    RE              reduce using rule 119 (block2 -> condition .)
    REC             reduce using rule 119 (block2 -> condition .)
    TRI             reduce using rule 119 (block2 -> condition .)
    POL             reduce using rule 119 (block2 -> condition .)
    LS              reduce using rule 119 (block2 -> condition .)
    CIR             reduce using rule 119 (block2 -> condition .)
    SQ              reduce using rule 119 (block2 -> condition .)
    ARC             reduce using rule 119 (block2 -> condition .)
    PENC            reduce using rule 119 (block2 -> condition .)
    SETC            reduce using rule 119 (block2 -> condition .)
    BACO            reduce using rule 119 (block2 -> condition .)
    PENW            reduce using rule 119 (block2 -> condition .)
    F               reduce using rule 119 (block2 -> condition .)
    B               reduce using rule 119 (block2 -> condition .)
    PENP            reduce using rule 119 (block2 -> condition .)
    PENU            reduce using rule 119 (block2 -> condition .)
    PEND            reduce using rule 119 (block2 -> condition .)
    RB              reduce using rule 119 (block2 -> condition .)


state 65

    (31) colors -> BACO . colors2
    (32) colors2 -> . LP exp C exp C exp RP SC

    LP              shift and go to state 113

    colors2                        shift and go to state 115

state 66

    (106) block3 -> empty .

    RB              reduce using rule 106 (block3 -> empty .)


state 67

    (46) lstrip -> LS . LP idList RP SC

    LP              shift and go to state 116


state 68

    (42) tria -> TRI . LP exp C exp C exp p_fill RP SC

    LP              shift and go to state 117


state 69

    (37) move -> B . mueve2
    (38) mueve2 -> . LP exp C A exp RP SC

    LP              shift and go to state 118

    mueve2                         shift and go to state 119

state 70

    (36) move -> F . mueve2
    (38) mueve2 -> . LP exp C A exp RP SC

    LP              shift and go to state 118

    mueve2                         shift and go to state 120

state 71

    (121) block2 -> lab .

    IF              reduce using rule 121 (block2 -> lab .)
    LA              reduce using rule 121 (block2 -> lab .)
    L               reduce using rule 121 (block2 -> lab .)
    ID              reduce using rule 121 (block2 -> lab .)
    RE              reduce using rule 121 (block2 -> lab .)
    REC             reduce using rule 121 (block2 -> lab .)
    TRI             reduce using rule 121 (block2 -> lab .)
    POL             reduce using rule 121 (block2 -> lab .)
    LS              reduce using rule 121 (block2 -> lab .)
    CIR             reduce using rule 121 (block2 -> lab .)
    SQ              reduce using rule 121 (block2 -> lab .)
    ARC             reduce using rule 121 (block2 -> lab .)
    PENC            reduce using rule 121 (block2 -> lab .)
    SETC            reduce using rule 121 (block2 -> lab .)
    BACO            reduce using rule 121 (block2 -> lab .)
    PENW            reduce using rule 121 (block2 -> lab .)
    F               reduce using rule 121 (block2 -> lab .)
    B               reduce using rule 121 (block2 -> lab .)
    PENP            reduce using rule 121 (block2 -> lab .)
    PENU            reduce using rule 121 (block2 -> lab .)
    PEND            reduce using rule 121 (block2 -> lab .)
    RB              reduce using rule 121 (block2 -> lab .)


state 72

    (111) figure -> one_par .

    IF              reduce using rule 111 (figure -> one_par .)
    LA              reduce using rule 111 (figure -> one_par .)
    L               reduce using rule 111 (figure -> one_par .)
    ID              reduce using rule 111 (figure -> one_par .)
    RE              reduce using rule 111 (figure -> one_par .)
    REC             reduce using rule 111 (figure -> one_par .)
    TRI             reduce using rule 111 (figure -> one_par .)
    POL             reduce using rule 111 (figure -> one_par .)
    LS              reduce using rule 111 (figure -> one_par .)
    CIR             reduce using rule 111 (figure -> one_par .)
    SQ              reduce using rule 111 (figure -> one_par .)
    ARC             reduce using rule 111 (figure -> one_par .)
    PENC            reduce using rule 111 (figure -> one_par .)
    SETC            reduce using rule 111 (figure -> one_par .)
    BACO            reduce using rule 111 (figure -> one_par .)
    PENW            reduce using rule 111 (figure -> one_par .)
    F               reduce using rule 111 (figure -> one_par .)
    B               reduce using rule 111 (figure -> one_par .)
    PENP            reduce using rule 111 (figure -> one_par .)
    PENU            reduce using rule 111 (figure -> one_par .)
    PEND            reduce using rule 111 (figure -> one_par .)
    RB              reduce using rule 111 (figure -> one_par .)


state 73

    (75) WID -> ID . WID2
    (76) WID2 -> . assigment
    (77) WID2 -> . funCall
    (78) assigment -> . EQ tipeAss
    (82) funCall -> . LP func2 RP SC

    EQ              shift and go to state 123
    LP              shift and go to state 121

    funCall                        shift and go to state 124
    assigment                      shift and go to state 122
    WID2                           shift and go to state 125

state 74

    (107) figure -> rect .

    IF              reduce using rule 107 (figure -> rect .)
    LA              reduce using rule 107 (figure -> rect .)
    L               reduce using rule 107 (figure -> rect .)
    ID              reduce using rule 107 (figure -> rect .)
    RE              reduce using rule 107 (figure -> rect .)
    REC             reduce using rule 107 (figure -> rect .)
    TRI             reduce using rule 107 (figure -> rect .)
    POL             reduce using rule 107 (figure -> rect .)
    LS              reduce using rule 107 (figure -> rect .)
    CIR             reduce using rule 107 (figure -> rect .)
    SQ              reduce using rule 107 (figure -> rect .)
    ARC             reduce using rule 107 (figure -> rect .)
    PENC            reduce using rule 107 (figure -> rect .)
    SETC            reduce using rule 107 (figure -> rect .)
    BACO            reduce using rule 107 (figure -> rect .)
    PENW            reduce using rule 107 (figure -> rect .)
    F               reduce using rule 107 (figure -> rect .)
    B               reduce using rule 107 (figure -> rect .)
    PENP            reduce using rule 107 (figure -> rect .)
    PENU            reduce using rule 107 (figure -> rect .)
    PEND            reduce using rule 107 (figure -> rect .)
    RB              reduce using rule 107 (figure -> rect .)


state 75

    (101) condition -> IF . LP expresion RP block con2

    LP              shift and go to state 126


state 76

    (123) block2 -> WID .

    IF              reduce using rule 123 (block2 -> WID .)
    LA              reduce using rule 123 (block2 -> WID .)
    L               reduce using rule 123 (block2 -> WID .)
    ID              reduce using rule 123 (block2 -> WID .)
    RE              reduce using rule 123 (block2 -> WID .)
    REC             reduce using rule 123 (block2 -> WID .)
    TRI             reduce using rule 123 (block2 -> WID .)
    POL             reduce using rule 123 (block2 -> WID .)
    LS              reduce using rule 123 (block2 -> WID .)
    CIR             reduce using rule 123 (block2 -> WID .)
    SQ              reduce using rule 123 (block2 -> WID .)
    ARC             reduce using rule 123 (block2 -> WID .)
    PENC            reduce using rule 123 (block2 -> WID .)
    SETC            reduce using rule 123 (block2 -> WID .)
    BACO            reduce using rule 123 (block2 -> WID .)
    PENW            reduce using rule 123 (block2 -> WID .)
    F               reduce using rule 123 (block2 -> WID .)
    B               reduce using rule 123 (block2 -> WID .)
    PENP            reduce using rule 123 (block2 -> WID .)
    PENU            reduce using rule 123 (block2 -> WID .)
    PEND            reduce using rule 123 (block2 -> WID .)
    RB              reduce using rule 123 (block2 -> WID .)


state 77

    (112) figure -> p_arc .

    IF              reduce using rule 112 (figure -> p_arc .)
    LA              reduce using rule 112 (figure -> p_arc .)
    L               reduce using rule 112 (figure -> p_arc .)
    ID              reduce using rule 112 (figure -> p_arc .)
    RE              reduce using rule 112 (figure -> p_arc .)
    REC             reduce using rule 112 (figure -> p_arc .)
    TRI             reduce using rule 112 (figure -> p_arc .)
    POL             reduce using rule 112 (figure -> p_arc .)
    LS              reduce using rule 112 (figure -> p_arc .)
    CIR             reduce using rule 112 (figure -> p_arc .)
    SQ              reduce using rule 112 (figure -> p_arc .)
    ARC             reduce using rule 112 (figure -> p_arc .)
    PENC            reduce using rule 112 (figure -> p_arc .)
    SETC            reduce using rule 112 (figure -> p_arc .)
    BACO            reduce using rule 112 (figure -> p_arc .)
    PENW            reduce using rule 112 (figure -> p_arc .)
    F               reduce using rule 112 (figure -> p_arc .)
    B               reduce using rule 112 (figure -> p_arc .)
    PENP            reduce using rule 112 (figure -> p_arc .)
    PENU            reduce using rule 112 (figure -> p_arc .)
    PEND            reduce using rule 112 (figure -> p_arc .)
    RB              reduce using rule 112 (figure -> p_arc .)


state 78

    (43) one_par -> CIR . LP exp p_fill RP SC

    LP              shift and go to state 127


state 79

    (44) one_par -> SQ . LP exp p_fill RP SC

    LP              shift and go to state 128


state 80

    (30) colors -> SETC . colors2
    (32) colors2 -> . LP exp C exp C exp RP SC

    LP              shift and go to state 113

    colors2                        shift and go to state 129

state 81

    (122) block2 -> list .

    IF              reduce using rule 122 (block2 -> list .)
    LA              reduce using rule 122 (block2 -> list .)
    L               reduce using rule 122 (block2 -> list .)
    ID              reduce using rule 122 (block2 -> list .)
    RE              reduce using rule 122 (block2 -> list .)
    REC             reduce using rule 122 (block2 -> list .)
    TRI             reduce using rule 122 (block2 -> list .)
    POL             reduce using rule 122 (block2 -> list .)
    LS              reduce using rule 122 (block2 -> list .)
    CIR             reduce using rule 122 (block2 -> list .)
    SQ              reduce using rule 122 (block2 -> list .)
    ARC             reduce using rule 122 (block2 -> list .)
    PENC            reduce using rule 122 (block2 -> list .)
    SETC            reduce using rule 122 (block2 -> list .)
    BACO            reduce using rule 122 (block2 -> list .)
    PENW            reduce using rule 122 (block2 -> list .)
    F               reduce using rule 122 (block2 -> list .)
    B               reduce using rule 122 (block2 -> list .)
    PENP            reduce using rule 122 (block2 -> list .)
    PENU            reduce using rule 122 (block2 -> list .)
    PEND            reduce using rule 122 (block2 -> list .)
    RB              reduce using rule 122 (block2 -> list .)


state 82

    (49) p_arc -> ARC . LP exp RP SC

    LP              shift and go to state 130


state 83

    (116) pen -> position .

    IF              reduce using rule 116 (pen -> position .)
    LA              reduce using rule 116 (pen -> position .)
    L               reduce using rule 116 (pen -> position .)
    ID              reduce using rule 116 (pen -> position .)
    RE              reduce using rule 116 (pen -> position .)
    REC             reduce using rule 116 (pen -> position .)
    TRI             reduce using rule 116 (pen -> position .)
    POL             reduce using rule 116 (pen -> position .)
    LS              reduce using rule 116 (pen -> position .)
    CIR             reduce using rule 116 (pen -> position .)
    SQ              reduce using rule 116 (pen -> position .)
    ARC             reduce using rule 116 (pen -> position .)
    PENC            reduce using rule 116 (pen -> position .)
    SETC            reduce using rule 116 (pen -> position .)
    BACO            reduce using rule 116 (pen -> position .)
    PENW            reduce using rule 116 (pen -> position .)
    F               reduce using rule 116 (pen -> position .)
    B               reduce using rule 116 (pen -> position .)
    PENP            reduce using rule 116 (pen -> position .)
    PENU            reduce using rule 116 (pen -> position .)
    PEND            reduce using rule 116 (pen -> position .)
    RB              reduce using rule 116 (pen -> position .)


state 84

    (114) pen -> p_width .

    IF              reduce using rule 114 (pen -> p_width .)
    LA              reduce using rule 114 (pen -> p_width .)
    L               reduce using rule 114 (pen -> p_width .)
    ID              reduce using rule 114 (pen -> p_width .)
    RE              reduce using rule 114 (pen -> p_width .)
    REC             reduce using rule 114 (pen -> p_width .)
    TRI             reduce using rule 114 (pen -> p_width .)
    POL             reduce using rule 114 (pen -> p_width .)
    LS              reduce using rule 114 (pen -> p_width .)
    CIR             reduce using rule 114 (pen -> p_width .)
    SQ              reduce using rule 114 (pen -> p_width .)
    ARC             reduce using rule 114 (pen -> p_width .)
    PENC            reduce using rule 114 (pen -> p_width .)
    SETC            reduce using rule 114 (pen -> p_width .)
    BACO            reduce using rule 114 (pen -> p_width .)
    PENW            reduce using rule 114 (pen -> p_width .)
    F               reduce using rule 114 (pen -> p_width .)
    B               reduce using rule 114 (pen -> p_width .)
    PENP            reduce using rule 114 (pen -> p_width .)
    PENU            reduce using rule 114 (pen -> p_width .)
    PEND            reduce using rule 114 (pen -> p_width .)
    RB              reduce using rule 114 (pen -> p_width .)


state 85

    (117) pen -> penwrite .

    IF              reduce using rule 117 (pen -> penwrite .)
    LA              reduce using rule 117 (pen -> penwrite .)
    L               reduce using rule 117 (pen -> penwrite .)
    ID              reduce using rule 117 (pen -> penwrite .)
    RE              reduce using rule 117 (pen -> penwrite .)
    REC             reduce using rule 117 (pen -> penwrite .)
    TRI             reduce using rule 117 (pen -> penwrite .)
    POL             reduce using rule 117 (pen -> penwrite .)
    LS              reduce using rule 117 (pen -> penwrite .)
    CIR             reduce using rule 117 (pen -> penwrite .)
    SQ              reduce using rule 117 (pen -> penwrite .)
    ARC             reduce using rule 117 (pen -> penwrite .)
    PENC            reduce using rule 117 (pen -> penwrite .)
    SETC            reduce using rule 117 (pen -> penwrite .)
    BACO            reduce using rule 117 (pen -> penwrite .)
    PENW            reduce using rule 117 (pen -> penwrite .)
    F               reduce using rule 117 (pen -> penwrite .)
    B               reduce using rule 117 (pen -> penwrite .)
    PENP            reduce using rule 117 (pen -> penwrite .)
    PENU            reduce using rule 117 (pen -> penwrite .)
    PEND            reduce using rule 117 (pen -> penwrite .)
    RB              reduce using rule 117 (pen -> penwrite .)


state 86

    (8) fun2 -> FUN ID LP fun3 RP .

    DP              reduce using rule 8 (fun2 -> FUN ID LP fun3 RP .)


state 87

    (9) fun3 -> type ID . fun4
    (11) fun4 -> . C type ID fun4
    (12) fun4 -> . empty
    (125) empty -> .

    C               shift and go to state 132
    RP              reduce using rule 125 (empty -> .)

    fun4                           shift and go to state 131
    empty                          shift and go to state 133

state 88

    (87) list -> L type ID . prelistAss
    (88) prelistAss -> . EQ listAss
    (89) prelistAss -> . SC

    EQ              shift and go to state 136
    SC              shift and go to state 135

    prelistAss                     shift and go to state 134

state 89

    (15) var2 -> type var3 SC var2 .

    L               reduce using rule 15 (var2 -> type var3 SC var2 .)
    FUN             reduce using rule 15 (var2 -> type var3 SC var2 .)
    MAIN            reduce using rule 15 (var2 -> type var3 SC var2 .)
    LB              reduce using rule 15 (var2 -> type var3 SC var2 .)


state 90

    (17) var3 -> ID var4 var33 .

    SC              reduce using rule 17 (var3 -> ID var4 var33 .)


state 91

    (18) var33 -> C . ID var4 var33

    ID              shift and go to state 137


state 92

    (19) var33 -> empty .

    SC              reduce using rule 19 (var33 -> empty .)


state 93

    (57) exp -> term . exp2
    (58) exp2 -> . exp3 exp
    (59) exp2 -> . empty
    (60) exp3 -> . ADD
    (61) exp3 -> . SUB
    (125) empty -> .

  ! shift/reduce conflict for ADD resolved as shift
    ADD             shift and go to state 141
    SUB             shift and go to state 138
    C               reduce using rule 125 (empty -> .)
    SC              reduce using rule 125 (empty -> .)
    LB              reduce using rule 125 (empty -> .)
    RP              reduce using rule 125 (empty -> .)
    LT              reduce using rule 125 (empty -> .)
    MT              reduce using rule 125 (empty -> .)
    D               reduce using rule 125 (empty -> .)
    SEQ             reduce using rule 125 (empty -> .)

  ! ADD             [ reduce using rule 125 (empty -> .) ]

    exp3                           shift and go to state 139
    exp2                           shift and go to state 140
    empty                          shift and go to state 142

state 94

    (70) fact4 -> valExp .

    M               reduce using rule 70 (fact4 -> valExp .)
    DIV             reduce using rule 70 (fact4 -> valExp .)
    ADD             reduce using rule 70 (fact4 -> valExp .)
    SUB             reduce using rule 70 (fact4 -> valExp .)
    RP              reduce using rule 70 (fact4 -> valExp .)
    C               reduce using rule 70 (fact4 -> valExp .)
    SC              reduce using rule 70 (fact4 -> valExp .)
    LB              reduce using rule 70 (fact4 -> valExp .)
    LT              reduce using rule 70 (fact4 -> valExp .)
    MT              reduce using rule 70 (fact4 -> valExp .)
    D               reduce using rule 70 (fact4 -> valExp .)
    SEQ             reduce using rule 70 (fact4 -> valExp .)


state 95

    (69) fact2 -> LP .

    LP              reduce using rule 69 (fact2 -> LP .)
    ID              reduce using rule 69 (fact2 -> LP .)
    VALI            reduce using rule 69 (fact2 -> LP .)
    VALF            reduce using rule 69 (fact2 -> LP .)


state 96

    (72) valExp -> VALI .

    M               reduce using rule 72 (valExp -> VALI .)
    DIV             reduce using rule 72 (valExp -> VALI .)
    ADD             reduce using rule 72 (valExp -> VALI .)
    SUB             reduce using rule 72 (valExp -> VALI .)
    C               reduce using rule 72 (valExp -> VALI .)
    RP              reduce using rule 72 (valExp -> VALI .)
    LT              reduce using rule 72 (valExp -> VALI .)
    MT              reduce using rule 72 (valExp -> VALI .)
    D               reduce using rule 72 (valExp -> VALI .)
    SEQ             reduce using rule 72 (valExp -> VALI .)
    SC              reduce using rule 72 (valExp -> VALI .)
    LB              reduce using rule 72 (valExp -> VALI .)


state 97

    (73) valExp -> VALF .

    M               reduce using rule 73 (valExp -> VALF .)
    DIV             reduce using rule 73 (valExp -> VALF .)
    ADD             reduce using rule 73 (valExp -> VALF .)
    SUB             reduce using rule 73 (valExp -> VALF .)
    C               reduce using rule 73 (valExp -> VALF .)
    RP              reduce using rule 73 (valExp -> VALF .)
    LT              reduce using rule 73 (valExp -> VALF .)
    MT              reduce using rule 73 (valExp -> VALF .)
    D               reduce using rule 73 (valExp -> VALF .)
    SEQ             reduce using rule 73 (valExp -> VALF .)
    SC              reduce using rule 73 (valExp -> VALF .)
    LB              reduce using rule 73 (valExp -> VALF .)


state 98

    (20) var4 -> EQ exp .

    C               reduce using rule 20 (var4 -> EQ exp .)
    SC              reduce using rule 20 (var4 -> EQ exp .)


state 99

    (67) fact -> fact2 . exp RP
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    term                           shift and go to state 93
    valExp                         shift and go to state 94
    exp                            shift and go to state 143
    fact2                          shift and go to state 99
    fact                           shift and go to state 101
    fact4                          shift and go to state 102

state 100

    (71) fact4 -> ID .

    M               reduce using rule 71 (fact4 -> ID .)
    DIV             reduce using rule 71 (fact4 -> ID .)
    ADD             reduce using rule 71 (fact4 -> ID .)
    SUB             reduce using rule 71 (fact4 -> ID .)
    RP              reduce using rule 71 (fact4 -> ID .)
    C               reduce using rule 71 (fact4 -> ID .)
    SC              reduce using rule 71 (fact4 -> ID .)
    LB              reduce using rule 71 (fact4 -> ID .)
    LT              reduce using rule 71 (fact4 -> ID .)
    MT              reduce using rule 71 (fact4 -> ID .)
    D               reduce using rule 71 (fact4 -> ID .)
    SEQ             reduce using rule 71 (fact4 -> ID .)


state 101

    (62) term -> fact . term2
    (63) term2 -> . term3 term
    (64) term2 -> . empty
    (65) term3 -> . M
    (66) term3 -> . DIV
    (125) empty -> .

    M               shift and go to state 146
    DIV             shift and go to state 147
    ADD             reduce using rule 125 (empty -> .)
    SUB             reduce using rule 125 (empty -> .)
    C               reduce using rule 125 (empty -> .)
    SC              reduce using rule 125 (empty -> .)
    LB              reduce using rule 125 (empty -> .)
    RP              reduce using rule 125 (empty -> .)
    LT              reduce using rule 125 (empty -> .)
    MT              reduce using rule 125 (empty -> .)
    D               reduce using rule 125 (empty -> .)
    SEQ             reduce using rule 125 (empty -> .)

    empty                          shift and go to state 148
    term3                          shift and go to state 144
    term2                          shift and go to state 145

state 102

    (68) fact -> fact4 .

    M               reduce using rule 68 (fact -> fact4 .)
    DIV             reduce using rule 68 (fact -> fact4 .)
    ADD             reduce using rule 68 (fact -> fact4 .)
    SUB             reduce using rule 68 (fact -> fact4 .)
    C               reduce using rule 68 (fact -> fact4 .)
    RP              reduce using rule 68 (fact -> fact4 .)
    SC              reduce using rule 68 (fact -> fact4 .)
    LB              reduce using rule 68 (fact -> fact4 .)
    LT              reduce using rule 68 (fact -> fact4 .)
    MT              reduce using rule 68 (fact -> fact4 .)
    D               reduce using rule 68 (fact -> fact4 .)
    SEQ             reduce using rule 68 (fact -> fact4 .)


state 103

    (28) position -> PENP LP . exp C exp RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    term                           shift and go to state 93
    valExp                         shift and go to state 94
    exp                            shift and go to state 149
    fact2                          shift and go to state 99
    fact                           shift and go to state 101
    fact4                          shift and go to state 102

state 104

    (104) block -> LB block3 RB .

    $end            reduce using rule 104 (block -> LB block3 RB .)
    FUN             reduce using rule 104 (block -> LB block3 RB .)
    MAIN            reduce using rule 104 (block -> LB block3 RB .)
    ELSE            reduce using rule 104 (block -> LB block3 RB .)
    IF              reduce using rule 104 (block -> LB block3 RB .)
    LA              reduce using rule 104 (block -> LB block3 RB .)
    L               reduce using rule 104 (block -> LB block3 RB .)
    ID              reduce using rule 104 (block -> LB block3 RB .)
    RE              reduce using rule 104 (block -> LB block3 RB .)
    REC             reduce using rule 104 (block -> LB block3 RB .)
    TRI             reduce using rule 104 (block -> LB block3 RB .)
    POL             reduce using rule 104 (block -> LB block3 RB .)
    LS              reduce using rule 104 (block -> LB block3 RB .)
    CIR             reduce using rule 104 (block -> LB block3 RB .)
    SQ              reduce using rule 104 (block -> LB block3 RB .)
    ARC             reduce using rule 104 (block -> LB block3 RB .)
    PENC            reduce using rule 104 (block -> LB block3 RB .)
    SETC            reduce using rule 104 (block -> LB block3 RB .)
    BACO            reduce using rule 104 (block -> LB block3 RB .)
    PENW            reduce using rule 104 (block -> LB block3 RB .)
    F               reduce using rule 104 (block -> LB block3 RB .)
    B               reduce using rule 104 (block -> LB block3 RB .)
    PENP            reduce using rule 104 (block -> LB block3 RB .)
    PENU            reduce using rule 104 (block -> LB block3 RB .)
    PEND            reduce using rule 104 (block -> LB block3 RB .)
    RB              reduce using rule 104 (block -> LB block3 RB .)


state 105

    (105) block3 -> block2 block3 .

    RB              reduce using rule 105 (block3 -> block2 block3 .)


state 106

    (39) rect -> REC LP . exp C exp p_fill RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    term                           shift and go to state 93
    valExp                         shift and go to state 94
    exp                            shift and go to state 150
    fact2                          shift and go to state 99
    fact4                          shift and go to state 102
    fact                           shift and go to state 101

state 107

    (33) p_width -> PENW LP . exp RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    term                           shift and go to state 93
    valExp                         shift and go to state 94
    exp                            shift and go to state 151
    fact2                          shift and go to state 99
    fact                           shift and go to state 101
    fact4                          shift and go to state 102

state 108

    (34) penwrite -> PENU SC .

    IF              reduce using rule 34 (penwrite -> PENU SC .)
    LA              reduce using rule 34 (penwrite -> PENU SC .)
    L               reduce using rule 34 (penwrite -> PENU SC .)
    ID              reduce using rule 34 (penwrite -> PENU SC .)
    RE              reduce using rule 34 (penwrite -> PENU SC .)
    REC             reduce using rule 34 (penwrite -> PENU SC .)
    TRI             reduce using rule 34 (penwrite -> PENU SC .)
    POL             reduce using rule 34 (penwrite -> PENU SC .)
    LS              reduce using rule 34 (penwrite -> PENU SC .)
    CIR             reduce using rule 34 (penwrite -> PENU SC .)
    SQ              reduce using rule 34 (penwrite -> PENU SC .)
    ARC             reduce using rule 34 (penwrite -> PENU SC .)
    PENC            reduce using rule 34 (penwrite -> PENU SC .)
    SETC            reduce using rule 34 (penwrite -> PENU SC .)
    BACO            reduce using rule 34 (penwrite -> PENU SC .)
    PENW            reduce using rule 34 (penwrite -> PENU SC .)
    F               reduce using rule 34 (penwrite -> PENU SC .)
    B               reduce using rule 34 (penwrite -> PENU SC .)
    PENP            reduce using rule 34 (penwrite -> PENU SC .)
    PENU            reduce using rule 34 (penwrite -> PENU SC .)
    PEND            reduce using rule 34 (penwrite -> PENU SC .)
    RB              reduce using rule 34 (penwrite -> PENU SC .)


state 109

    (96) lab -> LA LP . stExp lab2 RP SC
    (99) stExp -> . STR
    (100) stExp -> . exp
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    STR             shift and go to state 152
    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    term                           shift and go to state 93
    valExp                         shift and go to state 94
    stExp                          shift and go to state 153
    exp                            shift and go to state 154
    fact2                          shift and go to state 99
    fact                           shift and go to state 101
    fact4                          shift and go to state 102

state 110

    (45) poly -> POL LP . idList p_fill RP SC
    (47) idList -> . list
    (48) idList -> . ID
    (87) list -> . L type ID prelistAss

    ID              shift and go to state 157
    L               shift and go to state 29

    list                           shift and go to state 156
    idList                         shift and go to state 155

state 111

    (74) rep -> RE exp . block
    (104) block -> . LB block3 RB

    LB              shift and go to state 33

    block                          shift and go to state 158

state 112

    (35) penwrite -> PEND SC .

    IF              reduce using rule 35 (penwrite -> PEND SC .)
    LA              reduce using rule 35 (penwrite -> PEND SC .)
    L               reduce using rule 35 (penwrite -> PEND SC .)
    ID              reduce using rule 35 (penwrite -> PEND SC .)
    RE              reduce using rule 35 (penwrite -> PEND SC .)
    REC             reduce using rule 35 (penwrite -> PEND SC .)
    TRI             reduce using rule 35 (penwrite -> PEND SC .)
    POL             reduce using rule 35 (penwrite -> PEND SC .)
    LS              reduce using rule 35 (penwrite -> PEND SC .)
    CIR             reduce using rule 35 (penwrite -> PEND SC .)
    SQ              reduce using rule 35 (penwrite -> PEND SC .)
    ARC             reduce using rule 35 (penwrite -> PEND SC .)
    PENC            reduce using rule 35 (penwrite -> PEND SC .)
    SETC            reduce using rule 35 (penwrite -> PEND SC .)
    BACO            reduce using rule 35 (penwrite -> PEND SC .)
    PENW            reduce using rule 35 (penwrite -> PEND SC .)
    F               reduce using rule 35 (penwrite -> PEND SC .)
    B               reduce using rule 35 (penwrite -> PEND SC .)
    PENP            reduce using rule 35 (penwrite -> PEND SC .)
    PENU            reduce using rule 35 (penwrite -> PEND SC .)
    PEND            reduce using rule 35 (penwrite -> PEND SC .)
    RB              reduce using rule 35 (penwrite -> PEND SC .)


state 113

    (32) colors2 -> LP . exp C exp C exp RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    term                           shift and go to state 93
    valExp                         shift and go to state 94
    exp                            shift and go to state 159
    fact2                          shift and go to state 99
    fact                           shift and go to state 101
    fact4                          shift and go to state 102

state 114

    (29) colors -> PENC colors2 .

    IF              reduce using rule 29 (colors -> PENC colors2 .)
    LA              reduce using rule 29 (colors -> PENC colors2 .)
    L               reduce using rule 29 (colors -> PENC colors2 .)
    ID              reduce using rule 29 (colors -> PENC colors2 .)
    RE              reduce using rule 29 (colors -> PENC colors2 .)
    REC             reduce using rule 29 (colors -> PENC colors2 .)
    TRI             reduce using rule 29 (colors -> PENC colors2 .)
    POL             reduce using rule 29 (colors -> PENC colors2 .)
    LS              reduce using rule 29 (colors -> PENC colors2 .)
    CIR             reduce using rule 29 (colors -> PENC colors2 .)
    SQ              reduce using rule 29 (colors -> PENC colors2 .)
    ARC             reduce using rule 29 (colors -> PENC colors2 .)
    PENC            reduce using rule 29 (colors -> PENC colors2 .)
    SETC            reduce using rule 29 (colors -> PENC colors2 .)
    BACO            reduce using rule 29 (colors -> PENC colors2 .)
    PENW            reduce using rule 29 (colors -> PENC colors2 .)
    F               reduce using rule 29 (colors -> PENC colors2 .)
    B               reduce using rule 29 (colors -> PENC colors2 .)
    PENP            reduce using rule 29 (colors -> PENC colors2 .)
    PENU            reduce using rule 29 (colors -> PENC colors2 .)
    PEND            reduce using rule 29 (colors -> PENC colors2 .)
    RB              reduce using rule 29 (colors -> PENC colors2 .)


state 115

    (31) colors -> BACO colors2 .

    IF              reduce using rule 31 (colors -> BACO colors2 .)
    LA              reduce using rule 31 (colors -> BACO colors2 .)
    L               reduce using rule 31 (colors -> BACO colors2 .)
    ID              reduce using rule 31 (colors -> BACO colors2 .)
    RE              reduce using rule 31 (colors -> BACO colors2 .)
    REC             reduce using rule 31 (colors -> BACO colors2 .)
    TRI             reduce using rule 31 (colors -> BACO colors2 .)
    POL             reduce using rule 31 (colors -> BACO colors2 .)
    LS              reduce using rule 31 (colors -> BACO colors2 .)
    CIR             reduce using rule 31 (colors -> BACO colors2 .)
    SQ              reduce using rule 31 (colors -> BACO colors2 .)
    ARC             reduce using rule 31 (colors -> BACO colors2 .)
    PENC            reduce using rule 31 (colors -> BACO colors2 .)
    SETC            reduce using rule 31 (colors -> BACO colors2 .)
    BACO            reduce using rule 31 (colors -> BACO colors2 .)
    PENW            reduce using rule 31 (colors -> BACO colors2 .)
    F               reduce using rule 31 (colors -> BACO colors2 .)
    B               reduce using rule 31 (colors -> BACO colors2 .)
    PENP            reduce using rule 31 (colors -> BACO colors2 .)
    PENU            reduce using rule 31 (colors -> BACO colors2 .)
    PEND            reduce using rule 31 (colors -> BACO colors2 .)
    RB              reduce using rule 31 (colors -> BACO colors2 .)


state 116

    (46) lstrip -> LS LP . idList RP SC
    (47) idList -> . list
    (48) idList -> . ID
    (87) list -> . L type ID prelistAss

    ID              shift and go to state 157
    L               shift and go to state 29

    list                           shift and go to state 156
    idList                         shift and go to state 160

state 117

    (42) tria -> TRI LP . exp C exp C exp p_fill RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    term                           shift and go to state 93
    valExp                         shift and go to state 94
    exp                            shift and go to state 161
    fact2                          shift and go to state 99
    fact4                          shift and go to state 102
    fact                           shift and go to state 101

state 118

    (38) mueve2 -> LP . exp C A exp RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    term                           shift and go to state 93
    valExp                         shift and go to state 94
    exp                            shift and go to state 162
    fact2                          shift and go to state 99
    fact                           shift and go to state 101
    fact4                          shift and go to state 102

state 119

    (37) move -> B mueve2 .

    IF              reduce using rule 37 (move -> B mueve2 .)
    LA              reduce using rule 37 (move -> B mueve2 .)
    L               reduce using rule 37 (move -> B mueve2 .)
    ID              reduce using rule 37 (move -> B mueve2 .)
    RE              reduce using rule 37 (move -> B mueve2 .)
    REC             reduce using rule 37 (move -> B mueve2 .)
    TRI             reduce using rule 37 (move -> B mueve2 .)
    POL             reduce using rule 37 (move -> B mueve2 .)
    LS              reduce using rule 37 (move -> B mueve2 .)
    CIR             reduce using rule 37 (move -> B mueve2 .)
    SQ              reduce using rule 37 (move -> B mueve2 .)
    ARC             reduce using rule 37 (move -> B mueve2 .)
    PENC            reduce using rule 37 (move -> B mueve2 .)
    SETC            reduce using rule 37 (move -> B mueve2 .)
    BACO            reduce using rule 37 (move -> B mueve2 .)
    PENW            reduce using rule 37 (move -> B mueve2 .)
    F               reduce using rule 37 (move -> B mueve2 .)
    B               reduce using rule 37 (move -> B mueve2 .)
    PENP            reduce using rule 37 (move -> B mueve2 .)
    PENU            reduce using rule 37 (move -> B mueve2 .)
    PEND            reduce using rule 37 (move -> B mueve2 .)
    RB              reduce using rule 37 (move -> B mueve2 .)


state 120

    (36) move -> F mueve2 .

    IF              reduce using rule 36 (move -> F mueve2 .)
    LA              reduce using rule 36 (move -> F mueve2 .)
    L               reduce using rule 36 (move -> F mueve2 .)
    ID              reduce using rule 36 (move -> F mueve2 .)
    RE              reduce using rule 36 (move -> F mueve2 .)
    REC             reduce using rule 36 (move -> F mueve2 .)
    TRI             reduce using rule 36 (move -> F mueve2 .)
    POL             reduce using rule 36 (move -> F mueve2 .)
    LS              reduce using rule 36 (move -> F mueve2 .)
    CIR             reduce using rule 36 (move -> F mueve2 .)
    SQ              reduce using rule 36 (move -> F mueve2 .)
    ARC             reduce using rule 36 (move -> F mueve2 .)
    PENC            reduce using rule 36 (move -> F mueve2 .)
    SETC            reduce using rule 36 (move -> F mueve2 .)
    BACO            reduce using rule 36 (move -> F mueve2 .)
    PENW            reduce using rule 36 (move -> F mueve2 .)
    F               reduce using rule 36 (move -> F mueve2 .)
    B               reduce using rule 36 (move -> F mueve2 .)
    PENP            reduce using rule 36 (move -> F mueve2 .)
    PENU            reduce using rule 36 (move -> F mueve2 .)
    PEND            reduce using rule 36 (move -> F mueve2 .)
    RB              reduce using rule 36 (move -> F mueve2 .)


state 121

    (82) funCall -> LP . func2 RP SC
    (83) func2 -> . exp func3
    (84) func2 -> . empty
    (57) exp -> . term exp2
    (125) empty -> .
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    RP              reduce using rule 125 (empty -> .)
    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    func2                          shift and go to state 163
    term                           shift and go to state 93
    valExp                         shift and go to state 94
    fact                           shift and go to state 101
    exp                            shift and go to state 164
    fact2                          shift and go to state 99
    empty                          shift and go to state 165
    fact4                          shift and go to state 102

state 122

    (76) WID2 -> assigment .

    IF              reduce using rule 76 (WID2 -> assigment .)
    LA              reduce using rule 76 (WID2 -> assigment .)
    L               reduce using rule 76 (WID2 -> assigment .)
    ID              reduce using rule 76 (WID2 -> assigment .)
    RE              reduce using rule 76 (WID2 -> assigment .)
    REC             reduce using rule 76 (WID2 -> assigment .)
    TRI             reduce using rule 76 (WID2 -> assigment .)
    POL             reduce using rule 76 (WID2 -> assigment .)
    LS              reduce using rule 76 (WID2 -> assigment .)
    CIR             reduce using rule 76 (WID2 -> assigment .)
    SQ              reduce using rule 76 (WID2 -> assigment .)
    ARC             reduce using rule 76 (WID2 -> assigment .)
    PENC            reduce using rule 76 (WID2 -> assigment .)
    SETC            reduce using rule 76 (WID2 -> assigment .)
    BACO            reduce using rule 76 (WID2 -> assigment .)
    PENW            reduce using rule 76 (WID2 -> assigment .)
    F               reduce using rule 76 (WID2 -> assigment .)
    B               reduce using rule 76 (WID2 -> assigment .)
    PENP            reduce using rule 76 (WID2 -> assigment .)
    PENU            reduce using rule 76 (WID2 -> assigment .)
    PEND            reduce using rule 76 (WID2 -> assigment .)
    RB              reduce using rule 76 (WID2 -> assigment .)


state 123

    (78) assigment -> EQ . tipeAss
    (79) tipeAss -> . varAss
    (80) tipeAss -> . listAss
    (81) varAss -> . exp SC
    (90) listAss -> . LB lista3 RB SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LB              shift and go to state 166
    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    term                           shift and go to state 93
    valExp                         shift and go to state 94
    listAss                        shift and go to state 167
    tipeAss                        shift and go to state 170
    fact                           shift and go to state 101
    exp                            shift and go to state 169
    fact2                          shift and go to state 99
    fact4                          shift and go to state 102
    varAss                         shift and go to state 168

state 124

    (77) WID2 -> funCall .

    IF              reduce using rule 77 (WID2 -> funCall .)
    LA              reduce using rule 77 (WID2 -> funCall .)
    L               reduce using rule 77 (WID2 -> funCall .)
    ID              reduce using rule 77 (WID2 -> funCall .)
    RE              reduce using rule 77 (WID2 -> funCall .)
    REC             reduce using rule 77 (WID2 -> funCall .)
    TRI             reduce using rule 77 (WID2 -> funCall .)
    POL             reduce using rule 77 (WID2 -> funCall .)
    LS              reduce using rule 77 (WID2 -> funCall .)
    CIR             reduce using rule 77 (WID2 -> funCall .)
    SQ              reduce using rule 77 (WID2 -> funCall .)
    ARC             reduce using rule 77 (WID2 -> funCall .)
    PENC            reduce using rule 77 (WID2 -> funCall .)
    SETC            reduce using rule 77 (WID2 -> funCall .)
    BACO            reduce using rule 77 (WID2 -> funCall .)
    PENW            reduce using rule 77 (WID2 -> funCall .)
    F               reduce using rule 77 (WID2 -> funCall .)
    B               reduce using rule 77 (WID2 -> funCall .)
    PENP            reduce using rule 77 (WID2 -> funCall .)
    PENU            reduce using rule 77 (WID2 -> funCall .)
    PEND            reduce using rule 77 (WID2 -> funCall .)
    RB              reduce using rule 77 (WID2 -> funCall .)


state 125

    (75) WID -> ID WID2 .

    IF              reduce using rule 75 (WID -> ID WID2 .)
    LA              reduce using rule 75 (WID -> ID WID2 .)
    L               reduce using rule 75 (WID -> ID WID2 .)
    ID              reduce using rule 75 (WID -> ID WID2 .)
    RE              reduce using rule 75 (WID -> ID WID2 .)
    REC             reduce using rule 75 (WID -> ID WID2 .)
    TRI             reduce using rule 75 (WID -> ID WID2 .)
    POL             reduce using rule 75 (WID -> ID WID2 .)
    LS              reduce using rule 75 (WID -> ID WID2 .)
    CIR             reduce using rule 75 (WID -> ID WID2 .)
    SQ              reduce using rule 75 (WID -> ID WID2 .)
    ARC             reduce using rule 75 (WID -> ID WID2 .)
    PENC            reduce using rule 75 (WID -> ID WID2 .)
    SETC            reduce using rule 75 (WID -> ID WID2 .)
    BACO            reduce using rule 75 (WID -> ID WID2 .)
    PENW            reduce using rule 75 (WID -> ID WID2 .)
    F               reduce using rule 75 (WID -> ID WID2 .)
    B               reduce using rule 75 (WID -> ID WID2 .)
    PENP            reduce using rule 75 (WID -> ID WID2 .)
    PENU            reduce using rule 75 (WID -> ID WID2 .)
    PEND            reduce using rule 75 (WID -> ID WID2 .)
    RB              reduce using rule 75 (WID -> ID WID2 .)


state 126

    (101) condition -> IF LP . expresion RP block con2
    (50) expresion -> . exp ex2
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    expresion                      shift and go to state 171
    valExp                         shift and go to state 94
    term                           shift and go to state 93
    fact                           shift and go to state 101
    exp                            shift and go to state 172
    fact2                          shift and go to state 99
    fact4                          shift and go to state 102

state 127

    (43) one_par -> CIR LP . exp p_fill RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    term                           shift and go to state 93
    valExp                         shift and go to state 94
    exp                            shift and go to state 173
    fact2                          shift and go to state 99
    fact4                          shift and go to state 102
    fact                           shift and go to state 101

state 128

    (44) one_par -> SQ LP . exp p_fill RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    term                           shift and go to state 93
    valExp                         shift and go to state 94
    exp                            shift and go to state 174
    fact2                          shift and go to state 99
    fact4                          shift and go to state 102
    fact                           shift and go to state 101

state 129

    (30) colors -> SETC colors2 .

    IF              reduce using rule 30 (colors -> SETC colors2 .)
    LA              reduce using rule 30 (colors -> SETC colors2 .)
    L               reduce using rule 30 (colors -> SETC colors2 .)
    ID              reduce using rule 30 (colors -> SETC colors2 .)
    RE              reduce using rule 30 (colors -> SETC colors2 .)
    REC             reduce using rule 30 (colors -> SETC colors2 .)
    TRI             reduce using rule 30 (colors -> SETC colors2 .)
    POL             reduce using rule 30 (colors -> SETC colors2 .)
    LS              reduce using rule 30 (colors -> SETC colors2 .)
    CIR             reduce using rule 30 (colors -> SETC colors2 .)
    SQ              reduce using rule 30 (colors -> SETC colors2 .)
    ARC             reduce using rule 30 (colors -> SETC colors2 .)
    PENC            reduce using rule 30 (colors -> SETC colors2 .)
    SETC            reduce using rule 30 (colors -> SETC colors2 .)
    BACO            reduce using rule 30 (colors -> SETC colors2 .)
    PENW            reduce using rule 30 (colors -> SETC colors2 .)
    F               reduce using rule 30 (colors -> SETC colors2 .)
    B               reduce using rule 30 (colors -> SETC colors2 .)
    PENP            reduce using rule 30 (colors -> SETC colors2 .)
    PENU            reduce using rule 30 (colors -> SETC colors2 .)
    PEND            reduce using rule 30 (colors -> SETC colors2 .)
    RB              reduce using rule 30 (colors -> SETC colors2 .)


state 130

    (49) p_arc -> ARC LP . exp RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    term                           shift and go to state 93
    valExp                         shift and go to state 94
    exp                            shift and go to state 175
    fact2                          shift and go to state 99
    fact                           shift and go to state 101
    fact4                          shift and go to state 102

state 131

    (9) fun3 -> type ID fun4 .

    RP              reduce using rule 9 (fun3 -> type ID fun4 .)


state 132

    (11) fun4 -> C . type ID fun4
    (24) type -> . INT
    (25) type -> . FLOAT

    INT             shift and go to state 20
    FLOAT           shift and go to state 21

    type                           shift and go to state 176

state 133

    (12) fun4 -> empty .

    RP              reduce using rule 12 (fun4 -> empty .)


state 134

    (87) list -> L type ID prelistAss .

    C               reduce using rule 87 (list -> L type ID prelistAss .)
    RP              reduce using rule 87 (list -> L type ID prelistAss .)
    L               reduce using rule 87 (list -> L type ID prelistAss .)
    FUN             reduce using rule 87 (list -> L type ID prelistAss .)
    MAIN            reduce using rule 87 (list -> L type ID prelistAss .)
    LB              reduce using rule 87 (list -> L type ID prelistAss .)
    IF              reduce using rule 87 (list -> L type ID prelistAss .)
    LA              reduce using rule 87 (list -> L type ID prelistAss .)
    ID              reduce using rule 87 (list -> L type ID prelistAss .)
    RE              reduce using rule 87 (list -> L type ID prelistAss .)
    REC             reduce using rule 87 (list -> L type ID prelistAss .)
    TRI             reduce using rule 87 (list -> L type ID prelistAss .)
    POL             reduce using rule 87 (list -> L type ID prelistAss .)
    LS              reduce using rule 87 (list -> L type ID prelistAss .)
    CIR             reduce using rule 87 (list -> L type ID prelistAss .)
    SQ              reduce using rule 87 (list -> L type ID prelistAss .)
    ARC             reduce using rule 87 (list -> L type ID prelistAss .)
    PENC            reduce using rule 87 (list -> L type ID prelistAss .)
    SETC            reduce using rule 87 (list -> L type ID prelistAss .)
    BACO            reduce using rule 87 (list -> L type ID prelistAss .)
    PENW            reduce using rule 87 (list -> L type ID prelistAss .)
    F               reduce using rule 87 (list -> L type ID prelistAss .)
    B               reduce using rule 87 (list -> L type ID prelistAss .)
    PENP            reduce using rule 87 (list -> L type ID prelistAss .)
    PENU            reduce using rule 87 (list -> L type ID prelistAss .)
    PEND            reduce using rule 87 (list -> L type ID prelistAss .)
    RB              reduce using rule 87 (list -> L type ID prelistAss .)


state 135

    (89) prelistAss -> SC .

    L               reduce using rule 89 (prelistAss -> SC .)
    FUN             reduce using rule 89 (prelistAss -> SC .)
    MAIN            reduce using rule 89 (prelistAss -> SC .)
    LB              reduce using rule 89 (prelistAss -> SC .)
    IF              reduce using rule 89 (prelistAss -> SC .)
    LA              reduce using rule 89 (prelistAss -> SC .)
    ID              reduce using rule 89 (prelistAss -> SC .)
    RE              reduce using rule 89 (prelistAss -> SC .)
    REC             reduce using rule 89 (prelistAss -> SC .)
    TRI             reduce using rule 89 (prelistAss -> SC .)
    POL             reduce using rule 89 (prelistAss -> SC .)
    LS              reduce using rule 89 (prelistAss -> SC .)
    CIR             reduce using rule 89 (prelistAss -> SC .)
    SQ              reduce using rule 89 (prelistAss -> SC .)
    ARC             reduce using rule 89 (prelistAss -> SC .)
    PENC            reduce using rule 89 (prelistAss -> SC .)
    SETC            reduce using rule 89 (prelistAss -> SC .)
    BACO            reduce using rule 89 (prelistAss -> SC .)
    PENW            reduce using rule 89 (prelistAss -> SC .)
    F               reduce using rule 89 (prelistAss -> SC .)
    B               reduce using rule 89 (prelistAss -> SC .)
    PENP            reduce using rule 89 (prelistAss -> SC .)
    PENU            reduce using rule 89 (prelistAss -> SC .)
    PEND            reduce using rule 89 (prelistAss -> SC .)
    RB              reduce using rule 89 (prelistAss -> SC .)
    C               reduce using rule 89 (prelistAss -> SC .)
    RP              reduce using rule 89 (prelistAss -> SC .)


state 136

    (88) prelistAss -> EQ . listAss
    (90) listAss -> . LB lista3 RB SC

    LB              shift and go to state 166

    listAss                        shift and go to state 177

state 137

    (18) var33 -> C ID . var4 var33
    (20) var4 -> . EQ exp
    (21) var4 -> . empty
    (125) empty -> .

    EQ              shift and go to state 43
    C               reduce using rule 125 (empty -> .)
    SC              reduce using rule 125 (empty -> .)

    var4                           shift and go to state 178
    empty                          shift and go to state 44

state 138

    (61) exp3 -> SUB .

    LP              reduce using rule 61 (exp3 -> SUB .)
    ID              reduce using rule 61 (exp3 -> SUB .)
    VALI            reduce using rule 61 (exp3 -> SUB .)
    VALF            reduce using rule 61 (exp3 -> SUB .)


state 139

    (58) exp2 -> exp3 . exp
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    term                           shift and go to state 93
    valExp                         shift and go to state 94
    exp                            shift and go to state 179
    fact2                          shift and go to state 99
    fact                           shift and go to state 101
    fact4                          shift and go to state 102

state 140

    (57) exp -> term exp2 .

    C               reduce using rule 57 (exp -> term exp2 .)
    RP              reduce using rule 57 (exp -> term exp2 .)
    LT              reduce using rule 57 (exp -> term exp2 .)
    MT              reduce using rule 57 (exp -> term exp2 .)
    D               reduce using rule 57 (exp -> term exp2 .)
    SEQ             reduce using rule 57 (exp -> term exp2 .)
    SC              reduce using rule 57 (exp -> term exp2 .)
    LB              reduce using rule 57 (exp -> term exp2 .)
    ADD             reduce using rule 57 (exp -> term exp2 .)


state 141

    (60) exp3 -> ADD .

    LP              reduce using rule 60 (exp3 -> ADD .)
    ID              reduce using rule 60 (exp3 -> ADD .)
    VALI            reduce using rule 60 (exp3 -> ADD .)
    VALF            reduce using rule 60 (exp3 -> ADD .)


state 142

    (59) exp2 -> empty .

    C               reduce using rule 59 (exp2 -> empty .)
    SC              reduce using rule 59 (exp2 -> empty .)
    LB              reduce using rule 59 (exp2 -> empty .)
    RP              reduce using rule 59 (exp2 -> empty .)
    ADD             reduce using rule 59 (exp2 -> empty .)
    LT              reduce using rule 59 (exp2 -> empty .)
    MT              reduce using rule 59 (exp2 -> empty .)
    D               reduce using rule 59 (exp2 -> empty .)
    SEQ             reduce using rule 59 (exp2 -> empty .)


state 143

    (67) fact -> fact2 exp . RP

    RP              shift and go to state 180


state 144

    (63) term2 -> term3 . term
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    term                           shift and go to state 181
    valExp                         shift and go to state 94
    fact2                          shift and go to state 99
    fact                           shift and go to state 101
    fact4                          shift and go to state 102

state 145

    (62) term -> fact term2 .

    ADD             reduce using rule 62 (term -> fact term2 .)
    SUB             reduce using rule 62 (term -> fact term2 .)
    RP              reduce using rule 62 (term -> fact term2 .)
    C               reduce using rule 62 (term -> fact term2 .)
    SC              reduce using rule 62 (term -> fact term2 .)
    LB              reduce using rule 62 (term -> fact term2 .)
    LT              reduce using rule 62 (term -> fact term2 .)
    MT              reduce using rule 62 (term -> fact term2 .)
    D               reduce using rule 62 (term -> fact term2 .)
    SEQ             reduce using rule 62 (term -> fact term2 .)


state 146

    (65) term3 -> M .

    LP              reduce using rule 65 (term3 -> M .)
    ID              reduce using rule 65 (term3 -> M .)
    VALI            reduce using rule 65 (term3 -> M .)
    VALF            reduce using rule 65 (term3 -> M .)


state 147

    (66) term3 -> DIV .

    LP              reduce using rule 66 (term3 -> DIV .)
    ID              reduce using rule 66 (term3 -> DIV .)
    VALI            reduce using rule 66 (term3 -> DIV .)
    VALF            reduce using rule 66 (term3 -> DIV .)


state 148

    (64) term2 -> empty .

    ADD             reduce using rule 64 (term2 -> empty .)
    SUB             reduce using rule 64 (term2 -> empty .)
    C               reduce using rule 64 (term2 -> empty .)
    SC              reduce using rule 64 (term2 -> empty .)
    LB              reduce using rule 64 (term2 -> empty .)
    RP              reduce using rule 64 (term2 -> empty .)
    LT              reduce using rule 64 (term2 -> empty .)
    MT              reduce using rule 64 (term2 -> empty .)
    D               reduce using rule 64 (term2 -> empty .)
    SEQ             reduce using rule 64 (term2 -> empty .)


state 149

    (28) position -> PENP LP exp . C exp RP SC

    C               shift and go to state 182


state 150

    (39) rect -> REC LP exp . C exp p_fill RP SC

    C               shift and go to state 183


state 151

    (33) p_width -> PENW LP exp . RP SC

    RP              shift and go to state 184


state 152

    (99) stExp -> STR .

    ADD             reduce using rule 99 (stExp -> STR .)
    RP              reduce using rule 99 (stExp -> STR .)


state 153

    (96) lab -> LA LP stExp . lab2 RP SC
    (97) lab2 -> . ADD stExp lab2
    (98) lab2 -> . empty
    (125) empty -> .

    ADD             shift and go to state 186
    RP              reduce using rule 125 (empty -> .)

    lab2                           shift and go to state 185
    empty                          shift and go to state 187

state 154

    (100) stExp -> exp .

    ADD             reduce using rule 100 (stExp -> exp .)
    RP              reduce using rule 100 (stExp -> exp .)


state 155

    (45) poly -> POL LP idList . p_fill RP SC
    (40) p_fill -> . C FILL
    (41) p_fill -> . empty
    (125) empty -> .

    C               shift and go to state 188
    RP              reduce using rule 125 (empty -> .)

    empty                          shift and go to state 190
    p_fill                         shift and go to state 189

state 156

    (47) idList -> list .

    RP              reduce using rule 47 (idList -> list .)
    C               reduce using rule 47 (idList -> list .)


state 157

    (48) idList -> ID .

    RP              reduce using rule 48 (idList -> ID .)
    C               reduce using rule 48 (idList -> ID .)


state 158

    (74) rep -> RE exp block .

    IF              reduce using rule 74 (rep -> RE exp block .)
    LA              reduce using rule 74 (rep -> RE exp block .)
    L               reduce using rule 74 (rep -> RE exp block .)
    ID              reduce using rule 74 (rep -> RE exp block .)
    RE              reduce using rule 74 (rep -> RE exp block .)
    REC             reduce using rule 74 (rep -> RE exp block .)
    TRI             reduce using rule 74 (rep -> RE exp block .)
    POL             reduce using rule 74 (rep -> RE exp block .)
    LS              reduce using rule 74 (rep -> RE exp block .)
    CIR             reduce using rule 74 (rep -> RE exp block .)
    SQ              reduce using rule 74 (rep -> RE exp block .)
    ARC             reduce using rule 74 (rep -> RE exp block .)
    PENC            reduce using rule 74 (rep -> RE exp block .)
    SETC            reduce using rule 74 (rep -> RE exp block .)
    BACO            reduce using rule 74 (rep -> RE exp block .)
    PENW            reduce using rule 74 (rep -> RE exp block .)
    F               reduce using rule 74 (rep -> RE exp block .)
    B               reduce using rule 74 (rep -> RE exp block .)
    PENP            reduce using rule 74 (rep -> RE exp block .)
    PENU            reduce using rule 74 (rep -> RE exp block .)
    PEND            reduce using rule 74 (rep -> RE exp block .)
    RB              reduce using rule 74 (rep -> RE exp block .)


state 159

    (32) colors2 -> LP exp . C exp C exp RP SC

    C               shift and go to state 191


state 160

    (46) lstrip -> LS LP idList . RP SC

    RP              shift and go to state 192


state 161

    (42) tria -> TRI LP exp . C exp C exp p_fill RP SC

    C               shift and go to state 193


state 162

    (38) mueve2 -> LP exp . C A exp RP SC

    C               shift and go to state 194


state 163

    (82) funCall -> LP func2 . RP SC

    RP              shift and go to state 195


state 164

    (83) func2 -> exp . func3
    (85) func3 -> . C exp func3
    (86) func3 -> . empty
    (125) empty -> .

    C               shift and go to state 197
    RP              reduce using rule 125 (empty -> .)

    func3                          shift and go to state 196
    empty                          shift and go to state 198

state 165

    (84) func2 -> empty .

    RP              reduce using rule 84 (func2 -> empty .)


state 166

    (90) listAss -> LB . lista3 RB SC
    (93) lista3 -> . lista2 li4
    (91) lista2 -> . val
    (92) lista2 -> . ID
    (26) val -> . VALI
    (27) val -> . VALF

    ID              shift and go to state 202
    VALI            shift and go to state 199
    VALF            shift and go to state 201

    val                            shift and go to state 200
    lista3                         shift and go to state 203
    lista2                         shift and go to state 204

state 167

    (80) tipeAss -> listAss .

    IF              reduce using rule 80 (tipeAss -> listAss .)
    LA              reduce using rule 80 (tipeAss -> listAss .)
    L               reduce using rule 80 (tipeAss -> listAss .)
    ID              reduce using rule 80 (tipeAss -> listAss .)
    RE              reduce using rule 80 (tipeAss -> listAss .)
    REC             reduce using rule 80 (tipeAss -> listAss .)
    TRI             reduce using rule 80 (tipeAss -> listAss .)
    POL             reduce using rule 80 (tipeAss -> listAss .)
    LS              reduce using rule 80 (tipeAss -> listAss .)
    CIR             reduce using rule 80 (tipeAss -> listAss .)
    SQ              reduce using rule 80 (tipeAss -> listAss .)
    ARC             reduce using rule 80 (tipeAss -> listAss .)
    PENC            reduce using rule 80 (tipeAss -> listAss .)
    SETC            reduce using rule 80 (tipeAss -> listAss .)
    BACO            reduce using rule 80 (tipeAss -> listAss .)
    PENW            reduce using rule 80 (tipeAss -> listAss .)
    F               reduce using rule 80 (tipeAss -> listAss .)
    B               reduce using rule 80 (tipeAss -> listAss .)
    PENP            reduce using rule 80 (tipeAss -> listAss .)
    PENU            reduce using rule 80 (tipeAss -> listAss .)
    PEND            reduce using rule 80 (tipeAss -> listAss .)
    RB              reduce using rule 80 (tipeAss -> listAss .)


state 168

    (79) tipeAss -> varAss .

    IF              reduce using rule 79 (tipeAss -> varAss .)
    LA              reduce using rule 79 (tipeAss -> varAss .)
    L               reduce using rule 79 (tipeAss -> varAss .)
    ID              reduce using rule 79 (tipeAss -> varAss .)
    RE              reduce using rule 79 (tipeAss -> varAss .)
    REC             reduce using rule 79 (tipeAss -> varAss .)
    TRI             reduce using rule 79 (tipeAss -> varAss .)
    POL             reduce using rule 79 (tipeAss -> varAss .)
    LS              reduce using rule 79 (tipeAss -> varAss .)
    CIR             reduce using rule 79 (tipeAss -> varAss .)
    SQ              reduce using rule 79 (tipeAss -> varAss .)
    ARC             reduce using rule 79 (tipeAss -> varAss .)
    PENC            reduce using rule 79 (tipeAss -> varAss .)
    SETC            reduce using rule 79 (tipeAss -> varAss .)
    BACO            reduce using rule 79 (tipeAss -> varAss .)
    PENW            reduce using rule 79 (tipeAss -> varAss .)
    F               reduce using rule 79 (tipeAss -> varAss .)
    B               reduce using rule 79 (tipeAss -> varAss .)
    PENP            reduce using rule 79 (tipeAss -> varAss .)
    PENU            reduce using rule 79 (tipeAss -> varAss .)
    PEND            reduce using rule 79 (tipeAss -> varAss .)
    RB              reduce using rule 79 (tipeAss -> varAss .)


state 169

    (81) varAss -> exp . SC

    SC              shift and go to state 205


state 170

    (78) assigment -> EQ tipeAss .

    IF              reduce using rule 78 (assigment -> EQ tipeAss .)
    LA              reduce using rule 78 (assigment -> EQ tipeAss .)
    L               reduce using rule 78 (assigment -> EQ tipeAss .)
    ID              reduce using rule 78 (assigment -> EQ tipeAss .)
    RE              reduce using rule 78 (assigment -> EQ tipeAss .)
    REC             reduce using rule 78 (assigment -> EQ tipeAss .)
    TRI             reduce using rule 78 (assigment -> EQ tipeAss .)
    POL             reduce using rule 78 (assigment -> EQ tipeAss .)
    LS              reduce using rule 78 (assigment -> EQ tipeAss .)
    CIR             reduce using rule 78 (assigment -> EQ tipeAss .)
    SQ              reduce using rule 78 (assigment -> EQ tipeAss .)
    ARC             reduce using rule 78 (assigment -> EQ tipeAss .)
    PENC            reduce using rule 78 (assigment -> EQ tipeAss .)
    SETC            reduce using rule 78 (assigment -> EQ tipeAss .)
    BACO            reduce using rule 78 (assigment -> EQ tipeAss .)
    PENW            reduce using rule 78 (assigment -> EQ tipeAss .)
    F               reduce using rule 78 (assigment -> EQ tipeAss .)
    B               reduce using rule 78 (assigment -> EQ tipeAss .)
    PENP            reduce using rule 78 (assigment -> EQ tipeAss .)
    PENU            reduce using rule 78 (assigment -> EQ tipeAss .)
    PEND            reduce using rule 78 (assigment -> EQ tipeAss .)
    RB              reduce using rule 78 (assigment -> EQ tipeAss .)


state 171

    (101) condition -> IF LP expresion . RP block con2

    RP              shift and go to state 206


state 172

    (50) expresion -> exp . ex2
    (51) ex2 -> . ex3 exp
    (52) ex2 -> . empty
    (53) ex3 -> . LT
    (54) ex3 -> . MT
    (55) ex3 -> . D
    (56) ex3 -> . SEQ
    (125) empty -> .

    LT              shift and go to state 210
    MT              shift and go to state 209
    D               shift and go to state 207
    SEQ             shift and go to state 208
    RP              reduce using rule 125 (empty -> .)

    empty                          shift and go to state 213
    ex2                            shift and go to state 211
    ex3                            shift and go to state 212

state 173

    (43) one_par -> CIR LP exp . p_fill RP SC
    (40) p_fill -> . C FILL
    (41) p_fill -> . empty
    (125) empty -> .

    C               shift and go to state 188
    RP              reduce using rule 125 (empty -> .)

    empty                          shift and go to state 190
    p_fill                         shift and go to state 214

state 174

    (44) one_par -> SQ LP exp . p_fill RP SC
    (40) p_fill -> . C FILL
    (41) p_fill -> . empty
    (125) empty -> .

    C               shift and go to state 188
    RP              reduce using rule 125 (empty -> .)

    empty                          shift and go to state 190
    p_fill                         shift and go to state 215

state 175

    (49) p_arc -> ARC LP exp . RP SC

    RP              shift and go to state 216


state 176

    (11) fun4 -> C type . ID fun4

    ID              shift and go to state 217


state 177

    (88) prelistAss -> EQ listAss .

    L               reduce using rule 88 (prelistAss -> EQ listAss .)
    FUN             reduce using rule 88 (prelistAss -> EQ listAss .)
    MAIN            reduce using rule 88 (prelistAss -> EQ listAss .)
    LB              reduce using rule 88 (prelistAss -> EQ listAss .)
    IF              reduce using rule 88 (prelistAss -> EQ listAss .)
    LA              reduce using rule 88 (prelistAss -> EQ listAss .)
    ID              reduce using rule 88 (prelistAss -> EQ listAss .)
    RE              reduce using rule 88 (prelistAss -> EQ listAss .)
    REC             reduce using rule 88 (prelistAss -> EQ listAss .)
    TRI             reduce using rule 88 (prelistAss -> EQ listAss .)
    POL             reduce using rule 88 (prelistAss -> EQ listAss .)
    LS              reduce using rule 88 (prelistAss -> EQ listAss .)
    CIR             reduce using rule 88 (prelistAss -> EQ listAss .)
    SQ              reduce using rule 88 (prelistAss -> EQ listAss .)
    ARC             reduce using rule 88 (prelistAss -> EQ listAss .)
    PENC            reduce using rule 88 (prelistAss -> EQ listAss .)
    SETC            reduce using rule 88 (prelistAss -> EQ listAss .)
    BACO            reduce using rule 88 (prelistAss -> EQ listAss .)
    PENW            reduce using rule 88 (prelistAss -> EQ listAss .)
    F               reduce using rule 88 (prelistAss -> EQ listAss .)
    B               reduce using rule 88 (prelistAss -> EQ listAss .)
    PENP            reduce using rule 88 (prelistAss -> EQ listAss .)
    PENU            reduce using rule 88 (prelistAss -> EQ listAss .)
    PEND            reduce using rule 88 (prelistAss -> EQ listAss .)
    RB              reduce using rule 88 (prelistAss -> EQ listAss .)
    C               reduce using rule 88 (prelistAss -> EQ listAss .)
    RP              reduce using rule 88 (prelistAss -> EQ listAss .)


state 178

    (18) var33 -> C ID var4 . var33
    (18) var33 -> . C ID var4 var33
    (19) var33 -> . empty
    (125) empty -> .

    C               shift and go to state 91
    SC              reduce using rule 125 (empty -> .)

    var33                          shift and go to state 218
    empty                          shift and go to state 92

state 179

    (58) exp2 -> exp3 exp .

    C               reduce using rule 58 (exp2 -> exp3 exp .)
    SC              reduce using rule 58 (exp2 -> exp3 exp .)
    LB              reduce using rule 58 (exp2 -> exp3 exp .)
    RP              reduce using rule 58 (exp2 -> exp3 exp .)
    ADD             reduce using rule 58 (exp2 -> exp3 exp .)
    LT              reduce using rule 58 (exp2 -> exp3 exp .)
    MT              reduce using rule 58 (exp2 -> exp3 exp .)
    D               reduce using rule 58 (exp2 -> exp3 exp .)
    SEQ             reduce using rule 58 (exp2 -> exp3 exp .)


state 180

    (67) fact -> fact2 exp RP .

    M               reduce using rule 67 (fact -> fact2 exp RP .)
    DIV             reduce using rule 67 (fact -> fact2 exp RP .)
    ADD             reduce using rule 67 (fact -> fact2 exp RP .)
    SUB             reduce using rule 67 (fact -> fact2 exp RP .)
    C               reduce using rule 67 (fact -> fact2 exp RP .)
    RP              reduce using rule 67 (fact -> fact2 exp RP .)
    SC              reduce using rule 67 (fact -> fact2 exp RP .)
    LB              reduce using rule 67 (fact -> fact2 exp RP .)
    LT              reduce using rule 67 (fact -> fact2 exp RP .)
    MT              reduce using rule 67 (fact -> fact2 exp RP .)
    D               reduce using rule 67 (fact -> fact2 exp RP .)
    SEQ             reduce using rule 67 (fact -> fact2 exp RP .)


state 181

    (63) term2 -> term3 term .

    ADD             reduce using rule 63 (term2 -> term3 term .)
    SUB             reduce using rule 63 (term2 -> term3 term .)
    C               reduce using rule 63 (term2 -> term3 term .)
    SC              reduce using rule 63 (term2 -> term3 term .)
    LB              reduce using rule 63 (term2 -> term3 term .)
    RP              reduce using rule 63 (term2 -> term3 term .)
    LT              reduce using rule 63 (term2 -> term3 term .)
    MT              reduce using rule 63 (term2 -> term3 term .)
    D               reduce using rule 63 (term2 -> term3 term .)
    SEQ             reduce using rule 63 (term2 -> term3 term .)


state 182

    (28) position -> PENP LP exp C . exp RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    term                           shift and go to state 93
    valExp                         shift and go to state 94
    exp                            shift and go to state 219
    fact2                          shift and go to state 99
    fact                           shift and go to state 101
    fact4                          shift and go to state 102

state 183

    (39) rect -> REC LP exp C . exp p_fill RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    term                           shift and go to state 93
    valExp                         shift and go to state 94
    exp                            shift and go to state 220
    fact2                          shift and go to state 99
    fact4                          shift and go to state 102
    fact                           shift and go to state 101

state 184

    (33) p_width -> PENW LP exp RP . SC

    SC              shift and go to state 221


state 185

    (96) lab -> LA LP stExp lab2 . RP SC

    RP              shift and go to state 222


state 186

    (97) lab2 -> ADD . stExp lab2
    (99) stExp -> . STR
    (100) stExp -> . exp
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    STR             shift and go to state 152
    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    term                           shift and go to state 93
    valExp                         shift and go to state 94
    stExp                          shift and go to state 223
    exp                            shift and go to state 154
    fact2                          shift and go to state 99
    fact                           shift and go to state 101
    fact4                          shift and go to state 102

state 187

    (98) lab2 -> empty .

    RP              reduce using rule 98 (lab2 -> empty .)


state 188

    (40) p_fill -> C . FILL

    FILL            shift and go to state 224


state 189

    (45) poly -> POL LP idList p_fill . RP SC

    RP              shift and go to state 225


state 190

    (41) p_fill -> empty .

    RP              reduce using rule 41 (p_fill -> empty .)


state 191

    (32) colors2 -> LP exp C . exp C exp RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    term                           shift and go to state 93
    valExp                         shift and go to state 94
    exp                            shift and go to state 226
    fact2                          shift and go to state 99
    fact                           shift and go to state 101
    fact4                          shift and go to state 102

state 192

    (46) lstrip -> LS LP idList RP . SC

    SC              shift and go to state 227


state 193

    (42) tria -> TRI LP exp C . exp C exp p_fill RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    term                           shift and go to state 93
    valExp                         shift and go to state 94
    exp                            shift and go to state 228
    fact2                          shift and go to state 99
    fact4                          shift and go to state 102
    fact                           shift and go to state 101

state 194

    (38) mueve2 -> LP exp C . A exp RP SC

    A               shift and go to state 229


state 195

    (82) funCall -> LP func2 RP . SC

    SC              shift and go to state 230


state 196

    (83) func2 -> exp func3 .

    RP              reduce using rule 83 (func2 -> exp func3 .)


state 197

    (85) func3 -> C . exp func3
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    term                           shift and go to state 93
    valExp                         shift and go to state 94
    exp                            shift and go to state 231
    fact2                          shift and go to state 99
    fact                           shift and go to state 101
    fact4                          shift and go to state 102

state 198

    (86) func3 -> empty .

    RP              reduce using rule 86 (func3 -> empty .)


state 199

    (26) val -> VALI .

    C               reduce using rule 26 (val -> VALI .)
    RB              reduce using rule 26 (val -> VALI .)


state 200

    (91) lista2 -> val .

    C               reduce using rule 91 (lista2 -> val .)
    RB              reduce using rule 91 (lista2 -> val .)


state 201

    (27) val -> VALF .

    C               reduce using rule 27 (val -> VALF .)
    RB              reduce using rule 27 (val -> VALF .)


state 202

    (92) lista2 -> ID .

    C               reduce using rule 92 (lista2 -> ID .)
    RB              reduce using rule 92 (lista2 -> ID .)


state 203

    (90) listAss -> LB lista3 . RB SC

    RB              shift and go to state 232


state 204

    (93) lista3 -> lista2 . li4
    (94) li4 -> . C lista2 li4
    (95) li4 -> . empty
    (125) empty -> .

    C               shift and go to state 234
    RB              reduce using rule 125 (empty -> .)

    li4                            shift and go to state 233
    empty                          shift and go to state 235

state 205

    (81) varAss -> exp SC .

    IF              reduce using rule 81 (varAss -> exp SC .)
    LA              reduce using rule 81 (varAss -> exp SC .)
    L               reduce using rule 81 (varAss -> exp SC .)
    ID              reduce using rule 81 (varAss -> exp SC .)
    RE              reduce using rule 81 (varAss -> exp SC .)
    REC             reduce using rule 81 (varAss -> exp SC .)
    TRI             reduce using rule 81 (varAss -> exp SC .)
    POL             reduce using rule 81 (varAss -> exp SC .)
    LS              reduce using rule 81 (varAss -> exp SC .)
    CIR             reduce using rule 81 (varAss -> exp SC .)
    SQ              reduce using rule 81 (varAss -> exp SC .)
    ARC             reduce using rule 81 (varAss -> exp SC .)
    PENC            reduce using rule 81 (varAss -> exp SC .)
    SETC            reduce using rule 81 (varAss -> exp SC .)
    BACO            reduce using rule 81 (varAss -> exp SC .)
    PENW            reduce using rule 81 (varAss -> exp SC .)
    F               reduce using rule 81 (varAss -> exp SC .)
    B               reduce using rule 81 (varAss -> exp SC .)
    PENP            reduce using rule 81 (varAss -> exp SC .)
    PENU            reduce using rule 81 (varAss -> exp SC .)
    PEND            reduce using rule 81 (varAss -> exp SC .)
    RB              reduce using rule 81 (varAss -> exp SC .)


state 206

    (101) condition -> IF LP expresion RP . block con2
    (104) block -> . LB block3 RB

    LB              shift and go to state 33

    block                          shift and go to state 236

state 207

    (55) ex3 -> D .

    LP              reduce using rule 55 (ex3 -> D .)
    ID              reduce using rule 55 (ex3 -> D .)
    VALI            reduce using rule 55 (ex3 -> D .)
    VALF            reduce using rule 55 (ex3 -> D .)


state 208

    (56) ex3 -> SEQ .

    LP              reduce using rule 56 (ex3 -> SEQ .)
    ID              reduce using rule 56 (ex3 -> SEQ .)
    VALI            reduce using rule 56 (ex3 -> SEQ .)
    VALF            reduce using rule 56 (ex3 -> SEQ .)


state 209

    (54) ex3 -> MT .

    LP              reduce using rule 54 (ex3 -> MT .)
    ID              reduce using rule 54 (ex3 -> MT .)
    VALI            reduce using rule 54 (ex3 -> MT .)
    VALF            reduce using rule 54 (ex3 -> MT .)


state 210

    (53) ex3 -> LT .

    LP              reduce using rule 53 (ex3 -> LT .)
    ID              reduce using rule 53 (ex3 -> LT .)
    VALI            reduce using rule 53 (ex3 -> LT .)
    VALF            reduce using rule 53 (ex3 -> LT .)


state 211

    (50) expresion -> exp ex2 .

    RP              reduce using rule 50 (expresion -> exp ex2 .)


state 212

    (51) ex2 -> ex3 . exp
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    term                           shift and go to state 93
    valExp                         shift and go to state 94
    exp                            shift and go to state 237
    fact2                          shift and go to state 99
    fact                           shift and go to state 101
    fact4                          shift and go to state 102

state 213

    (52) ex2 -> empty .

    RP              reduce using rule 52 (ex2 -> empty .)


state 214

    (43) one_par -> CIR LP exp p_fill . RP SC

    RP              shift and go to state 238


state 215

    (44) one_par -> SQ LP exp p_fill . RP SC

    RP              shift and go to state 239


state 216

    (49) p_arc -> ARC LP exp RP . SC

    SC              shift and go to state 240


state 217

    (11) fun4 -> C type ID . fun4
    (11) fun4 -> . C type ID fun4
    (12) fun4 -> . empty
    (125) empty -> .

    C               shift and go to state 132
    RP              reduce using rule 125 (empty -> .)

    fun4                           shift and go to state 241
    empty                          shift and go to state 133

state 218

    (18) var33 -> C ID var4 var33 .

    SC              reduce using rule 18 (var33 -> C ID var4 var33 .)


state 219

    (28) position -> PENP LP exp C exp . RP SC

    RP              shift and go to state 242


state 220

    (39) rect -> REC LP exp C exp . p_fill RP SC
    (40) p_fill -> . C FILL
    (41) p_fill -> . empty
    (125) empty -> .

    C               shift and go to state 188
    RP              reduce using rule 125 (empty -> .)

    empty                          shift and go to state 190
    p_fill                         shift and go to state 243

state 221

    (33) p_width -> PENW LP exp RP SC .

    IF              reduce using rule 33 (p_width -> PENW LP exp RP SC .)
    LA              reduce using rule 33 (p_width -> PENW LP exp RP SC .)
    L               reduce using rule 33 (p_width -> PENW LP exp RP SC .)
    ID              reduce using rule 33 (p_width -> PENW LP exp RP SC .)
    RE              reduce using rule 33 (p_width -> PENW LP exp RP SC .)
    REC             reduce using rule 33 (p_width -> PENW LP exp RP SC .)
    TRI             reduce using rule 33 (p_width -> PENW LP exp RP SC .)
    POL             reduce using rule 33 (p_width -> PENW LP exp RP SC .)
    LS              reduce using rule 33 (p_width -> PENW LP exp RP SC .)
    CIR             reduce using rule 33 (p_width -> PENW LP exp RP SC .)
    SQ              reduce using rule 33 (p_width -> PENW LP exp RP SC .)
    ARC             reduce using rule 33 (p_width -> PENW LP exp RP SC .)
    PENC            reduce using rule 33 (p_width -> PENW LP exp RP SC .)
    SETC            reduce using rule 33 (p_width -> PENW LP exp RP SC .)
    BACO            reduce using rule 33 (p_width -> PENW LP exp RP SC .)
    PENW            reduce using rule 33 (p_width -> PENW LP exp RP SC .)
    F               reduce using rule 33 (p_width -> PENW LP exp RP SC .)
    B               reduce using rule 33 (p_width -> PENW LP exp RP SC .)
    PENP            reduce using rule 33 (p_width -> PENW LP exp RP SC .)
    PENU            reduce using rule 33 (p_width -> PENW LP exp RP SC .)
    PEND            reduce using rule 33 (p_width -> PENW LP exp RP SC .)
    RB              reduce using rule 33 (p_width -> PENW LP exp RP SC .)


state 222

    (96) lab -> LA LP stExp lab2 RP . SC

    SC              shift and go to state 244


state 223

    (97) lab2 -> ADD stExp . lab2
    (97) lab2 -> . ADD stExp lab2
    (98) lab2 -> . empty
    (125) empty -> .

    ADD             shift and go to state 186
    RP              reduce using rule 125 (empty -> .)

    lab2                           shift and go to state 245
    empty                          shift and go to state 187

state 224

    (40) p_fill -> C FILL .

    RP              reduce using rule 40 (p_fill -> C FILL .)


state 225

    (45) poly -> POL LP idList p_fill RP . SC

    SC              shift and go to state 246


state 226

    (32) colors2 -> LP exp C exp . C exp RP SC

    C               shift and go to state 247


state 227

    (46) lstrip -> LS LP idList RP SC .

    IF              reduce using rule 46 (lstrip -> LS LP idList RP SC .)
    LA              reduce using rule 46 (lstrip -> LS LP idList RP SC .)
    L               reduce using rule 46 (lstrip -> LS LP idList RP SC .)
    ID              reduce using rule 46 (lstrip -> LS LP idList RP SC .)
    RE              reduce using rule 46 (lstrip -> LS LP idList RP SC .)
    REC             reduce using rule 46 (lstrip -> LS LP idList RP SC .)
    TRI             reduce using rule 46 (lstrip -> LS LP idList RP SC .)
    POL             reduce using rule 46 (lstrip -> LS LP idList RP SC .)
    LS              reduce using rule 46 (lstrip -> LS LP idList RP SC .)
    CIR             reduce using rule 46 (lstrip -> LS LP idList RP SC .)
    SQ              reduce using rule 46 (lstrip -> LS LP idList RP SC .)
    ARC             reduce using rule 46 (lstrip -> LS LP idList RP SC .)
    PENC            reduce using rule 46 (lstrip -> LS LP idList RP SC .)
    SETC            reduce using rule 46 (lstrip -> LS LP idList RP SC .)
    BACO            reduce using rule 46 (lstrip -> LS LP idList RP SC .)
    PENW            reduce using rule 46 (lstrip -> LS LP idList RP SC .)
    F               reduce using rule 46 (lstrip -> LS LP idList RP SC .)
    B               reduce using rule 46 (lstrip -> LS LP idList RP SC .)
    PENP            reduce using rule 46 (lstrip -> LS LP idList RP SC .)
    PENU            reduce using rule 46 (lstrip -> LS LP idList RP SC .)
    PEND            reduce using rule 46 (lstrip -> LS LP idList RP SC .)
    RB              reduce using rule 46 (lstrip -> LS LP idList RP SC .)


state 228

    (42) tria -> TRI LP exp C exp . C exp p_fill RP SC

    C               shift and go to state 248


state 229

    (38) mueve2 -> LP exp C A . exp RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    term                           shift and go to state 93
    valExp                         shift and go to state 94
    exp                            shift and go to state 249
    fact2                          shift and go to state 99
    fact                           shift and go to state 101
    fact4                          shift and go to state 102

state 230

    (82) funCall -> LP func2 RP SC .

    IF              reduce using rule 82 (funCall -> LP func2 RP SC .)
    LA              reduce using rule 82 (funCall -> LP func2 RP SC .)
    L               reduce using rule 82 (funCall -> LP func2 RP SC .)
    ID              reduce using rule 82 (funCall -> LP func2 RP SC .)
    RE              reduce using rule 82 (funCall -> LP func2 RP SC .)
    REC             reduce using rule 82 (funCall -> LP func2 RP SC .)
    TRI             reduce using rule 82 (funCall -> LP func2 RP SC .)
    POL             reduce using rule 82 (funCall -> LP func2 RP SC .)
    LS              reduce using rule 82 (funCall -> LP func2 RP SC .)
    CIR             reduce using rule 82 (funCall -> LP func2 RP SC .)
    SQ              reduce using rule 82 (funCall -> LP func2 RP SC .)
    ARC             reduce using rule 82 (funCall -> LP func2 RP SC .)
    PENC            reduce using rule 82 (funCall -> LP func2 RP SC .)
    SETC            reduce using rule 82 (funCall -> LP func2 RP SC .)
    BACO            reduce using rule 82 (funCall -> LP func2 RP SC .)
    PENW            reduce using rule 82 (funCall -> LP func2 RP SC .)
    F               reduce using rule 82 (funCall -> LP func2 RP SC .)
    B               reduce using rule 82 (funCall -> LP func2 RP SC .)
    PENP            reduce using rule 82 (funCall -> LP func2 RP SC .)
    PENU            reduce using rule 82 (funCall -> LP func2 RP SC .)
    PEND            reduce using rule 82 (funCall -> LP func2 RP SC .)
    RB              reduce using rule 82 (funCall -> LP func2 RP SC .)


state 231

    (85) func3 -> C exp . func3
    (85) func3 -> . C exp func3
    (86) func3 -> . empty
    (125) empty -> .

    C               shift and go to state 197
    RP              reduce using rule 125 (empty -> .)

    func3                          shift and go to state 250
    empty                          shift and go to state 198

state 232

    (90) listAss -> LB lista3 RB . SC

    SC              shift and go to state 251


state 233

    (93) lista3 -> lista2 li4 .

    RB              reduce using rule 93 (lista3 -> lista2 li4 .)


state 234

    (94) li4 -> C . lista2 li4
    (91) lista2 -> . val
    (92) lista2 -> . ID
    (26) val -> . VALI
    (27) val -> . VALF

    ID              shift and go to state 202
    VALI            shift and go to state 199
    VALF            shift and go to state 201

    val                            shift and go to state 200
    lista2                         shift and go to state 252

state 235

    (95) li4 -> empty .

    RB              reduce using rule 95 (li4 -> empty .)


state 236

    (101) condition -> IF LP expresion RP block . con2
    (102) con2 -> . empty
    (103) con2 -> . ELSE block
    (125) empty -> .

    ELSE            shift and go to state 254
    IF              reduce using rule 125 (empty -> .)
    LA              reduce using rule 125 (empty -> .)
    L               reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    RE              reduce using rule 125 (empty -> .)
    REC             reduce using rule 125 (empty -> .)
    TRI             reduce using rule 125 (empty -> .)
    POL             reduce using rule 125 (empty -> .)
    LS              reduce using rule 125 (empty -> .)
    CIR             reduce using rule 125 (empty -> .)
    SQ              reduce using rule 125 (empty -> .)
    ARC             reduce using rule 125 (empty -> .)
    PENC            reduce using rule 125 (empty -> .)
    SETC            reduce using rule 125 (empty -> .)
    BACO            reduce using rule 125 (empty -> .)
    PENW            reduce using rule 125 (empty -> .)
    F               reduce using rule 125 (empty -> .)
    B               reduce using rule 125 (empty -> .)
    PENP            reduce using rule 125 (empty -> .)
    PENU            reduce using rule 125 (empty -> .)
    PEND            reduce using rule 125 (empty -> .)
    RB              reduce using rule 125 (empty -> .)

    con2                           shift and go to state 253
    empty                          shift and go to state 255

state 237

    (51) ex2 -> ex3 exp .

    RP              reduce using rule 51 (ex2 -> ex3 exp .)


state 238

    (43) one_par -> CIR LP exp p_fill RP . SC

    SC              shift and go to state 256


state 239

    (44) one_par -> SQ LP exp p_fill RP . SC

    SC              shift and go to state 257


state 240

    (49) p_arc -> ARC LP exp RP SC .

    IF              reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    LA              reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    L               reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    ID              reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    RE              reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    REC             reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    TRI             reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    POL             reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    LS              reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    CIR             reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    SQ              reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    ARC             reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    PENC            reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    SETC            reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    BACO            reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    PENW            reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    F               reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    B               reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    PENP            reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    PENU            reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    PEND            reduce using rule 49 (p_arc -> ARC LP exp RP SC .)
    RB              reduce using rule 49 (p_arc -> ARC LP exp RP SC .)


state 241

    (11) fun4 -> C type ID fun4 .

    RP              reduce using rule 11 (fun4 -> C type ID fun4 .)


state 242

    (28) position -> PENP LP exp C exp RP . SC

    SC              shift and go to state 258


state 243

    (39) rect -> REC LP exp C exp p_fill . RP SC

    RP              shift and go to state 259


state 244

    (96) lab -> LA LP stExp lab2 RP SC .

    IF              reduce using rule 96 (lab -> LA LP stExp lab2 RP SC .)
    LA              reduce using rule 96 (lab -> LA LP stExp lab2 RP SC .)
    L               reduce using rule 96 (lab -> LA LP stExp lab2 RP SC .)
    ID              reduce using rule 96 (lab -> LA LP stExp lab2 RP SC .)
    RE              reduce using rule 96 (lab -> LA LP stExp lab2 RP SC .)
    REC             reduce using rule 96 (lab -> LA LP stExp lab2 RP SC .)
    TRI             reduce using rule 96 (lab -> LA LP stExp lab2 RP SC .)
    POL             reduce using rule 96 (lab -> LA LP stExp lab2 RP SC .)
    LS              reduce using rule 96 (lab -> LA LP stExp lab2 RP SC .)
    CIR             reduce using rule 96 (lab -> LA LP stExp lab2 RP SC .)
    SQ              reduce using rule 96 (lab -> LA LP stExp lab2 RP SC .)
    ARC             reduce using rule 96 (lab -> LA LP stExp lab2 RP SC .)
    PENC            reduce using rule 96 (lab -> LA LP stExp lab2 RP SC .)
    SETC            reduce using rule 96 (lab -> LA LP stExp lab2 RP SC .)
    BACO            reduce using rule 96 (lab -> LA LP stExp lab2 RP SC .)
    PENW            reduce using rule 96 (lab -> LA LP stExp lab2 RP SC .)
    F               reduce using rule 96 (lab -> LA LP stExp lab2 RP SC .)
    B               reduce using rule 96 (lab -> LA LP stExp lab2 RP SC .)
    PENP            reduce using rule 96 (lab -> LA LP stExp lab2 RP SC .)
    PENU            reduce using rule 96 (lab -> LA LP stExp lab2 RP SC .)
    PEND            reduce using rule 96 (lab -> LA LP stExp lab2 RP SC .)
    RB              reduce using rule 96 (lab -> LA LP stExp lab2 RP SC .)


state 245

    (97) lab2 -> ADD stExp lab2 .

    RP              reduce using rule 97 (lab2 -> ADD stExp lab2 .)


state 246

    (45) poly -> POL LP idList p_fill RP SC .

    IF              reduce using rule 45 (poly -> POL LP idList p_fill RP SC .)
    LA              reduce using rule 45 (poly -> POL LP idList p_fill RP SC .)
    L               reduce using rule 45 (poly -> POL LP idList p_fill RP SC .)
    ID              reduce using rule 45 (poly -> POL LP idList p_fill RP SC .)
    RE              reduce using rule 45 (poly -> POL LP idList p_fill RP SC .)
    REC             reduce using rule 45 (poly -> POL LP idList p_fill RP SC .)
    TRI             reduce using rule 45 (poly -> POL LP idList p_fill RP SC .)
    POL             reduce using rule 45 (poly -> POL LP idList p_fill RP SC .)
    LS              reduce using rule 45 (poly -> POL LP idList p_fill RP SC .)
    CIR             reduce using rule 45 (poly -> POL LP idList p_fill RP SC .)
    SQ              reduce using rule 45 (poly -> POL LP idList p_fill RP SC .)
    ARC             reduce using rule 45 (poly -> POL LP idList p_fill RP SC .)
    PENC            reduce using rule 45 (poly -> POL LP idList p_fill RP SC .)
    SETC            reduce using rule 45 (poly -> POL LP idList p_fill RP SC .)
    BACO            reduce using rule 45 (poly -> POL LP idList p_fill RP SC .)
    PENW            reduce using rule 45 (poly -> POL LP idList p_fill RP SC .)
    F               reduce using rule 45 (poly -> POL LP idList p_fill RP SC .)
    B               reduce using rule 45 (poly -> POL LP idList p_fill RP SC .)
    PENP            reduce using rule 45 (poly -> POL LP idList p_fill RP SC .)
    PENU            reduce using rule 45 (poly -> POL LP idList p_fill RP SC .)
    PEND            reduce using rule 45 (poly -> POL LP idList p_fill RP SC .)
    RB              reduce using rule 45 (poly -> POL LP idList p_fill RP SC .)


state 247

    (32) colors2 -> LP exp C exp C . exp RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    term                           shift and go to state 93
    valExp                         shift and go to state 94
    exp                            shift and go to state 260
    fact2                          shift and go to state 99
    fact                           shift and go to state 101
    fact4                          shift and go to state 102

state 248

    (42) tria -> TRI LP exp C exp C . exp p_fill RP SC
    (57) exp -> . term exp2
    (62) term -> . fact term2
    (67) fact -> . fact2 exp RP
    (68) fact -> . fact4
    (69) fact2 -> . LP
    (70) fact4 -> . valExp
    (71) fact4 -> . ID
    (72) valExp -> . VALI
    (73) valExp -> . VALF

    LP              shift and go to state 95
    ID              shift and go to state 100
    VALI            shift and go to state 96
    VALF            shift and go to state 97

    term                           shift and go to state 93
    valExp                         shift and go to state 94
    exp                            shift and go to state 261
    fact2                          shift and go to state 99
    fact4                          shift and go to state 102
    fact                           shift and go to state 101

state 249

    (38) mueve2 -> LP exp C A exp . RP SC

    RP              shift and go to state 262


state 250

    (85) func3 -> C exp func3 .

    RP              reduce using rule 85 (func3 -> C exp func3 .)


state 251

    (90) listAss -> LB lista3 RB SC .

    IF              reduce using rule 90 (listAss -> LB lista3 RB SC .)
    LA              reduce using rule 90 (listAss -> LB lista3 RB SC .)
    L               reduce using rule 90 (listAss -> LB lista3 RB SC .)
    ID              reduce using rule 90 (listAss -> LB lista3 RB SC .)
    RE              reduce using rule 90 (listAss -> LB lista3 RB SC .)
    REC             reduce using rule 90 (listAss -> LB lista3 RB SC .)
    TRI             reduce using rule 90 (listAss -> LB lista3 RB SC .)
    POL             reduce using rule 90 (listAss -> LB lista3 RB SC .)
    LS              reduce using rule 90 (listAss -> LB lista3 RB SC .)
    CIR             reduce using rule 90 (listAss -> LB lista3 RB SC .)
    SQ              reduce using rule 90 (listAss -> LB lista3 RB SC .)
    ARC             reduce using rule 90 (listAss -> LB lista3 RB SC .)
    PENC            reduce using rule 90 (listAss -> LB lista3 RB SC .)
    SETC            reduce using rule 90 (listAss -> LB lista3 RB SC .)
    BACO            reduce using rule 90 (listAss -> LB lista3 RB SC .)
    PENW            reduce using rule 90 (listAss -> LB lista3 RB SC .)
    F               reduce using rule 90 (listAss -> LB lista3 RB SC .)
    B               reduce using rule 90 (listAss -> LB lista3 RB SC .)
    PENP            reduce using rule 90 (listAss -> LB lista3 RB SC .)
    PENU            reduce using rule 90 (listAss -> LB lista3 RB SC .)
    PEND            reduce using rule 90 (listAss -> LB lista3 RB SC .)
    RB              reduce using rule 90 (listAss -> LB lista3 RB SC .)
    FUN             reduce using rule 90 (listAss -> LB lista3 RB SC .)
    MAIN            reduce using rule 90 (listAss -> LB lista3 RB SC .)
    LB              reduce using rule 90 (listAss -> LB lista3 RB SC .)
    C               reduce using rule 90 (listAss -> LB lista3 RB SC .)
    RP              reduce using rule 90 (listAss -> LB lista3 RB SC .)


state 252

    (94) li4 -> C lista2 . li4
    (94) li4 -> . C lista2 li4
    (95) li4 -> . empty
    (125) empty -> .

    C               shift and go to state 234
    RB              reduce using rule 125 (empty -> .)

    li4                            shift and go to state 263
    empty                          shift and go to state 235

state 253

    (101) condition -> IF LP expresion RP block con2 .

    IF              reduce using rule 101 (condition -> IF LP expresion RP block con2 .)
    LA              reduce using rule 101 (condition -> IF LP expresion RP block con2 .)
    L               reduce using rule 101 (condition -> IF LP expresion RP block con2 .)
    ID              reduce using rule 101 (condition -> IF LP expresion RP block con2 .)
    RE              reduce using rule 101 (condition -> IF LP expresion RP block con2 .)
    REC             reduce using rule 101 (condition -> IF LP expresion RP block con2 .)
    TRI             reduce using rule 101 (condition -> IF LP expresion RP block con2 .)
    POL             reduce using rule 101 (condition -> IF LP expresion RP block con2 .)
    LS              reduce using rule 101 (condition -> IF LP expresion RP block con2 .)
    CIR             reduce using rule 101 (condition -> IF LP expresion RP block con2 .)
    SQ              reduce using rule 101 (condition -> IF LP expresion RP block con2 .)
    ARC             reduce using rule 101 (condition -> IF LP expresion RP block con2 .)
    PENC            reduce using rule 101 (condition -> IF LP expresion RP block con2 .)
    SETC            reduce using rule 101 (condition -> IF LP expresion RP block con2 .)
    BACO            reduce using rule 101 (condition -> IF LP expresion RP block con2 .)
    PENW            reduce using rule 101 (condition -> IF LP expresion RP block con2 .)
    F               reduce using rule 101 (condition -> IF LP expresion RP block con2 .)
    B               reduce using rule 101 (condition -> IF LP expresion RP block con2 .)
    PENP            reduce using rule 101 (condition -> IF LP expresion RP block con2 .)
    PENU            reduce using rule 101 (condition -> IF LP expresion RP block con2 .)
    PEND            reduce using rule 101 (condition -> IF LP expresion RP block con2 .)
    RB              reduce using rule 101 (condition -> IF LP expresion RP block con2 .)


state 254

    (103) con2 -> ELSE . block
    (104) block -> . LB block3 RB

    LB              shift and go to state 33

    block                          shift and go to state 264

state 255

    (102) con2 -> empty .

    IF              reduce using rule 102 (con2 -> empty .)
    LA              reduce using rule 102 (con2 -> empty .)
    L               reduce using rule 102 (con2 -> empty .)
    ID              reduce using rule 102 (con2 -> empty .)
    RE              reduce using rule 102 (con2 -> empty .)
    REC             reduce using rule 102 (con2 -> empty .)
    TRI             reduce using rule 102 (con2 -> empty .)
    POL             reduce using rule 102 (con2 -> empty .)
    LS              reduce using rule 102 (con2 -> empty .)
    CIR             reduce using rule 102 (con2 -> empty .)
    SQ              reduce using rule 102 (con2 -> empty .)
    ARC             reduce using rule 102 (con2 -> empty .)
    PENC            reduce using rule 102 (con2 -> empty .)
    SETC            reduce using rule 102 (con2 -> empty .)
    BACO            reduce using rule 102 (con2 -> empty .)
    PENW            reduce using rule 102 (con2 -> empty .)
    F               reduce using rule 102 (con2 -> empty .)
    B               reduce using rule 102 (con2 -> empty .)
    PENP            reduce using rule 102 (con2 -> empty .)
    PENU            reduce using rule 102 (con2 -> empty .)
    PEND            reduce using rule 102 (con2 -> empty .)
    RB              reduce using rule 102 (con2 -> empty .)


state 256

    (43) one_par -> CIR LP exp p_fill RP SC .

    IF              reduce using rule 43 (one_par -> CIR LP exp p_fill RP SC .)
    LA              reduce using rule 43 (one_par -> CIR LP exp p_fill RP SC .)
    L               reduce using rule 43 (one_par -> CIR LP exp p_fill RP SC .)
    ID              reduce using rule 43 (one_par -> CIR LP exp p_fill RP SC .)
    RE              reduce using rule 43 (one_par -> CIR LP exp p_fill RP SC .)
    REC             reduce using rule 43 (one_par -> CIR LP exp p_fill RP SC .)
    TRI             reduce using rule 43 (one_par -> CIR LP exp p_fill RP SC .)
    POL             reduce using rule 43 (one_par -> CIR LP exp p_fill RP SC .)
    LS              reduce using rule 43 (one_par -> CIR LP exp p_fill RP SC .)
    CIR             reduce using rule 43 (one_par -> CIR LP exp p_fill RP SC .)
    SQ              reduce using rule 43 (one_par -> CIR LP exp p_fill RP SC .)
    ARC             reduce using rule 43 (one_par -> CIR LP exp p_fill RP SC .)
    PENC            reduce using rule 43 (one_par -> CIR LP exp p_fill RP SC .)
    SETC            reduce using rule 43 (one_par -> CIR LP exp p_fill RP SC .)
    BACO            reduce using rule 43 (one_par -> CIR LP exp p_fill RP SC .)
    PENW            reduce using rule 43 (one_par -> CIR LP exp p_fill RP SC .)
    F               reduce using rule 43 (one_par -> CIR LP exp p_fill RP SC .)
    B               reduce using rule 43 (one_par -> CIR LP exp p_fill RP SC .)
    PENP            reduce using rule 43 (one_par -> CIR LP exp p_fill RP SC .)
    PENU            reduce using rule 43 (one_par -> CIR LP exp p_fill RP SC .)
    PEND            reduce using rule 43 (one_par -> CIR LP exp p_fill RP SC .)
    RB              reduce using rule 43 (one_par -> CIR LP exp p_fill RP SC .)


state 257

    (44) one_par -> SQ LP exp p_fill RP SC .

    IF              reduce using rule 44 (one_par -> SQ LP exp p_fill RP SC .)
    LA              reduce using rule 44 (one_par -> SQ LP exp p_fill RP SC .)
    L               reduce using rule 44 (one_par -> SQ LP exp p_fill RP SC .)
    ID              reduce using rule 44 (one_par -> SQ LP exp p_fill RP SC .)
    RE              reduce using rule 44 (one_par -> SQ LP exp p_fill RP SC .)
    REC             reduce using rule 44 (one_par -> SQ LP exp p_fill RP SC .)
    TRI             reduce using rule 44 (one_par -> SQ LP exp p_fill RP SC .)
    POL             reduce using rule 44 (one_par -> SQ LP exp p_fill RP SC .)
    LS              reduce using rule 44 (one_par -> SQ LP exp p_fill RP SC .)
    CIR             reduce using rule 44 (one_par -> SQ LP exp p_fill RP SC .)
    SQ              reduce using rule 44 (one_par -> SQ LP exp p_fill RP SC .)
    ARC             reduce using rule 44 (one_par -> SQ LP exp p_fill RP SC .)
    PENC            reduce using rule 44 (one_par -> SQ LP exp p_fill RP SC .)
    SETC            reduce using rule 44 (one_par -> SQ LP exp p_fill RP SC .)
    BACO            reduce using rule 44 (one_par -> SQ LP exp p_fill RP SC .)
    PENW            reduce using rule 44 (one_par -> SQ LP exp p_fill RP SC .)
    F               reduce using rule 44 (one_par -> SQ LP exp p_fill RP SC .)
    B               reduce using rule 44 (one_par -> SQ LP exp p_fill RP SC .)
    PENP            reduce using rule 44 (one_par -> SQ LP exp p_fill RP SC .)
    PENU            reduce using rule 44 (one_par -> SQ LP exp p_fill RP SC .)
    PEND            reduce using rule 44 (one_par -> SQ LP exp p_fill RP SC .)
    RB              reduce using rule 44 (one_par -> SQ LP exp p_fill RP SC .)


state 258

    (28) position -> PENP LP exp C exp RP SC .

    IF              reduce using rule 28 (position -> PENP LP exp C exp RP SC .)
    LA              reduce using rule 28 (position -> PENP LP exp C exp RP SC .)
    L               reduce using rule 28 (position -> PENP LP exp C exp RP SC .)
    ID              reduce using rule 28 (position -> PENP LP exp C exp RP SC .)
    RE              reduce using rule 28 (position -> PENP LP exp C exp RP SC .)
    REC             reduce using rule 28 (position -> PENP LP exp C exp RP SC .)
    TRI             reduce using rule 28 (position -> PENP LP exp C exp RP SC .)
    POL             reduce using rule 28 (position -> PENP LP exp C exp RP SC .)
    LS              reduce using rule 28 (position -> PENP LP exp C exp RP SC .)
    CIR             reduce using rule 28 (position -> PENP LP exp C exp RP SC .)
    SQ              reduce using rule 28 (position -> PENP LP exp C exp RP SC .)
    ARC             reduce using rule 28 (position -> PENP LP exp C exp RP SC .)
    PENC            reduce using rule 28 (position -> PENP LP exp C exp RP SC .)
    SETC            reduce using rule 28 (position -> PENP LP exp C exp RP SC .)
    BACO            reduce using rule 28 (position -> PENP LP exp C exp RP SC .)
    PENW            reduce using rule 28 (position -> PENP LP exp C exp RP SC .)
    F               reduce using rule 28 (position -> PENP LP exp C exp RP SC .)
    B               reduce using rule 28 (position -> PENP LP exp C exp RP SC .)
    PENP            reduce using rule 28 (position -> PENP LP exp C exp RP SC .)
    PENU            reduce using rule 28 (position -> PENP LP exp C exp RP SC .)
    PEND            reduce using rule 28 (position -> PENP LP exp C exp RP SC .)
    RB              reduce using rule 28 (position -> PENP LP exp C exp RP SC .)


state 259

    (39) rect -> REC LP exp C exp p_fill RP . SC

    SC              shift and go to state 265


state 260

    (32) colors2 -> LP exp C exp C exp . RP SC

    RP              shift and go to state 266


state 261

    (42) tria -> TRI LP exp C exp C exp . p_fill RP SC
    (40) p_fill -> . C FILL
    (41) p_fill -> . empty
    (125) empty -> .

    C               shift and go to state 188
    RP              reduce using rule 125 (empty -> .)

    empty                          shift and go to state 190
    p_fill                         shift and go to state 267

state 262

    (38) mueve2 -> LP exp C A exp RP . SC

    SC              shift and go to state 268


state 263

    (94) li4 -> C lista2 li4 .

    RB              reduce using rule 94 (li4 -> C lista2 li4 .)


state 264

    (103) con2 -> ELSE block .

    IF              reduce using rule 103 (con2 -> ELSE block .)
    LA              reduce using rule 103 (con2 -> ELSE block .)
    L               reduce using rule 103 (con2 -> ELSE block .)
    ID              reduce using rule 103 (con2 -> ELSE block .)
    RE              reduce using rule 103 (con2 -> ELSE block .)
    REC             reduce using rule 103 (con2 -> ELSE block .)
    TRI             reduce using rule 103 (con2 -> ELSE block .)
    POL             reduce using rule 103 (con2 -> ELSE block .)
    LS              reduce using rule 103 (con2 -> ELSE block .)
    CIR             reduce using rule 103 (con2 -> ELSE block .)
    SQ              reduce using rule 103 (con2 -> ELSE block .)
    ARC             reduce using rule 103 (con2 -> ELSE block .)
    PENC            reduce using rule 103 (con2 -> ELSE block .)
    SETC            reduce using rule 103 (con2 -> ELSE block .)
    BACO            reduce using rule 103 (con2 -> ELSE block .)
    PENW            reduce using rule 103 (con2 -> ELSE block .)
    F               reduce using rule 103 (con2 -> ELSE block .)
    B               reduce using rule 103 (con2 -> ELSE block .)
    PENP            reduce using rule 103 (con2 -> ELSE block .)
    PENU            reduce using rule 103 (con2 -> ELSE block .)
    PEND            reduce using rule 103 (con2 -> ELSE block .)
    RB              reduce using rule 103 (con2 -> ELSE block .)


state 265

    (39) rect -> REC LP exp C exp p_fill RP SC .

    IF              reduce using rule 39 (rect -> REC LP exp C exp p_fill RP SC .)
    LA              reduce using rule 39 (rect -> REC LP exp C exp p_fill RP SC .)
    L               reduce using rule 39 (rect -> REC LP exp C exp p_fill RP SC .)
    ID              reduce using rule 39 (rect -> REC LP exp C exp p_fill RP SC .)
    RE              reduce using rule 39 (rect -> REC LP exp C exp p_fill RP SC .)
    REC             reduce using rule 39 (rect -> REC LP exp C exp p_fill RP SC .)
    TRI             reduce using rule 39 (rect -> REC LP exp C exp p_fill RP SC .)
    POL             reduce using rule 39 (rect -> REC LP exp C exp p_fill RP SC .)
    LS              reduce using rule 39 (rect -> REC LP exp C exp p_fill RP SC .)
    CIR             reduce using rule 39 (rect -> REC LP exp C exp p_fill RP SC .)
    SQ              reduce using rule 39 (rect -> REC LP exp C exp p_fill RP SC .)
    ARC             reduce using rule 39 (rect -> REC LP exp C exp p_fill RP SC .)
    PENC            reduce using rule 39 (rect -> REC LP exp C exp p_fill RP SC .)
    SETC            reduce using rule 39 (rect -> REC LP exp C exp p_fill RP SC .)
    BACO            reduce using rule 39 (rect -> REC LP exp C exp p_fill RP SC .)
    PENW            reduce using rule 39 (rect -> REC LP exp C exp p_fill RP SC .)
    F               reduce using rule 39 (rect -> REC LP exp C exp p_fill RP SC .)
    B               reduce using rule 39 (rect -> REC LP exp C exp p_fill RP SC .)
    PENP            reduce using rule 39 (rect -> REC LP exp C exp p_fill RP SC .)
    PENU            reduce using rule 39 (rect -> REC LP exp C exp p_fill RP SC .)
    PEND            reduce using rule 39 (rect -> REC LP exp C exp p_fill RP SC .)
    RB              reduce using rule 39 (rect -> REC LP exp C exp p_fill RP SC .)


state 266

    (32) colors2 -> LP exp C exp C exp RP . SC

    SC              shift and go to state 269


state 267

    (42) tria -> TRI LP exp C exp C exp p_fill . RP SC

    RP              shift and go to state 270


state 268

    (38) mueve2 -> LP exp C A exp RP SC .

    IF              reduce using rule 38 (mueve2 -> LP exp C A exp RP SC .)
    LA              reduce using rule 38 (mueve2 -> LP exp C A exp RP SC .)
    L               reduce using rule 38 (mueve2 -> LP exp C A exp RP SC .)
    ID              reduce using rule 38 (mueve2 -> LP exp C A exp RP SC .)
    RE              reduce using rule 38 (mueve2 -> LP exp C A exp RP SC .)
    REC             reduce using rule 38 (mueve2 -> LP exp C A exp RP SC .)
    TRI             reduce using rule 38 (mueve2 -> LP exp C A exp RP SC .)
    POL             reduce using rule 38 (mueve2 -> LP exp C A exp RP SC .)
    LS              reduce using rule 38 (mueve2 -> LP exp C A exp RP SC .)
    CIR             reduce using rule 38 (mueve2 -> LP exp C A exp RP SC .)
    SQ              reduce using rule 38 (mueve2 -> LP exp C A exp RP SC .)
    ARC             reduce using rule 38 (mueve2 -> LP exp C A exp RP SC .)
    PENC            reduce using rule 38 (mueve2 -> LP exp C A exp RP SC .)
    SETC            reduce using rule 38 (mueve2 -> LP exp C A exp RP SC .)
    BACO            reduce using rule 38 (mueve2 -> LP exp C A exp RP SC .)
    PENW            reduce using rule 38 (mueve2 -> LP exp C A exp RP SC .)
    F               reduce using rule 38 (mueve2 -> LP exp C A exp RP SC .)
    B               reduce using rule 38 (mueve2 -> LP exp C A exp RP SC .)
    PENP            reduce using rule 38 (mueve2 -> LP exp C A exp RP SC .)
    PENU            reduce using rule 38 (mueve2 -> LP exp C A exp RP SC .)
    PEND            reduce using rule 38 (mueve2 -> LP exp C A exp RP SC .)
    RB              reduce using rule 38 (mueve2 -> LP exp C A exp RP SC .)


state 269

    (32) colors2 -> LP exp C exp C exp RP SC .

    IF              reduce using rule 32 (colors2 -> LP exp C exp C exp RP SC .)
    LA              reduce using rule 32 (colors2 -> LP exp C exp C exp RP SC .)
    L               reduce using rule 32 (colors2 -> LP exp C exp C exp RP SC .)
    ID              reduce using rule 32 (colors2 -> LP exp C exp C exp RP SC .)
    RE              reduce using rule 32 (colors2 -> LP exp C exp C exp RP SC .)
    REC             reduce using rule 32 (colors2 -> LP exp C exp C exp RP SC .)
    TRI             reduce using rule 32 (colors2 -> LP exp C exp C exp RP SC .)
    POL             reduce using rule 32 (colors2 -> LP exp C exp C exp RP SC .)
    LS              reduce using rule 32 (colors2 -> LP exp C exp C exp RP SC .)
    CIR             reduce using rule 32 (colors2 -> LP exp C exp C exp RP SC .)
    SQ              reduce using rule 32 (colors2 -> LP exp C exp C exp RP SC .)
    ARC             reduce using rule 32 (colors2 -> LP exp C exp C exp RP SC .)
    PENC            reduce using rule 32 (colors2 -> LP exp C exp C exp RP SC .)
    SETC            reduce using rule 32 (colors2 -> LP exp C exp C exp RP SC .)
    BACO            reduce using rule 32 (colors2 -> LP exp C exp C exp RP SC .)
    PENW            reduce using rule 32 (colors2 -> LP exp C exp C exp RP SC .)
    F               reduce using rule 32 (colors2 -> LP exp C exp C exp RP SC .)
    B               reduce using rule 32 (colors2 -> LP exp C exp C exp RP SC .)
    PENP            reduce using rule 32 (colors2 -> LP exp C exp C exp RP SC .)
    PENU            reduce using rule 32 (colors2 -> LP exp C exp C exp RP SC .)
    PEND            reduce using rule 32 (colors2 -> LP exp C exp C exp RP SC .)
    RB              reduce using rule 32 (colors2 -> LP exp C exp C exp RP SC .)


state 270

    (42) tria -> TRI LP exp C exp C exp p_fill RP . SC

    SC              shift and go to state 271


state 271

    (42) tria -> TRI LP exp C exp C exp p_fill RP SC .

    IF              reduce using rule 42 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    LA              reduce using rule 42 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    L               reduce using rule 42 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    ID              reduce using rule 42 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    RE              reduce using rule 42 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    REC             reduce using rule 42 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    TRI             reduce using rule 42 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    POL             reduce using rule 42 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    LS              reduce using rule 42 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    CIR             reduce using rule 42 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    SQ              reduce using rule 42 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    ARC             reduce using rule 42 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    PENC            reduce using rule 42 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    SETC            reduce using rule 42 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    BACO            reduce using rule 42 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    PENW            reduce using rule 42 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    F               reduce using rule 42 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    B               reduce using rule 42 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    PENP            reduce using rule 42 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    PENU            reduce using rule 42 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    PEND            reduce using rule 42 (tria -> TRI LP exp C exp C exp p_fill RP SC .)
    RB              reduce using rule 42 (tria -> TRI LP exp C exp C exp p_fill RP SC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ADD in state 93 resolved as shift
